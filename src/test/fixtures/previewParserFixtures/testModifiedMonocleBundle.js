(function(modules) { 
 	
 	var installedModules = {};

 	
 	function __webpack_require__(moduleId) {

 		
 		if(installedModules[moduleId])
 			return installedModules[moduleId].exports;

 		
 		var module = installedModules[moduleId] = {
 			exports: {},
 			id: moduleId,
 			loaded: false
 		};

 		
 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

 		
 		module.loaded = true;

 		
 		return module.exports;
 	}


 	
 	__webpack_require__.m = modules;

 	
 	__webpack_require__.c = installedModules;

 	
 	__webpack_require__.p = "";

 	
 	return __webpack_require__(0);
 })

 ([

 function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


 },

 function(module, exports, __webpack_require__) {

	 if (false) { (function () { var ReactHotAPI = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {
	
	'use strict';
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(34);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _App = __webpack_require__(171);
	
	var _App2 = _interopRequireDefault(_App);
	
	var _monocleStore = __webpack_require__(391);
	
	var _monocleStore2 = _interopRequireDefault(_monocleStore);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function render() {
	  _reactDom2['default'].render(_react2['default'].createElement(_App2['default'], { store: _monocleStore2['default'].getState() }), document.getElementById('content'));
	}
	
	
	render();
	
	
	_monocleStore2['default'].subscribe(render);
	
	 }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "index.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(3);


 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var ReactChildren = __webpack_require__(6);
	var ReactComponent = __webpack_require__(18);
	var ReactClass = __webpack_require__(21);
	var ReactDOMFactories = __webpack_require__(26);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypes = __webpack_require__(31);
	var ReactVersion = __webpack_require__(32);
	
	var onlyChild = __webpack_require__(33);
	var warning = __webpack_require__(12);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(28);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https:fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    
	    return mixin;
	  },
	
	  
	  
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  
	  __spread: __spread
	};
	
	module.exports = React;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};
	
	
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; 
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


 },

 function(module, exports) {

	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			
	
			
			var test1 = new String('abc');  
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var PooledClass = __webpack_require__(7);
	var ReactElement = __webpack_require__(10);
	
	var emptyFunction = __webpack_require__(13);
	var traverseAllChildren = __webpack_require__(15);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      
	      
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var invariant = __webpack_require__(9);
	
	
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	'use strict';
	
	
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http:facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; 
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; 
	    throw error;
	  }
	}
	
	module.exports = invariant;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var ReactCurrentOwner = __webpack_require__(11);
	
	var warning = __webpack_require__(12);
	var canDefineProperty = __webpack_require__(14);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    
	    
	    
	    
	    element._store = {};
	
	    
	    
	    
	    
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      
	      
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  
	  
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	
	    
	    var warnAboutAccessingKey = function () {
	      if (!specialPropKeyWarningShown) {
	        specialPropKeyWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https:fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingKey.isReactWarning = true;
	
	    var warnAboutAccessingRef = function () {
	      if (!specialPropRefWarningShown) {
	        specialPropRefWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https:fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingRef.isReactWarning = true;
	
	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: warnAboutAccessingKey,
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: warnAboutAccessingRef,
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  
	  
	  
	  
	  
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  
	  var props = _assign({}, element.props);
	
	  
	  var key = element.key;
	  var ref = element.ref;
	  
	  var self = element._self;
	  
	  
	  
	  var source = element._source;
	
	  
	  var owner = element._owner;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  
	  
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;
	
	module.exports = ReactElement;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	var ReactCurrentOwner = {
	
	  
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var emptyFunction = __webpack_require__(13);
	
	
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; 
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        
	        
	        
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	"use strict";
	
	
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    
	  }
	}
	
	module.exports = canDefineProperty;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactElement = __webpack_require__(10);
	
	var getIteratorFn = __webpack_require__(16);
	var invariant = __webpack_require__(9);
	var KeyEscapeUtils = __webpack_require__(17);
	var warning = __webpack_require__(12);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	
	
	var didWarnAboutMaps = false;
	
	
	function getComponentKey(component, index) {
	  
	  
	  if (component && typeof component === 'object' && component.key != null) {
	    
	    return KeyEscapeUtils.escape(component.key);
	  }
	  
	  return index.toString(36);
	}
	
	
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    
	    
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; 
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
	          didWarnAboutMaps = true;
	        }
	        
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; 
	
	
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactNoopUpdateQueue = __webpack_require__(19);
	
	var canDefineProperty = __webpack_require__(14);
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  
	  
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https:github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var warning = __webpack_require__(12);
	
	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : void 0;
	  }
	}
	
	
	var ReactNoopUpdateQueue = {
	
	  
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  
	  enqueueCallback: function (publicInstance, callback) {},
	
	  
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },
	
	  
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },
	
	  
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var ReactComponent = __webpack_require__(18);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocations = __webpack_require__(22);
	var ReactPropTypeLocationNames = __webpack_require__(24);
	var ReactNoopUpdateQueue = __webpack_require__(19);
	
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var keyMirror = __webpack_require__(23);
	var keyOf = __webpack_require__(25);
	var warning = __webpack_require__(12);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	
	var SpecPolicy = keyMirror({
	  
	  DEFINE_ONCE: null,
	  
	  DEFINE_MANY: null,
	  
	  OVERRIDE_BASE: null,
	  
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	
	var ReactClassInterface = {
	
	  
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  
	  statics: SpecPolicy.DEFINE_MANY,
	
	  
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  
	
	  
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  
	  render: SpecPolicy.DEFINE_ONCE,
	
	  
	
	  
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  
	
	  
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      
	      
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  
	  
	  
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      
	      
	      
	      
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          
	          
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            
	            
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      
	      
	      
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	
	var ReactClassMixin = {
	
	  
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	
	var ReactClass = {
	
	  
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      
	      
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https:fb.me/react-legacyfactory') : void 0;
	      }
	
	      
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      
	      
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          
	          
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      
	      
	      
	      
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var keyMirror = __webpack_require__(23);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var invariant = __webpack_require__(9);
	
	
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	"use strict";
	
	
	
	
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var ReactElement = __webpack_require__(10);
	
	var mapObject = __webpack_require__(27);
	
	
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    var ReactElementValidator = __webpack_require__(28);
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOMFactories;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactComponentTreeDevtool = __webpack_require__(29);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocations = __webpack_require__(22);
	
	var checkReactTypeSpec = __webpack_require__(30);
	
	var canDefineProperty = __webpack_require__(14);
	var getIteratorFn = __webpack_require__(16);
	var warning = __webpack_require__(12);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	
	var ownerHasKeyUseWarning = {};
	
	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();
	
	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}
	
	
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;
	
	  
	  
	  
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https:fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeDevtool.getCurrentStackAddendum(element)) : void 0;
	}
	
	
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    
	    
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    
	    
	    if (element == null) {
	      return element;
	    }
	
	    
	    
	    
	    
	    
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactCurrentOwner = __webpack_require__(11);
	
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	var tree = {};
	var unmountedIDs = {};
	var rootIDs = {};
	
	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      element: null,
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	    
	    
	    
	    unmountedIDs[id] = true;
	  }
	  update(tree[id]);
	}
	
	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;
	
	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeDevtool.getDisplayName(id);
	  var element = ReactComponentTreeDevtool.getElement(id);
	  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function (id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function (id, nextChildIDs) {
	    updateTree(id, function (item) {
	      item.childIDs = nextChildIDs;
	
	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
	        !(nextChild.displayName != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
	        !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	        if (nextChild.parentID == null) {
	          nextChild.parentID = id;
	          
	          
	          
	        }
	        !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
	      });
	    });
	  },
	  onSetOwner: function (id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetParent: function (id, parentID) {
	    updateTree(id, function (item) {
	      return item.parentID = parentID;
	    });
	  },
	  onSetText: function (id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onBeforeMountComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onMountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	    delete unmountedIDs[id];
	  },
	  onMountRootComponent: function (id) {
	    rootIDs[id] = true;
	  },
	  onUpdateComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    unmountedIDs[id] = true;
	    delete rootIDs[id];
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      
	      return;
	    }
	
	    for (var id in unmountedIDs) {
	      purgeDeep(id);
	    }
	    unmountedIDs = {};
	  },
	  isMounted: function (id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeDevtool.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getElement: function (id) {
	    var item = tree[id];
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function (id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = tree[id];
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function (id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function () {
	    return Object.keys(rootIDs);
	  },
	  getRegisteredIDs: function () {
	    return Object.keys(tree);
	  }
	};
	
	module.exports = ReactComponentTreeDevtool;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactComponentTreeDevtool = __webpack_require__(29);
	var ReactPropTypeLocationNames = __webpack_require__(24);
	
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	var loggedTypeFailures = {};
	
	
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      
	      
	      
	      try {
	        
	        
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        
	        
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (debugID !== null) {
	          componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
	        } else if (element !== null) {
	          componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocationNames = __webpack_require__(24);
	
	var emptyFunction = __webpack_require__(13);
	var getIteratorFn = __webpack_require__(16);
	
	
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	
	
	function is(x, y) {
	  
	  if (x === y) {
	    
	    
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    
	    return x !== x && y !== y;
	  }
	}
	
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      
	      
	      
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    
	    
	    
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	
	
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

 },

 function(module, exports) {

	
	
	'use strict';
	
	module.exports = '15.2.0';

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactElement = __webpack_require__(10);
	
	var invariant = __webpack_require__(9);
	
	
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(35);


 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDefaultInjection = __webpack_require__(39);
	var ReactMount = __webpack_require__(163);
	var ReactReconciler = __webpack_require__(65);
	var ReactUpdates = __webpack_require__(56);
	var ReactVersion = __webpack_require__(32);
	
	var findDOMNode = __webpack_require__(168);
	var getHostComponentFromComposite = __webpack_require__(169);
	var renderSubtreeIntoContainer = __webpack_require__(170);
	var warning = __webpack_require__(12);
	
	ReactDefaultInjection.inject();
	
	var React = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	
	
	
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(49);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https:fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https:fb.me/react-minification for more details.') : void 0;
	
	    
	    
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https:fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	module.exports = React;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var DOMProperty = __webpack_require__(37);
	var ReactDOMComponentFlags = __webpack_require__(38);
	
	var invariant = __webpack_require__(9);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID == null) {
	      
	      continue;
	    }
	    
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      
	      
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	
	function getNodeFromInstance(inst) {
	  
	  
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  
	  
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var invariant = __webpack_require__(9);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  
	  MUST_USE_PROPERTY: 0x1,
	  HAS_SIDE_EFFECTS: 0x2,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : _prodInvariant('49', propName) : void 0;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	
	
	
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  
	  properties: {},
	
	  
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  
	  _isCustomAttributeFunctions: [],
	
	  
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(40);
	var ChangeEventPlugin = __webpack_require__(55);
	var DefaultEventPluginOrder = __webpack_require__(72);
	var EnterLeaveEventPlugin = __webpack_require__(73);
	var HTMLDOMPropertyConfig = __webpack_require__(78);
	var ReactComponentBrowserEnvironment = __webpack_require__(79);
	var ReactDOMComponent = __webpack_require__(93);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMEmptyComponent = __webpack_require__(134);
	var ReactDOMTreeTraversal = __webpack_require__(135);
	var ReactDOMTextComponent = __webpack_require__(136);
	var ReactDefaultBatchingStrategy = __webpack_require__(137);
	var ReactEventListener = __webpack_require__(138);
	var ReactInjection = __webpack_require__(141);
	var ReactReconcileTransaction = __webpack_require__(142);
	var SVGDOMPropertyConfig = __webpack_require__(150);
	var SelectEventPlugin = __webpack_require__(151);
	var SimpleEventPlugin = __webpack_require__(152);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    
	    
	    
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var FallbackCompositionState = __webpack_require__(50);
	var SyntheticCompositionEvent = __webpack_require__(52);
	var SyntheticInputEvent = __webpack_require__(54);
	
	var keyOf = __webpack_require__(25);
	
	var END_KEYCODES = [9, 13, 27, 32]; 
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	
	
	
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	
	
	
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	
	var hasSpaceKeypress = false;
	
	
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      
	      
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      
	      return true;
	    default:
	      return false;
	  }
	}
	
	
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	
	var currentComposition = null;
	
	
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    
	    
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    
	    
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      
	      var chars = nativeEvent.data;
	
	      
	      
	      
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      
	      return null;
	  }
	}
	
	
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  
	  
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      
	      
	      return null;
	    case topLevelTypes.topKeyPress:
	      
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  
	  
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var keyMirror = __webpack_require__(23);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(45);
	
	var accumulateInto = __webpack_require__(47);
	var forEachAccumulated = __webpack_require__(48);
	var warning = __webpack_require__(12);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var EventPluginRegistry = __webpack_require__(44);
	var EventPluginUtils = __webpack_require__(45);
	var ReactErrorUtils = __webpack_require__(46);
	
	var accumulateInto = __webpack_require__(47);
	var forEachAccumulated = __webpack_require__(48);
	var invariant = __webpack_require__(9);
	
	
	var listenerBank = {};
	
	
	var eventQueue = null;
	
	
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	
	var EventPluginHub = {
	
	  
	  injection: {
	
	    
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[inst._rootNodeID] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
	  },
	
	  
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[inst._rootNodeID];
	    }
	  },
	
	  
	  deleteAllListeners: function (inst) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][inst._rootNodeID]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][inst._rootNodeID];
	    }
	  },
	
	  
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  
	  processEventQueue: function (simulated) {
	    
	    
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var invariant = __webpack_require__(9);
	
	
	var EventPluginOrder = null;
	
	
	var namesToPlugins = {};
	
	
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	
	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	
	var EventPluginRegistry = {
	
	  
	  plugins: [],
	
	  
	  eventNameDispatchConfigs: {},
	
	  
	  registrationNameModules: {},
	
	  
	  registrationNameDependencies: {},
	
	  
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var EventConstants = __webpack_require__(41);
	var ReactErrorUtils = __webpack_require__(46);
	
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	
	
	
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var caughtError = null;
	
	
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var invariant = __webpack_require__(9);
	
	
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	  if (current == null) {
	    return next;
	  }
	
	  
	  
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);
	
	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }
	
	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }
	
	  if (nextIsArray) {
	    
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};
	
	module.exports = forEachAccumulated;

 },

 function(module, exports) {

	
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM 
	
	};
	
	module.exports = ExecutionEnvironment;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var PooledClass = __webpack_require__(7);
	
	var getTextContentAccessor = __webpack_require__(51);
	
	
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(49);
	
	var contentKey = null;
	
	
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    
	    
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	
	var CompositionEventInterface = {
	  data: null
	};
	
	
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var PooledClass = __webpack_require__(7);
	
	var emptyFunction = __webpack_require__(13);
	var warning = __webpack_require__(12);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	
	var EventInterface = {
	  type: null,
	  target: null,
	  
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; 
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https:fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    
	  }
	}
	
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https:fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	
	var InputEventInterface = {
	  data: null
	};
	
	
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);
	var SyntheticEvent = __webpack_require__(53);
	
	var getEventTarget = __webpack_require__(69);
	var isEventSupported = __webpack_require__(70);
	var isTextInputElement = __webpack_require__(71);
	var keyOf = __webpack_require__(25);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    
	    
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  
	  
	  
	  
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}
	
	
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  
	  
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    
	    
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    
	    
	    //
	    
	    
	    
	    
	    
	    
	    
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	
	function shouldUseClickEvent(elem) {
	  
	  
	  
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}
	
	
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(7);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactInstrumentation = __webpack_require__(59);
	var ReactReconciler = __webpack_require__(65);
	var Transaction = __webpack_require__(68);
	
	var invariant = __webpack_require__(9);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      
	      
	      
	      
	      
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    
	    
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  
	  
	  
	  dirtyComponents.sort(mountOrderComparator);
	
	  
	  
	  
	  
	  
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    
	    
	    
	    var component = dirtyComponents[i];
	
	    
	    
	    
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	
	  
	  
	  
	  
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	};
	
	
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  
	  
	  
	  
	  
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var PooledClass = __webpack_require__(7);
	
	var invariant = __webpack_require__(9);
	
	
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	_assign(CallbackQueue.prototype, {
	
	  
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },
	
	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },
	
	  
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  
	  destructor: function () {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	var ReactFeatureFlags = {
	  
	  
	  
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactDebugTool = __webpack_require__(60);
	
	module.exports = { debugTool: ReactDebugTool };

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(49);
	
	var performanceNow = __webpack_require__(61);
	var warning = __webpack_require__(12);
	
	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};
	
	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  if (process.env.NODE_ENV !== 'production') {
	    eventHandlers.forEach(function (handler) {
	      try {
	        if (handler[handlerFunctionName]) {
	          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	        }
	      } catch (e) {
	        process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	        handlerDoesThrowForEvent[handlerFunctionName] = true;
	      }
	    });
	  }
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;
	
	function clearHistory() {
	  ReactComponentTreeDevtool.purgeUnmountedComponents();
	  ReactHostOperationHistoryDevtool.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	    var parentID = ReactComponentTreeDevtool.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeDevtool.getDisplayName(id),
	      text: ReactComponentTreeDevtool.getText(id),
	      updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
	      childIDs: ReactComponentTreeDevtool.getChildIDs(id),
	      
	      ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  if (process.env.NODE_ENV !== 'production') {
	    var previousStartTime = currentFlushStartTime;
	    var previousMeasurements = currentFlushMeasurements || [];
	    var previousOperations = ReactHostOperationHistoryDevtool.getHistory();
	
	    if (!isProfiling || currentFlushNesting === 0) {
	      currentFlushStartTime = null;
	      currentFlushMeasurements = null;
	      clearHistory();
	      return;
	    }
	
	    if (previousMeasurements.length || previousOperations.length) {
	      var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
	      flushHistory.push({
	        duration: performanceNow() - previousStartTime,
	        measurements: previousMeasurements || [],
	        operations: previousOperations || [],
	        treeSnapshot: getTreeSnapshot(registeredIDs)
	      });
	    }
	
	    clearHistory();
	    currentFlushStartTime = performanceNow();
	    currentFlushMeasurements = [];
	  }
	}
	
	function checkDebugID(debugID) {
	  process.env.NODE_ENV !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
	}
	
	function beginLifeCycleTimer(debugID, timerType) {
	  if (!isProfiling || currentFlushNesting === 0) {
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(!currentTimerType, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	function endLifeCycleTimer(debugID, timerType) {
	  if (!isProfiling || currentFlushNesting === 0) {
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(currentTimerType === timerType, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	  currentFlushMeasurements.push({
	    timerType: timerType,
	    instanceID: debugID,
	    duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	  });
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();
	
	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;
	
	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	var ReactDebugTool = {
	  addDevtool: function (devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function (devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      if (isProfiling) {
	        return;
	      }
	
	      isProfiling = true;
	      flushHistory.length = 0;
	      resetMeasurements();
	    }
	  },
	  endProfiling: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      if (!isProfiling) {
	        return;
	      }
	
	      isProfiling = false;
	      resetMeasurements();
	    }
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      currentFlushNesting++;
	      resetMeasurements();
	      pauseCurrentLifeCycleTimer();
	    }
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      resetMeasurements();
	      currentFlushNesting--;
	      resumeCurrentLifeCycleTimer();
	    }
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    if (process.env.NODE_ENV !== 'production') {
	      beginLifeCycleTimer(debugID, timerType);
	    }
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    if (process.env.NODE_ENV !== 'production') {
	      endLifeCycleTimer(debugID, timerType);
	    }
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginReconcilerTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginReconcilerTimer', debugID, timerType);
	  },
	  onEndReconcilerTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onEndReconcilerTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetDisplayName: function (debugID, displayName) {
	    checkDebugID(debugID);
	    emitEvent('onSetDisplayName', debugID, displayName);
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onSetOwner: function (debugID, ownerDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetOwner', debugID, ownerDebugID);
	  },
	  onSetParent: function (debugID, parentDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetParent', debugID, parentDebugID);
	  },
	  onSetText: function (debugID, text) {
	    checkDebugID(debugID);
	    emitEvent('onSetText', debugID, text);
	  },
	  onMountRootComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountRootComponent', debugID);
	  },
	  onBeforeMountComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeMountComponent', debugID, element);
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactInvalidSetStateWarningDevTool = __webpack_require__(63);
	  var ReactHostOperationHistoryDevtool = __webpack_require__(64);
	  var ReactComponentTreeDevtool = __webpack_require__(29);
	  ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
	  ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
	  ReactDebugTool.addDevtool(ReactHostOperationHistoryDevtool);
	  var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	  if (/[?&]react_perf\b/.test(url)) {
	    ReactDebugTool.beginProfiling();
	  }
	}
	
	module.exports = ReactDebugTool;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	
	
	var performance = __webpack_require__(62);
	
	var performanceNow;
	
	
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(49);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var warning = __webpack_require__(12);
	
	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningDevTool = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningDevTool;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	var history = [];
	
	var ReactHostOperationHistoryDevtool = {
	  onHostOperation: function (debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryDevtool._preventClearing) {
	      
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};
	
	module.exports = ReactHostOperationHistoryDevtool;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactRef = __webpack_require__(66);
	var ReactInstrumentation = __webpack_require__(59);
	
	var invariant = __webpack_require__(9);
	
	
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      
	      
	      
	      
	      
	      
	      
	
	      
	      
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      
	      
	      !(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : _prodInvariant('121', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactOwner = __webpack_require__(67);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  
	  
	  
	  
	  
	
	  
	  
	  
	  
	  
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return(
	    
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var invariant = __webpack_require__(9);
	
	
	var ReactOwner = {
	
	  
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    
	    
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var invariant = __webpack_require__(9);
	
	
	var Mixin = {
	  
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      
	      
	      
	      
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          
	          
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          
	          
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        
	        
	        
	        
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          
	          
	          
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        
	        
	        
	        
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          
	          
	          
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  
	  
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(49);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  
	  
	  document.implementation.hasFeature('', '') !== true;
	}
	
	
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}
	
	module.exports = isTextInputElement;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var keyOf = __webpack_require__(25);
	
	
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(36);
	var SyntheticMouseEvent = __webpack_require__(74);
	
	var keyOf = __webpack_require__(25);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      
	      win = nativeEventTarget;
	    } else {
	      
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(75);
	var ViewportMetrics = __webpack_require__(76);
	
	var getEventModifierState = __webpack_require__(77);
	
	
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    
	    
	    
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    
	    
	    
	    
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	var getEventTarget = __webpack_require__(69);
	
	
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

 },

 function(module, exports) {

	
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	
	
	
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var DOMProperty = __webpack_require__(37);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    
	    
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, 
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    
	    
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    
	    
	    
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    
	    autoSave: 0,
	    
	    color: 0,
	    
	    
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    
	    
	    
	    itemID: 0,
	    itemRef: 0,
	    
	    
	    results: 0,
	    
	    
	    security: 0,
	    
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(80);
	var ReactDOMIDOperations = __webpack_require__(92);
	
	
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
	
	  
	  unmountIDFromEnvironment: function (rootNodeID) {}
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(81);
	var Danger = __webpack_require__(87);
	var ReactMultiChildUpdateTypes = __webpack_require__(91);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstrumentation = __webpack_require__(59);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);
	var setInnerHTML = __webpack_require__(83);
	var setTextContent = __webpack_require__(85);
	
	function getNodeAfter(parentNode, node) {
	  
	  
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  
	  
	  
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    
	    
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      
	      
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}
	
	
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(82);
	var setInnerHTML = __webpack_require__(83);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);
	var setTextContent = __webpack_require__(85);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  
	  
	  
	  
	  
	  
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

 },

 function(module, exports) {

	
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(49);
	var DOMNamespaces = __webpack_require__(82);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);
	
	
	var reusableSVGContainer;
	
	
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  
	  
	  
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  
	  
	  
	  
	
	  
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      
	      
	      
	      
	      
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      
	      
	      
	      
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        
	        
	        
	        
	        
	        
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        
	        
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

 },

 function(module, exports) {

	
	
	
	
	'use strict';
	
	
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(49);
	var escapeTextContentForBrowser = __webpack_require__(86);
	var setInnerHTML = __webpack_require__(83);
	
	
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	
	var matchHtmlRegExp = /["'&<>]/;
	
	
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        
	        escape = '&quot;';
	        break;
	      case 38:
	        
	        escape = '&amp;';
	        break;
	      case 39:
	        
	        escape = '&#x27;'; 
	        break;
	      case 60:
	        
	        escape = '&lt;';
	        break;
	      case 62:
	        
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	
	
	
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    
	    
	    
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var DOMLazyTree = __webpack_require__(81);
	var ExecutionEnvironment = __webpack_require__(49);
	
	var createNodesFromMarkup = __webpack_require__(88);
	var emptyFunction = __webpack_require__(13);
	var getMarkupWrap = __webpack_require__(90);
	var invariant = __webpack_require__(9);
	
	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';
	
	
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}
	
	var Danger = {
	
	  
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString for server rendering.') : _prodInvariant('51') : void 0;
	    var nodeName;
	    var markupByNodeName = {};
	    
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : _prodInvariant('52') : void 0;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];
	
	      
	      
	      
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];
	
	          
	          
	          
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }
	
	      
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction 
	      );
	
	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
	
	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);
	
	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : _prodInvariant('53') : void 0;
	
	          resultList[resultIndex] = renderNode;
	
	          
	          
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }
	
	    
	    
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : _prodInvariant('54') : void 0;
	
	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : _prodInvariant('55', markupList.length, resultList.length) : void 0;
	
	    return resultList;
	  },
	
	  
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {'use strict';
	
	
	
	
	
	var ExecutionEnvironment = __webpack_require__(49);
	
	var createArrayFromMixed = __webpack_require__(89);
	var getMarkupWrap = __webpack_require__(90);
	var invariant = __webpack_require__(9);
	
	
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	
	var nodeNamePattern = /^\s*<(\w+)/;
	
	
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {'use strict';
	
	
	
	var invariant = __webpack_require__(9);
	
	
	function toArray(obj) {
	  var length = obj.length;
	
	  
	  
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  
	  
	  
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      
	    }
	  }
	
	  
	  
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	
	function hasArrayNature(obj) {
	  return(
	    
	    !!obj && (
	    
	    typeof obj == 'object' || typeof obj == 'function') &&
	    
	    'length' in obj &&
	    
	    !('setInterval' in obj) &&
	    
	    
	    typeof obj.nodeType != 'number' && (
	    
	    Array.isArray(obj) ||
	    
	    'callee' in obj ||
	    
	    'item' in obj)
	  );
	}
	
	
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {'use strict';
	
	
	
	
	
	var ExecutionEnvironment = __webpack_require__(49);
	
	var invariant = __webpack_require__(9);
	
	
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	
	
	
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var keyMirror = __webpack_require__(23);
	
	
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(80);
	var ReactDOMComponentTree = __webpack_require__(36);
	
	
	var ReactDOMIDOperations = {
	
	  
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var AutoFocusUtils = __webpack_require__(94);
	var CSSPropertyOperations = __webpack_require__(96);
	var DOMLazyTree = __webpack_require__(81);
	var DOMNamespaces = __webpack_require__(82);
	var DOMProperty = __webpack_require__(37);
	var DOMPropertyOperations = __webpack_require__(104);
	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactBrowserEventEmitter = __webpack_require__(109);
	var ReactComponentBrowserEnvironment = __webpack_require__(79);
	var ReactDOMButton = __webpack_require__(112);
	var ReactDOMComponentFlags = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMInput = __webpack_require__(114);
	var ReactDOMOption = __webpack_require__(116);
	var ReactDOMSelect = __webpack_require__(117);
	var ReactDOMTextarea = __webpack_require__(118);
	var ReactInstrumentation = __webpack_require__(59);
	var ReactMultiChild = __webpack_require__(119);
	var ReactServerRenderingTransaction = __webpack_require__(131);
	
	var emptyFunction = __webpack_require__(13);
	var escapeTextContentForBrowser = __webpack_require__(86);
	var invariant = __webpack_require__(9);
	var isEventSupported = __webpack_require__(70);
	var keyOf = __webpack_require__(25);
	var shallowEqual = __webpack_require__(132);
	var validateDOMNesting = __webpack_require__(133);
	var warning = __webpack_require__(12);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  
	  
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must not have `children` or use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('59', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    
	    
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    var contentDebugID = debugID + '#text';
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    this._contentDebugID = contentDebugID;
	    var text = '' + content;
	
	    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
	    ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
	    ReactInstrumentation.debugTool.onSetText(contentDebugID, text);
	
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	
	
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  
	  
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	
	
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	
	
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	
	
	
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; 
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = null;
	  this._domID = null;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    
	    
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        
	        
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          
	          
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          
	          
	          
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    
	    
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    if (this._tag === 'select') {
	      
	      
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },
	
	  
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          
	          
	          
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        
	        
	        
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    
	    
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setContentChildForInstrumentation.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._domID = null;
	    this._wrapperState = null;
	
	    if (process.env.NODE_ENV !== 'production') {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(36);
	
	var focusNode = __webpack_require__(95);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function focusNode(node) {
	  
	  
	  
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var CSSProperty = __webpack_require__(97);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactInstrumentation = __webpack_require__(59);
	
	var camelizeStyleName = __webpack_require__(98);
	var dangerousStyleValue = __webpack_require__(100);
	var hyphenateStyleName = __webpack_require__(101);
	var memoizeStringOnly = __webpack_require__(103);
	var warning = __webpack_require__(12);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	
	var CSSPropertyOperations = {
	
	  
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          
	          
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	
	
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var camelize = __webpack_require__(99);
	
	var msPattern = /^-ms-/;
	
	
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

 },

 function(module, exports) {

	"use strict";
	
	
	
	var _hyphenPattern = /-(.)/g;
	
	
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var CSSProperty = __webpack_require__(97);
	var warning = __webpack_require__(12);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	
	function dangerousStyleValue(name, value, component) {
	  
	  
	  
	  
	  
	  
	  
	  
	  
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; 
	  }
	
	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      
	      
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var hyphenate = __webpack_require__(102);
	
	var msPattern = /^ms-/;
	
	
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

 },

 function(module, exports) {

	'use strict';
	
	
	
	var _uppercasePattern = /([A-Z])/g;
	
	
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var DOMProperty = __webpack_require__(37);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMInstrumentation = __webpack_require__(105);
	var ReactInstrumentation = __webpack_require__(59);
	
	var quoteAttributeValueForBrowser = __webpack_require__(108);
	var warning = __webpack_require__(12);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	
	var DOMPropertyOperations = {
	
	  
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  
	  createMarkupForProperty: function (name, value) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
	    }
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        
	        
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          
	          
	          node[propName] = value;
	        }
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        
	        
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },
	
	  
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          
	          node[propName] = false;
	        } else {
	          if (!propertyInfo.hasSideEffects || '' + node[propName] !== '') {
	            node[propName] = '';
	          }
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactDOMDebugTool = __webpack_require__(106);
	
	module.exports = { debugTool: ReactDOMDebugTool };

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var ReactDOMUnknownPropertyDevtool = __webpack_require__(107);
	var ReactDebugTool = __webpack_require__(60);
	
	var warning = __webpack_require__(12);
	
	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};
	
	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  if (process.env.NODE_ENV !== 'production') {
	    eventHandlers.forEach(function (handler) {
	      try {
	        if (handler[handlerFunctionName]) {
	          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	        }
	      } catch (e) {
	        process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	        handlerDoesThrowForEvent[handlerFunctionName] = true;
	      }
	    });
	  }
	}
	
	var ReactDOMDebugTool = {
	  addDevtool: function (devtool) {
	    ReactDebugTool.addDevtool(devtool);
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function (devtool) {
	    ReactDebugTool.removeDevtool(devtool);
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  onCreateMarkupForProperty: function (name, value) {
	    emitEvent('onCreateMarkupForProperty', name, value);
	  },
	  onSetValueForProperty: function (node, name, value) {
	    emitEvent('onSetValueForProperty', node, name, value);
	  },
	  onDeleteValueForProperty: function (node, name) {
	    emitEvent('onDeleteValueForProperty', node, name);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);
	
	module.exports = ReactDOMDebugTool;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var DOMProperty = __webpack_require__(37);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactComponentTreeDevtool = __webpack_require__(29);
	
	var warning = __webpack_require__(12);
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,
	
	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};
	
	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      
	      
	      
	      
	      return false;
	    }
	  };
	}
	
	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }
	
	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	  }
	};
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}
	
	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyDevtool;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(86);
	
	
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var EventConstants = __webpack_require__(41);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactEventEmitterMixin = __webpack_require__(110);
	var ViewportMetrics = __webpack_require__(76);
	
	var getVendorPrefixedEventName = __webpack_require__(111);
	var isEventSupported = __webpack_require__(70);
	
	
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	
	
	
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  
	  
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  
	  ReactEventListener: null,
	
	  injection: {
	    
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            
	            
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            
	            
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(43);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(49);
	
	
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	
	var prefixedEventNames = {};
	
	
	var style = {};
	
	
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  
	  
	  
	  
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var DisabledInputUtils = __webpack_require__(113);
	
	
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};
	
	module.exports = ReactDOMButton;

 },

 function(module, exports) {

	
	
	'use strict';
	
	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }
	
	    return hostProps;
	  }
	};
	
	module.exports = DisabledInputUtils;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var DisabledInputUtils = __webpack_require__(113);
	var DOMPropertyOperations = __webpack_require__(104);
	var LinkedValueUtils = __webpack_require__(115);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueNull = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `input` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}
	
	
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      
	      
	      type: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	      warnIfValueIsNull(props);
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);
	
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	
	      
	      
	      var newValue = '' + value;
	
	      
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    
	    
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    node.value = node.value; 
	
	    
	    
	    
	    
	    
	    var name = node.name;
	    node.name = undefined;
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    node.name = name;
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  
	  
	  
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    
	    
	    
	    
	    
	    
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      
	      
	      
	      
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      
	      
	      
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactPropTypes = __webpack_require__(31);
	var ReactPropTypeLocations = __webpack_require__(22);
	
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        
	        
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var ReactChildren = __webpack_require__(6);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMSelect = __webpack_require__(117);
	
	var warning = __webpack_require__(12);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  
	  
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    
	    
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    
	    
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var DisabledInputUtils = __webpack_require__(113);
	var LinkedValueUtils = __webpack_require__(115);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);
	
	var warning = __webpack_require__(12);
	
	var didWarnValueLink = false;
	var didWarnValueNull = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `select` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    
	    
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	      warnIfValueIsNull(props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    
	    
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);
	    }
	
	    
	    
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var DisabledInputUtils = __webpack_require__(113);
	var LinkedValueUtils = __webpack_require__(115);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	var didWarnValueLink = false;
	var didWarnValueNull = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `textarea` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    
	    
	    
	    
	    
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	      warnIfValueIsNull(props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      
	      
	      var newValue = '' + value;
	
	      
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    
	    
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    
	    node.value = node.textContent; 
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactComponentEnvironment = __webpack_require__(120);
	var ReactInstanceMap = __webpack_require__(121);
	var ReactInstrumentation = __webpack_require__(59);
	var ReactMultiChildUpdateTypes = __webpack_require__(91);
	
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactReconciler = __webpack_require__(65);
	var ReactChildReconciler = __webpack_require__(122);
	
	var emptyFunction = __webpack_require__(13);
	var flattenChildren = __webpack_require__(130);
	var invariant = __webpack_require__(9);
	
	
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	
	function makeMove(child, afterNode, toIndex) {
	  
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	
	function makeRemove(child, node) {
	  
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	
	function makeSetMarkup(markup) {
	  
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	
	function makeTextContent(textContent) {
	  
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setParentForInstrumentation = emptyFunction;
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setParentForInstrumentation = function (child) {
	    if (child._debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
	    }
	  };
	  setChildrenForInstrumentation = function (children) {
	    ReactInstrumentation.debugTool.onSetChildren(getDebugID(this), children ? Object.keys(children).map(function (key) {
	      return children[key]._debugID;
	    }) : []);
	  };
	}
	
	
	var ReactMultiChild = {
	
	  
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	      return nextChildren;
	    },
	
	    
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          if (process.env.NODE_ENV !== 'production') {
	            setParentForInstrumentation.call(this, child);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      
	      
	      var lastIndex = 0;
	      var nextIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            
	          }
	          
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      
	      
	      
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    
	    _mountChildAtIndex: function (child, afterNode, index, transaction, context) {
	      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var invariant = __webpack_require__(9);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  
	  unmountIDFromEnvironment: null,
	
	  
	  replaceNodeWithMarkup: null,
	
	  
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	
	
	var ReactInstanceMap = {
	
	  
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(65);
	
	var ReactComponentTreeDevtool = __webpack_require__(29);
	var instantiateReactComponent = __webpack_require__(123);
	var KeyEscapeUtils = __webpack_require__(17);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var traverseAllChildren = __webpack_require__(15);
	var warning = __webpack_require__(12);
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child);
	  }
	}
	
	
	var ReactChildReconciler = {
	  
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID 
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  
	  updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {
	    
	    
	    
	    
	    
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        
	        var nextChildInstance = instantiateReactComponent(nextElement);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var ReactCompositeComponent = __webpack_require__(124);
	var ReactEmptyComponent = __webpack_require__(128);
	var ReactHostComponent = __webpack_require__(129);
	var ReactInstrumentation = __webpack_require__(59);
	
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function getDisplayName(instance) {
	  var element = instance._currentElement;
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else if (instance.getName) {
	    return instance.getName() || 'Unknown';
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	var nextDebugID = 1;
	
	
	function instantiateReactComponent(node) {
	  var instance;
	
	  var isEmpty = node === null || node === false;
	  if (isEmpty) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;
	
	    
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      
	      
	      
	      instance = new element.type(element);
	
	      
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  
	  
	  
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    var debugID = isEmpty ? 0 : nextDebugID++;
	    instance._debugID = debugID;
	
	    if (debugID !== 0) {
	      var displayName = getDisplayName(instance);
	      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
	      var owner = node && node._owner;
	      if (owner) {
	        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
	      }
	    }
	  }
	
	  
	  
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var ReactComponentEnvironment = __webpack_require__(120);
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactElement = __webpack_require__(10);
	var ReactErrorUtils = __webpack_require__(46);
	var ReactInstanceMap = __webpack_require__(121);
	var ReactInstrumentation = __webpack_require__(59);
	var ReactNodeTypes = __webpack_require__(125);
	var ReactPropTypeLocations = __webpack_require__(22);
	var ReactReconciler = __webpack_require__(65);
	var ReactUpdateQueue = __webpack_require__(126);
	
	var checkReactTypeSpec = __webpack_require__(30);
	
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var warning = __webpack_require__(12);
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}
	
	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}
	
	function shouldConstruct(Component) {
	  return Component.prototype && Component.prototype.isReactComponent;
	}
	
	
	
	
	var nextMountID = 1;
	
	
	var ReactCompositeComponentMixin = {
	
	  
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    
	    this._pendingCallbacks = null;
	
	    
	    this._calledComponentWillUnmount = false;
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    
	    var inst = this._constructComponent(publicProps, publicContext);
	    var renderedElement;
	
	    
	    if (!shouldConstruct(Component) && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      
	      
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    
	    
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;
	
	    this._instance = inst;
	
	    
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      
	      
	      
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (publicProps, publicContext) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(publicProps, publicContext);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(publicProps, publicContext);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (publicProps, publicContext) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (shouldConstruct(Component)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, ReactUpdateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      
	      
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, ReactUpdateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      
	      
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      
	      
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    this._renderedNodeType = ReactNodeTypes.getType(renderedElement);
	    var child = this._instantiateReactComponent(renderedElement);
	    this._renderedComponent = child;
	    if (process.env.NODE_ENV !== 'production') {
	      if (child._debugID !== 0 && this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	      }
	    }
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    
	    
	    
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    
	    
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;
	
	    
	    
	    
	    ReactInstanceMap.remove(inst);
	
	    
	    
	    
	    
	    
	  },
	
	  
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	    var nextProps;
	
	    
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    nextProps = nextParentElement.props;
	
	    
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    
	    
	    
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate && inst.shouldComponentUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	      shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      
	      
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      this._renderedNodeType = ReactNodeTypes.getType(nextRenderedElement);
	      var child = this._instantiateReactComponent(nextRenderedElement);
	      this._renderedComponent = child;
	      if (process.env.NODE_ENV !== 'production') {
	        if (child._debugID !== 0 && this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	        }
	      }
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        
	        
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedComponent;
	  },
	
	  
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },
	
	  
	  _instantiateReactComponent: null
	
	};
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactElement = __webpack_require__(10);
	
	var invariant = __webpack_require__(9);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactInstanceMap = __webpack_require__(121);
	var ReactInstrumentation = __webpack_require__(59);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      
	      
	      
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	
	var ReactUpdateQueue = {
	
	  
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      
	      
	      
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    
	    
	    
	    
	    
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    
	    
	    
	    
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

 },

 function(module, exports) {

	
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var invariant = __webpack_require__(9);
	
	var genericComponentClass = null;
	
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  
	  
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  
	  
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  
	  
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};
	
	
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var ReactComponentTreeDevtool = __webpack_require__(29);
	var KeyEscapeUtils = __webpack_require__(17);
	var traverseAllChildren = __webpack_require__(15);
	var warning = __webpack_require__(12);
	
	
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}
	
	
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var PooledClass = __webpack_require__(7);
	var Transaction = __webpack_require__(68);
	
	
	var TRANSACTION_WRAPPERS = [];
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	}
	
	var Mixin = {
	  
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

 },

 function(module, exports) {

	
	
	
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	
	function is(x, y) {
	  
	  if (x === y) {
	    
	    
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    
	    return x !== x && y !== y;
	  }
	}
	
	
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var emptyFunction = __webpack_require__(13);
	var warning = __webpack_require__(12);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  
	  
	  //
	  
	  
	  
	  
	  
	  
	  
	
	  
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  
	  
	  
	  'foreignObject', 'desc', 'title'];
	
	  
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    
	    
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  
	  var isTagValidWithParent = function (tag, parentTag) {
	    
	    switch (parentTag) {
	      
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      
	      
	      case 'option':
	        return tag === '#text';
	
	      
	      
	      
	      
	
	      
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    
	    
	    
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        
	        
	        
	        
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        
	        
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      
	      
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var DOMLazyTree = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(36);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  
	  this._currentElement = null;
	  
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = null;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        
	        
	        
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var invariant = __webpack_require__(9);
	
	
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}
	
	
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);
	
	var DOMChildrenOperations = __webpack_require__(80);
	var DOMLazyTree = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstrumentation = __webpack_require__(59);
	
	var escapeTextContentForBrowser = __webpack_require__(86);
	var invariant = __webpack_require__(9);
	var validateDOMNesting = __webpack_require__(133);
	
	
	var ReactDOMTextComponent = function (text) {
	  
	  this._currentElement = text;
	  this._stringText = '' + text;
	  
	  this._hostNode = null;
	  this._hostParent = null;
	
	  
	  this._domID = null;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);
	
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        
	        
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        
	        
	        
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        
	        
	        
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	
	        if (process.env.NODE_ENV !== 'production') {
	          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
	        }
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var ReactUpdates = __webpack_require__(56);
	var Transaction = __webpack_require__(68);
	
	var emptyFunction = __webpack_require__(13);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var EventListener = __webpack_require__(139);
	var ExecutionEnvironment = __webpack_require__(49);
	var PooledClass = __webpack_require__(7);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);
	
	var getEventTarget = __webpack_require__(69);
	var getUnboundedScrollPosition = __webpack_require__(140);
	
	
	function findParent(inst) {
	  
	  
	  
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  
	  
	  
	  
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      
	      
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {'use strict';
	
	
	
	var emptyFunction = __webpack_require__(13);
	
	
	var EventListener = {
	  
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var DOMProperty = __webpack_require__(37);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(45);
	var ReactComponentEnvironment = __webpack_require__(120);
	var ReactClass = __webpack_require__(21);
	var ReactEmptyComponent = __webpack_require__(128);
	var ReactBrowserEventEmitter = __webpack_require__(109);
	var ReactHostComponent = __webpack_require__(129);
	var ReactUpdates = __webpack_require__(56);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(7);
	var ReactBrowserEventEmitter = __webpack_require__(109);
	var ReactInputSelection = __webpack_require__(143);
	var Transaction = __webpack_require__(68);
	
	
	var SELECTION_RESTORATION = {
	  
	  initialize: ReactInputSelection.getSelectionInformation,
	  
	  close: ReactInputSelection.restoreSelection
	};
	
	
	var EVENT_SUPPRESSION = {
	  
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	
	var ON_DOM_READY_QUEUEING = {
	  
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  
	  
	  
	  
	  
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  
	  checkpoint: function () {
	    
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(144);
	
	var containsNode = __webpack_require__(146);
	var focusNode = __webpack_require__(95);
	var getActiveElement = __webpack_require__(149);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      
	      var range = document.selection.createRange();
	      
	      
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(49);
	
	var getNodeForCharacterOffset = __webpack_require__(145);
	var getTextContentAccessor = __webpack_require__(51);
	
	
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  
	  
	  
	  
	  
	  
	  
	  try {
	    
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    
	  } catch (e) {
	    return null;
	  }
	
	  
	  
	  
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  
	  
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	
	
	var isTextNode = __webpack_require__(147);
	
	
	
	
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	
	
	var isNode = __webpack_require__(148);
	
	
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

 },

 function(module, exports) {

	'use strict';
	
	
	
	
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

 },

 function(module, exports) {

	'use strict';
	
	
	
	
	
	
	function getActiveElement() {
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

 },

 function(module, exports) {

	
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInputSelection = __webpack_require__(143);
	var SyntheticEvent = __webpack_require__(53);
	
	var getActiveElement = __webpack_require__(149);
	var isTextInputElement = __webpack_require__(71);
	var keyOf = __webpack_require__(25);
	var shallowEqual = __webpack_require__(132);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	
	
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  
	  
	  
	  
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      
	      
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      
	      
	      
	      //
	      
	      
	      
	      
	      
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var EventConstants = __webpack_require__(41);
	var EventListener = __webpack_require__(139);
	var EventPropagators = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(36);
	var SyntheticAnimationEvent = __webpack_require__(153);
	var SyntheticClipboardEvent = __webpack_require__(154);
	var SyntheticEvent = __webpack_require__(53);
	var SyntheticFocusEvent = __webpack_require__(155);
	var SyntheticKeyboardEvent = __webpack_require__(156);
	var SyntheticMouseEvent = __webpack_require__(74);
	var SyntheticDragEvent = __webpack_require__(159);
	var SyntheticTouchEvent = __webpack_require__(160);
	var SyntheticTransitionEvent = __webpack_require__(161);
	var SyntheticUIEvent = __webpack_require__(75);
	var SyntheticWheelEvent = __webpack_require__(162);
	
	var emptyFunction = __webpack_require__(13);
	var getEventCharCode = __webpack_require__(157);
	var invariant = __webpack_require__(9);
	var keyOf = __webpack_require__(25);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  
	  
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        
	        
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        
	        
	        
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        
	        
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    
	    
	    
	    
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(75);
	
	
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(75);
	
	var getEventCharCode = __webpack_require__(157);
	var getEventKey = __webpack_require__(158);
	var getEventModifierState = __webpack_require__(77);
	
	
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  
	  charCode: function (event) {
	    
	    
	
	    
	    
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    
	    
	
	    
	    
	    
	    
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    
	    
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    
	    charCode = keyCode;
	  }
	
	  
	  
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(157);
	
	
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    
	    
	
	    
	    
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    
	    
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    
	    
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(74);
	
	
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(75);
	
	var getEventModifierState = __webpack_require__(77);
	
	
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(74);
	
	
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  
	  
	  
	  
	  deltaMode: null
	};
	
	
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var DOMLazyTree = __webpack_require__(81);
	var DOMProperty = __webpack_require__(37);
	var ReactBrowserEventEmitter = __webpack_require__(109);
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMContainerInfo = __webpack_require__(164);
	var ReactDOMFeatureFlags = __webpack_require__(165);
	var ReactElement = __webpack_require__(10);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactInstrumentation = __webpack_require__(59);
	var ReactMarkupChecksum = __webpack_require__(166);
	var ReactReconciler = __webpack_require__(65);
	var ReactUpdateQueue = __webpack_require__(126);
	var ReactUpdates = __webpack_require__(56);
	
	var emptyObject = __webpack_require__(20);
	var instantiateReactComponent = __webpack_require__(123);
	var invariant = __webpack_require__(9);
	var setInnerHTML = __webpack_require__(83);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var warning = __webpack_require__(12);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  
	  
	  
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  
	  return this.props;
	};
	
	
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  
	  _instancesByReactRootID: instancesByReactRootID,
	
	  
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginFlush();
	    }
	
	    
	    
	    
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement);
	
	    if (process.env.NODE_ENV !== 'production') {
	      
	      
	      componentInstance._debugID = 0;
	    }
	
	    
	    
	    
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    if (process.env.NODE_ENV !== 'production') {
	      
	      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
	      ReactInstrumentation.debugTool.onEndFlush();
	    }
	
	    return componentInstance;
	  },
	
	  
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  
	  unmountComponentAtNode: function (container) {
	    
	    
	    
	    
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      
	      
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          
	          
	          
	          
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(133);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};
	
	module.exports = ReactDOMFeatureFlags;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var adler32 = __webpack_require__(167);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

 },

 function(module, exports) {

	
	
	'use strict';
	
	var MOD = 65521;
	
	
	
	
	
	
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(8);
	
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstanceMap = __webpack_require__(121);
	
	var getHostComponentFromComposite = __webpack_require__(169);
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);
	
	
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(125);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactMount = __webpack_require__(163);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

 },

 function(module, exports, __webpack_require__) {

	 if (false) { (function () { var ReactHotAPI = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(172);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(198);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(199);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(203);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(250);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Graph = __webpack_require__(258);
	
	var _Graph2 = _interopRequireDefault(_Graph);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	
	
	
	
	var App = function (_React$Component) {
	  (0, _inherits3['default'])(App, _React$Component);
	
	  function App() {
	    (0, _classCallCheck3['default'])(this, App);
	
	    var _this = (0, _possibleConstructorReturn3['default'])(this, (0, _getPrototypeOf2['default'])(App).call(this));
	
	    _this.state = {
	      treeData: {}
	    };
	    return _this;
	  }
	
	  (0, _createClass3['default'])(App, [{
	    key: 'componentWillMount',
	    value: function () {
	      function componentWillMount() {
	        
	        return wrapper(this.setState)({ treeData: d3Obj }, 'App');
	      }
	
	      return componentWillMount;
	    }()
	  }, {
	    key: 'render',
	    value: function () {
	      function render() {
	        return _react2['default'].createElement(
	          'div',
	          null,
	          _react2['default'].createElement(_Graph2['default'], { treeData: this.state.treeData })
	        );
	      }
	
	      return render;
	    }()
	  }]);
	  return App;
	}(_react2['default'].Component);
	
	
	
	
	exports['default'] = App;
	
	 }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "App.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

 },

 function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(173), __esModule: true };

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(174);
	module.exports = __webpack_require__(185).Object.getPrototypeOf;

 },

 function(module, exports, __webpack_require__) {

	
	var toObject        = __webpack_require__(175)
	  , $getPrototypeOf = __webpack_require__(177);
	
	__webpack_require__(183)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

 },

 function(module, exports, __webpack_require__) {

	
	var defined = __webpack_require__(176);
	module.exports = function(it){
	  return Object(defined(it));
	};

 },

 function(module, exports) {

	
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

 },

 function(module, exports, __webpack_require__) {

	
	var has         = __webpack_require__(178)
	  , toObject    = __webpack_require__(175)
	  , IE_PROTO    = __webpack_require__(179)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

 },

 function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

 },

 function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(180)('keys')
	  , uid    = __webpack_require__(182);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

 },

 function(module, exports, __webpack_require__) {

	var global = __webpack_require__(181)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

 },

 function(module, exports) {

	
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; 

 },

 function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

 },

 function(module, exports, __webpack_require__) {

	
	var $export = __webpack_require__(184)
	  , core    = __webpack_require__(185)
	  , fails   = __webpack_require__(194);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

 },

 function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(181)
	  , core      = __webpack_require__(185)
	  , ctx       = __webpack_require__(186)
	  , hide      = __webpack_require__(188)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    
	    out = own ? target[key] : source[key];
	    
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    
	    : IS_BIND && own ? ctx(out, global)
	    
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	
	$export.F = 1;   
	$export.G = 2;   
	$export.S = 4;   
	$export.P = 8;   
	$export.B = 16;  
	$export.W = 32;  
	$export.U = 64;  
	$export.R = 128; 
	module.exports = $export;

 },

 function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; 

 },

 function(module, exports, __webpack_require__) {

	
	var aFunction = __webpack_require__(187);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(){
	    return fn.apply(that, arguments);
	  };
	};

 },

 function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

 },

 function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(189)
	  , createDesc = __webpack_require__(197);
	module.exports = __webpack_require__(193) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

 },

 function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(190)
	  , IE8_DOM_DEFINE = __webpack_require__(192)
	  , toPrimitive    = __webpack_require__(196)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(193) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){  }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

 },

 function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(191);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

 },

 function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

 },

 function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(193) && !__webpack_require__(194)(function(){
	  return Object.defineProperty(__webpack_require__(195)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

 },

 function(module, exports, __webpack_require__) {

	
	module.exports = !__webpack_require__(194)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

 },

 function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

 },

 function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(191)
	  , document = __webpack_require__(181).document
	  
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

 },

 function(module, exports, __webpack_require__) {

	
	var isObject = __webpack_require__(191);
	
	
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

 },

 function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

 },

 function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

 },

 function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(200);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

 },

 function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(201), __esModule: true };

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(202);
	var $Object = __webpack_require__(185).Object;
	module.exports = function defineProperty(it, key, desc){
	  return $Object.defineProperty(it, key, desc);
	};

 },

 function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(184);
	
	$export($export.S + $export.F * !__webpack_require__(193), 'Object', {defineProperty: __webpack_require__(189).f});

 },

 function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _typeof2 = __webpack_require__(204);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

 },

 function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _iterator = __webpack_require__(205);
	
	var _iterator2 = _interopRequireDefault(_iterator);
	
	var _symbol = __webpack_require__(234);
	
	var _symbol2 = _interopRequireDefault(_symbol);
	
	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

 },

 function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(206), __esModule: true };

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(207);
	__webpack_require__(229);
	module.exports = __webpack_require__(233).f('iterator');

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(208)(true);
	
	
	__webpack_require__(210)(String, 'String', function(iterated){
	  this._t = String(iterated); 
	  this._i = 0;                
	
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

 },

 function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(209)
	  , defined   = __webpack_require__(176);
	
	
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

 },

 function(module, exports) {

	
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(211)
	  , $export        = __webpack_require__(184)
	  , redefine       = __webpack_require__(212)
	  , hide           = __webpack_require__(188)
	  , has            = __webpack_require__(178)
	  , Iterators      = __webpack_require__(213)
	  , $iterCreate    = __webpack_require__(214)
	  , setToStringTag = __webpack_require__(227)
	  , getPrototypeOf = __webpack_require__(177)
	  , ITERATOR       = __webpack_require__(228)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) 
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      
	      setToStringTag(IteratorPrototype, TAG, true);
	      
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

 },

 function(module, exports) {

	module.exports = true;

 },

 function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(188);

 },

 function(module, exports) {

	module.exports = {};

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(215)
	  , descriptor     = __webpack_require__(197)
	  , setToStringTag = __webpack_require__(227)
	  , IteratorPrototype = {};
	
	
	__webpack_require__(188)(IteratorPrototype, __webpack_require__(228)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

 },

 function(module, exports, __webpack_require__) {

	
	var anObject    = __webpack_require__(190)
	  , dPs         = __webpack_require__(216)
	  , enumBugKeys = __webpack_require__(225)
	  , IE_PROTO    = __webpack_require__(179)('IE_PROTO')
	  , Empty       = function(){  }
	  , PROTOTYPE   = 'prototype';
	
	
	var createDict = function(){
	  
	  var iframe = __webpack_require__(195)('iframe')
	    , i      = enumBugKeys.length
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(226).appendChild(iframe);
	  iframe.src = 'javascript:'; 
	  
	  
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write('<script>document.F=Object</script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};

 },

 function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(189)
	  , anObject = __webpack_require__(190)
	  , getKeys  = __webpack_require__(217);
	
	module.exports = __webpack_require__(193) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

 },

 function(module, exports, __webpack_require__) {

	
	var $keys       = __webpack_require__(218)
	  , enumBugKeys = __webpack_require__(225);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

 },

 function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(178)
	  , toIObject    = __webpack_require__(219)
	  , arrayIndexOf = __webpack_require__(222)(false)
	  , IE_PROTO     = __webpack_require__(179)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

 },

 function(module, exports, __webpack_require__) {

	
	var IObject = __webpack_require__(220)
	  , defined = __webpack_require__(176);
	module.exports = function(it){
	  return IObject(defined(it));
	};

 },

 function(module, exports, __webpack_require__) {

	
	var cof = __webpack_require__(221);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

 },

 function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

 },

 function(module, exports, __webpack_require__) {

	
	
	var toIObject = __webpack_require__(219)
	  , toLength  = __webpack_require__(223)
	  , toIndex   = __webpack_require__(224);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

 },

 function(module, exports, __webpack_require__) {

	
	var toInteger = __webpack_require__(209)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; 
	};

 },

 function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(209)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

 },

 function(module, exports) {

	
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

 },

 function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(181).document && document.documentElement;

 },

 function(module, exports, __webpack_require__) {

	var def = __webpack_require__(189).f
	  , has = __webpack_require__(178)
	  , TAG = __webpack_require__(228)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

 },

 function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(180)('wks')
	  , uid        = __webpack_require__(182)
	  , Symbol     = __webpack_require__(181).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(230);
	var global        = __webpack_require__(181)
	  , hide          = __webpack_require__(188)
	  , Iterators     = __webpack_require__(213)
	  , TO_STRING_TAG = __webpack_require__(228)('toStringTag');
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(231)
	  , step             = __webpack_require__(232)
	  , Iterators        = __webpack_require__(213)
	  , toIObject        = __webpack_require__(219);
	
	
	
	
	
	module.exports = __webpack_require__(210)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); 
	  this._i = 0;                   
	  this._k = kind;                
	
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

 },

 function(module, exports) {

	module.exports = function(){  };

 },

 function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

 },

 function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(228);

 },

 function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(235), __esModule: true };

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(236);
	__webpack_require__(247);
	__webpack_require__(248);
	__webpack_require__(249);
	module.exports = __webpack_require__(185).Symbol;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	var global         = __webpack_require__(181)
	  , has            = __webpack_require__(178)
	  , DESCRIPTORS    = __webpack_require__(193)
	  , $export        = __webpack_require__(184)
	  , redefine       = __webpack_require__(212)
	  , META           = __webpack_require__(237).KEY
	  , $fails         = __webpack_require__(194)
	  , shared         = __webpack_require__(180)
	  , setToStringTag = __webpack_require__(227)
	  , uid            = __webpack_require__(182)
	  , wks            = __webpack_require__(228)
	  , wksExt         = __webpack_require__(233)
	  , wksDefine      = __webpack_require__(238)
	  , keyOf          = __webpack_require__(239)
	  , enumKeys       = __webpack_require__(240)
	  , isArray        = __webpack_require__(243)
	  , anObject       = __webpack_require__(190)
	  , toIObject      = __webpack_require__(219)
	  , toPrimitive    = __webpack_require__(196)
	  , createDesc     = __webpack_require__(197)
	  , _create        = __webpack_require__(215)
	  , gOPNExt        = __webpack_require__(244)
	  , $GOPD          = __webpack_require__(246)
	  , $DP            = __webpack_require__(189)
	  , $keys          = __webpack_require__(217)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(245).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(242).f  = $propertyIsEnumerable;
	  __webpack_require__(241).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(211)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  
	  create: $create,
	  
	  defineProperty: $defineProperty,
	  
	  defineProperties: $defineProperties,
	  
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  
	  getOwnPropertyNames: $getOwnPropertyNames,
	  
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  
	  
	  
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; 
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(188)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	
	setToStringTag($Symbol, 'Symbol');
	
	setToStringTag(Math, 'Math', true);
	
	setToStringTag(global.JSON, 'JSON', true);

 },

 function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(182)('meta')
	  , isObject = __webpack_require__(191)
	  , has      = __webpack_require__(178)
	  , setDesc  = __webpack_require__(189).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(194)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, 
	    w: {}          
	  }});
	};
	var fastKey = function(it, create){
	  
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    
	    if(!isExtensible(it))return 'F';
	    
	    if(!create)return 'E';
	    
	    setMeta(it);
	  
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    
	    if(!isExtensible(it))return true;
	    
	    if(!create)return false;
	    
	    setMeta(it);
	  
	  } return it[META].w;
	};
	
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

 },

 function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(181)
	  , core           = __webpack_require__(185)
	  , LIBRARY        = __webpack_require__(211)
	  , wksExt         = __webpack_require__(233)
	  , defineProperty = __webpack_require__(189).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

 },

 function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(217)
	  , toIObject = __webpack_require__(219);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

 },

 function(module, exports, __webpack_require__) {

	
	var getKeys = __webpack_require__(217)
	  , gOPS    = __webpack_require__(241)
	  , pIE     = __webpack_require__(242);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

 },

 function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

 },

 function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

 },

 function(module, exports, __webpack_require__) {

	
	var cof = __webpack_require__(221);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

 },

 function(module, exports, __webpack_require__) {

	
	var toIObject = __webpack_require__(219)
	  , gOPN      = __webpack_require__(245).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


 },

 function(module, exports, __webpack_require__) {

	
	var $keys      = __webpack_require__(218)
	  , hiddenKeys = __webpack_require__(225).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

 },

 function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(242)
	  , createDesc     = __webpack_require__(197)
	  , toIObject      = __webpack_require__(219)
	  , toPrimitive    = __webpack_require__(196)
	  , has            = __webpack_require__(178)
	  , IE8_DOM_DEFINE = __webpack_require__(192)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(193) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){  }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

 },

 function(module, exports) {



 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(238)('asyncIterator');

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(238)('observable');

 },

 function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _setPrototypeOf = __webpack_require__(251);
	
	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
	
	var _create = __webpack_require__(255);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(204);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }
	
	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

 },

 function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(252), __esModule: true };

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(253);
	module.exports = __webpack_require__(185).Object.setPrototypeOf;

 },

 function(module, exports, __webpack_require__) {

	
	var $export = __webpack_require__(184);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(254).set});

 },

 function(module, exports, __webpack_require__) {

	
	
	var isObject = __webpack_require__(191)
	  , anObject = __webpack_require__(190);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? 
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(186)(Function.call, __webpack_require__(246).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

 },

 function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(256), __esModule: true };

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(257);
	var $Object = __webpack_require__(185).Object;
	module.exports = function create(P, D){
	  return $Object.create(P, D);
	};

 },

 function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(184)
	
	$export($export.S, 'Object', {create: __webpack_require__(215)});

 },

 function(module, exports, __webpack_require__) {

	 if (false) { (function () { var ReactHotAPI = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(172);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(198);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(199);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(203);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(250);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _d = __webpack_require__(259);
	
	var _Node = __webpack_require__(260);
	
	var _Node2 = _interopRequireDefault(_Node);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var cloneDeep = __webpack_require__(388);
	
	var Graph = function (_React$Component) {
	  (0, _inherits3['default'])(Graph, _React$Component);
	
	  function Graph() {
	    (0, _classCallCheck3['default'])(this, Graph);
	
	    var _this = (0, _possibleConstructorReturn3['default'])(this, (0, _getPrototypeOf2['default'])(Graph).call(this));
	
	    _this.state = {
	      width: 1000,
	      height: 900,
	      initialHeight: 900,
	      nodeW: 200,
	      nodeH: 100,
	      nodes: []
	    };
	    _this.highlight = _this.highlight.bind(_this);
	    _this.lowlight = _this.lowlight.bind(_this);
	    _this.resizeGraph = _this.resizeGraph.bind(_this);
	    _this.highlightRecursion = _this.highlightRecursion.bind(_this);
	    _this.nodeRender = _this.nodeRender.bind(_this);
	    _this.linkRender = _this.linkRender.bind(_this);
	    _this.resizeGraph = _this.resizeGraph.bind(_this);
	    return _this;
	  }
	
	  
	
	
	  (0, _createClass3['default'])(Graph, [{
	    key: 'componentWillMount',
	    value: function () {
	      function componentWillMount() {
	        var root = cloneDeep(this.props.treeData);
	        var nodes = (0, _d.tree)().size([window.innerWidth, this.state.height])((0, _d.hierarchy)(root));
	        this.nodeRender(nodes); 
	        return wrapper(this.setState)({ width: window.innerWidth }, 'Graph');
	      }
	
	      return componentWillMount;
	    }()
	
	    
	
	  }, {
	    key: 'componentDidMount',
	    value: function () {
	      function componentDidMount() {
	        window.addEventListener('resize', this.resizeGraph);
	        this.linkRender(this.state.d3nodes); 
	        return wrapper(this.setState)({ height: graphz.getBBox().y + graphz.getBBox().height + 100 }, 'Graph');
	      }
	
	      return componentDidMount;
	    }()
	  }, {
	    key: 'highlightRecursion',
	    value: function () {
	      function highlightRecursion(d) {
	        
	        
	        if (!d.parent) return d;
	        (0, _d.select)(document.getElementById('graphz')).selectAll('path.link').filter(function (ele) {
	          if (ele.source.id === d.parent.id && ele.target.id === d.id) return ele;
	          return false;
	        }).classed('highlight', true);
	        return this.highlightRecursion(d.parent);
	      }
	
	      return highlightRecursion;
	    }()
	  }, {
	    key: 'highlight',
	    value: function () {
	      function highlight(i, e) {
	        var _this2 = this;
	
	        
	        e.preventDefault();
	        this.state.d3nodes.each(function (ele) {
	          if (ele.id === i) _this2.highlightRecursion(ele);
	        });
	        return true;
	      }
	
	      return highlight;
	    }()
	  }, {
	    key: 'lowlight',
	    value: function () {
	      function lowlight() {
	        
	        return (0, _d.select)(document.getElementById('graphz')).selectAll('path.link').classed('highlight', false);
	      }
	
	      return lowlight;
	    }()
	  }, {
	    key: 'nodeRender',
	    value: function () {
	      function nodeRender(nodes) {
	        var _this3 = this;
	
	        var i = 0;
	        var renderArr = [];
	
	        nodes.each(function (d) {
	          d.y = d.depth * _this3.state.initialHeight / 3;
	          d.id = d.id || ++i;
	          
	          
	          renderArr.push(_react2['default'].createElement(_Node2['default'], {
	            xtranslate: d.x,
	            ytranslate: d.y,
	            id: i,
	            key: i,
	            highlight: _this3.highlight.bind(_this3, i),
	            lowlight: _this3.lowlight,
	            name: d.data.name,
	            props: d.data.props,
	            state: d.data.state,
	            methods: d.data.methods,
	            width: _this3.state.nodeW,
	            height: _this3.state.nodeH
	          }));
	        });
	
	        
	        wrapper(this.setState)({
	          nodes: renderArr,
	          d3nodes: nodes
	        }, 'Graph');
	        return nodes;
	      }
	
	      return nodeRender;
	    }()
	  }, {
	    key: 'linkRender',
	    value: function () {
	      function linkRender(nodes) {
	        var _this4 = this;
	
	        var links = nodes.links();
	        (0, _d.select)(document.getElementById('graphz')).selectAll('path.link').data(links, function (d) {
	          return d.target.id;
	        }).enter().insert('svg:path', 'foreignObject').attr('class', 'link').attr('d', function (node) {
	          
	          
	          var oldX = node.source.x;
	          var oldY = node.source.y;
	          var newX = node.target.x;
	          var newY = node.target.y;
	          var pathing = (0, _d.path)();
	          pathing.moveTo(oldX + _this4.state.nodeW / 2, oldY);
	          pathing.bezierCurveTo(oldX + _this4.state.nodeW / 2, (oldY + newY) / 2, newX + _this4.state.nodeW / 2, (oldY + newY) / 2, newX + _this4.state.nodeW / 2, newY);
	          return pathing;
	          
	        });
	      }
	
	      return linkRender;
	    }()
	  }, {
	    key: 'resizeGraph',
	    value: function () {
	      function resizeGraph() {
	        (0, _d.select)('path.link').remove();
	        
	        var graphz = document.getElementById('graphz');
	        var root = cloneDeep(this.props.treeData);
	        var nodes = (0, _d.tree)().size([this.state.width, this.state.initialHeight])((0, _d.hierarchy)(root));
	        this.linkRender(this.nodeRender(nodes));
	        wrapper(this.setState)({
	          width: window.innerWidth
	        }, 'Graph');
	      }
	
	      return resizeGraph;
	    }()
	  }, {
	    key: 'render',
	    value: function () {
	      function render() {
	        var gStyle = {
	          transform: 'translate(0px,40px)'
	        };
	        return _react2['default'].createElement(
	          'svg',
	          { height: this.state.height, width: this.state.width },
	          _react2['default'].createElement(
	            'g',
	            { style: gStyle, id: 'graphz' },
	            this.state.nodes
	          ),
	          _react2['default'].createElement('div', { className: 'testing' })
	        );
	      }
	
	      return render;
	    }()
	  }]);
	  return Graph;
	}(_react2['default'].Component);
	
	Graph.propTypes = {
	  treeData: _react2['default'].PropTypes.object.isRequired
	};
	
	Graph.defaultProps = {
	  treeData: {
	    name: '',
	    children: [],
	    props: [],
	    methods: [],
	    state: []
	  }
	};
	
	exports['default'] = Graph;
	
	 }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Graph.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

 },

 function(module, exports, __webpack_require__) {

	
	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.d3 = global.d3 || {})));
	}(this, function (exports) { 'use strict';
	
	  var version = "4.1.0";
	
	  function ascending(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	
	  function bisector(compare) {
	    if (compare.length === 1) compare = ascendingComparator(compare);
	    return {
	      left: function(a, x, lo, hi) {
	        if (lo == null) lo = 0;
	        if (hi == null) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) < 0) lo = mid + 1;
	          else hi = mid;
	        }
	        return lo;
	      },
	      right: function(a, x, lo, hi) {
	        if (lo == null) lo = 0;
	        if (hi == null) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) > 0) hi = mid;
	          else lo = mid + 1;
	        }
	        return lo;
	      }
	    };
	  }
	
	  function ascendingComparator(f) {
	    return function(d, x) {
	      return ascending(f(d), x);
	    };
	  }
	
	  var ascendingBisect = bisector(ascending);
	  var bisectRight = ascendingBisect.right;
	  var bisectLeft = ascendingBisect.left;
	
	  function descending(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  }
	
	  function number(x) {
	    return x === null ? NaN : +x;
	  }
	
	  function variance(array, f) {
	    var n = array.length,
	        m = 0,
	        a,
	        d,
	        s = 0,
	        i = -1,
	        j = 0;
	
	    if (f == null) {
	      while (++i < n) {
	        if (!isNaN(a = number(array[i]))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    }
	
	    else {
	      while (++i < n) {
	        if (!isNaN(a = number(f(array[i], i, array)))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    }
	
	    if (j > 1) return s / (j - 1);
	  }
	
	  function deviation(array, f) {
	    var v = variance(array, f);
	    return v ? Math.sqrt(v) : v;
	  }
	
	  function extent(array, f) {
	    var i = -1,
	        n = array.length,
	        a,
	        b,
	        c;
	
	    if (f == null) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }
	      while (++i < n) if ((b = array[i]) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	
	    else {
	      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }
	      while (++i < n) if ((b = f(array[i], i, array)) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	
	    return [a, c];
	  }
	
	  var array = Array.prototype;
	
	  var slice = array.slice;
	  var map = array.map;
	
	  function constant(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function identity(x) {
	    return x;
	  }
	
	  function range(start, stop, step) {
	    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
	
	    var i = -1,
	        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
	        range = new Array(n);
	
	    while (++i < n) {
	      range[i] = start + i * step;
	    }
	
	    return range;
	  }
	
	  var e10 = Math.sqrt(50);
	  var e5 = Math.sqrt(10);
	  var e2 = Math.sqrt(2);
	  function ticks(start, stop, count) {
	    var step = tickStep(start, stop, count);
	    return range(
	      Math.ceil(start / step) * step,
	      Math.floor(stop / step) * step + step / 2, 
	      step
	    );
	  }
	
	  function tickStep(start, stop, count) {
	    var step0 = Math.abs(stop - start) / Math.max(0, count),
	        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
	        error = step0 / step1;
	    if (error >= e10) step1 *= 10;
	    else if (error >= e5) step1 *= 5;
	    else if (error >= e2) step1 *= 2;
	    return stop < start ? -step1 : step1;
	  }
	
	  function sturges(values) {
	    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
	  }
	
	  function histogram() {
	    var value = identity,
	        domain = extent,
	        threshold = sturges;
	
	    function histogram(data) {
	      var i,
	          n = data.length,
	          x,
	          values = new Array(n);
	
	      for (i = 0; i < n; ++i) {
	        values[i] = value(data[i], i, data);
	      }
	
	      var xz = domain(values),
	          x0 = xz[0],
	          x1 = xz[1],
	          tz = threshold(values, x0, x1);
	
	      
	      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);
	
	      
	      var m = tz.length;
	      while (tz[0] <= x0) tz.shift(), --m;
	      while (tz[m - 1] >= x1) tz.pop(), --m;
	
	      var bins = new Array(m + 1),
	          bin;
	
	      
	      for (i = 0; i <= m; ++i) {
	        bin = bins[i] = [];
	        bin.x0 = i > 0 ? tz[i - 1] : x0;
	        bin.x1 = i < m ? tz[i] : x1;
	      }
	
	      
	      for (i = 0; i < n; ++i) {
	        x = values[i];
	        if (x0 <= x && x <= x1) {
	          bins[bisectRight(tz, x, 0, m)].push(data[i]);
	        }
	      }
	
	      return bins;
	    }
	
	    histogram.value = function(_) {
	      return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;
	    };
	
	    histogram.domain = function(_) {
	      return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;
	    };
	
	    histogram.thresholds = function(_) {
	      return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;
	    };
	
	    return histogram;
	  }
	
	  function threshold(array, p, f) {
	    if (f == null) f = number;
	    if (!(n = array.length)) return;
	    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);
	    if (p >= 1) return +f(array[n - 1], n - 1, array);
	    var n,
	        h = (n - 1) * p,
	        i = Math.floor(h),
	        a = +f(array[i], i, array),
	        b = +f(array[i + 1], i + 1, array);
	    return a + (b - a) * (h - i);
	  }
	
	  function freedmanDiaconis(values, min, max) {
	    values = map.call(values, number).sort(ascending);
	    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));
	  }
	
	  function scott(values, min, max) {
	    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
	  }
	
	  function max(array, f) {
	    var i = -1,
	        n = array.length,
	        a,
	        b;
	
	    if (f == null) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
	      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	    }
	
	    else {
	      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
	      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;
	    }
	
	    return a;
	  }
	
	  function mean(array, f) {
	    var s = 0,
	        n = array.length,
	        a,
	        i = -1,
	        j = n;
	
	    if (f == null) {
	      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;
	    }
	
	    else {
	      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;
	    }
	
	    if (j) return s / j;
	  }
	
	  function median(array, f) {
	    var numbers = [],
	        n = array.length,
	        a,
	        i = -1;
	
	    if (f == null) {
	      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);
	    }
	
	    else {
	      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);
	    }
	
	    return threshold(numbers.sort(ascending), 0.5);
	  }
	
	  function merge(arrays) {
	    var n = arrays.length,
	        m,
	        i = -1,
	        j = 0,
	        merged,
	        array;
	
	    while (++i < n) j += arrays[i].length;
	    merged = new Array(j);
	
	    while (--n >= 0) {
	      array = arrays[n];
	      m = array.length;
	      while (--m >= 0) {
	        merged[--j] = array[m];
	      }
	    }
	
	    return merged;
	  }
	
	  function min(array, f) {
	    var i = -1,
	        n = array.length,
	        a,
	        b;
	
	    if (f == null) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
	      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	    }
	
	    else {
	      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
	      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;
	    }
	
	    return a;
	  }
	
	  function pairs(array) {
	    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);
	    while (i < n) pairs[i] = [p, p = array[++i]];
	    return pairs;
	  }
	
	  function permute(array, indexes) {
	    var i = indexes.length, permutes = new Array(i);
	    while (i--) permutes[i] = array[indexes[i]];
	    return permutes;
	  }
	
	  function scan(array, compare) {
	    if (!(n = array.length)) return;
	    var i = 0,
	        n,
	        j = 0,
	        xi,
	        xj = array[j];
	
	    if (!compare) compare = ascending;
	
	    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;
	
	    if (compare(xj, xj) === 0) return j;
	  }
	
	  function shuffle(array, i0, i1) {
	    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
	        t,
	        i;
	
	    while (m) {
	      i = Math.random() * m-- | 0;
	      t = array[m + i0];
	      array[m + i0] = array[i + i0];
	      array[i + i0] = t;
	    }
	
	    return array;
	  }
	
	  function sum(array, f) {
	    var s = 0,
	        n = array.length,
	        a,
	        i = -1;
	
	    if (f == null) {
	      while (++i < n) if (a = +array[i]) s += a; 
	    }
	
	    else {
	      while (++i < n) if (a = +f(array[i], i, array)) s += a;
	    }
	
	    return s;
	  }
	
	  function transpose(matrix) {
	    if (!(n = matrix.length)) return [];
	    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {
	      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
	        row[j] = matrix[j][i];
	      }
	    }
	    return transpose;
	  }
	
	  function length(d) {
	    return d.length;
	  }
	
	  function zip() {
	    return transpose(arguments);
	  }
	
	  var prefix = "$";
	
	  function Map() {}
	
	  Map.prototype = map$1.prototype = {
	    constructor: Map,
	    has: function(key) {
	      return (prefix + key) in this;
	    },
	    get: function(key) {
	      return this[prefix + key];
	    },
	    set: function(key, value) {
	      this[prefix + key] = value;
	      return this;
	    },
	    remove: function(key) {
	      var property = prefix + key;
	      return property in this && delete this[property];
	    },
	    clear: function() {
	      for (var property in this) if (property[0] === prefix) delete this[property];
	    },
	    keys: function() {
	      var keys = [];
	      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));
	      return keys;
	    },
	    values: function() {
	      var values = [];
	      for (var property in this) if (property[0] === prefix) values.push(this[property]);
	      return values;
	    },
	    entries: function() {
	      var entries = [];
	      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});
	      return entries;
	    },
	    size: function() {
	      var size = 0;
	      for (var property in this) if (property[0] === prefix) ++size;
	      return size;
	    },
	    empty: function() {
	      for (var property in this) if (property[0] === prefix) return false;
	      return true;
	    },
	    each: function(f) {
	      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
	    }
	  };
	
	  function map$1(object, f) {
	    var map = new Map;
	
	    
	    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });
	
	    
	    else if (Array.isArray(object)) {
	      var i = -1,
	          n = object.length,
	          o;
	
	      if (f == null) while (++i < n) map.set(i, object[i]);
	      else while (++i < n) map.set(f(o = object[i], i, object), o);
	    }
	
	    
	    else if (object) for (var key in object) map.set(key, object[key]);
	
	    return map;
	  }
	
	  function nest() {
	    var keys = [],
	        sortKeys = [],
	        sortValues,
	        rollup,
	        nest;
	
	    function apply(array, depth, createResult, setResult) {
	      if (depth >= keys.length) return rollup != null
	          ? rollup(array) : (sortValues != null
	          ? array.sort(sortValues)
	          : array);
	
	      var i = -1,
	          n = array.length,
	          key = keys[depth++],
	          keyValue,
	          value,
	          valuesByKey = map$1(),
	          values,
	          result = createResult();
	
	      while (++i < n) {
	        if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
	          values.push(value);
	        } else {
	          valuesByKey.set(keyValue, [value]);
	        }
	      }
	
	      valuesByKey.each(function(values, key) {
	        setResult(result, key, apply(values, depth, createResult, setResult));
	      });
	
	      return result;
	    }
	
	    function entries(map, depth) {
	      if (++depth > keys.length) return map;
	      var array, sortKey = sortKeys[depth - 1];
	      if (rollup != null && depth >= keys.length) array = map.entries();
	      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });
	      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;
	    }
	
	    return nest = {
	      object: function(array) { return apply(array, 0, createObject, setObject); },
	      map: function(array) { return apply(array, 0, createMap, setMap); },
	      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },
	      key: function(d) { keys.push(d); return nest; },
	      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },
	      sortValues: function(order) { sortValues = order; return nest; },
	      rollup: function(f) { rollup = f; return nest; }
	    };
	  }
	
	  function createObject() {
	    return {};
	  }
	
	  function setObject(object, key, value) {
	    object[key] = value;
	  }
	
	  function createMap() {
	    return map$1();
	  }
	
	  function setMap(map, key, value) {
	    map.set(key, value);
	  }
	
	  function Set() {}
	
	  var proto = map$1.prototype;
	
	  Set.prototype = set.prototype = {
	    constructor: Set,
	    has: proto.has,
	    add: function(value) {
	      value += "";
	      this[prefix + value] = value;
	      return this;
	    },
	    remove: proto.remove,
	    clear: proto.clear,
	    values: proto.keys,
	    size: proto.size,
	    empty: proto.empty,
	    each: proto.each
	  };
	
	  function set(object, f) {
	    var set = new Set;
	
	    
	    if (object instanceof Set) object.each(function(value) { set.add(value); });
	
	    
	    else if (object) {
	      var i = -1, n = object.length;
	      if (f == null) while (++i < n) set.add(object[i]);
	      else while (++i < n) set.add(f(object[i], i, object));
	    }
	
	    return set;
	  }
	
	  function keys(map) {
	    var keys = [];
	    for (var key in map) keys.push(key);
	    return keys;
	  }
	
	  function values(map) {
	    var values = [];
	    for (var key in map) values.push(map[key]);
	    return values;
	  }
	
	  function entries(map) {
	    var entries = [];
	    for (var key in map) entries.push({key: key, value: map[key]});
	    return entries;
	  }
	
	  function uniform(min, max) {
	    min = min == null ? 0 : +min;
	    max = max == null ? 1 : +max;
	    if (arguments.length === 1) max = min, min = 0;
	    else max -= min;
	    return function() {
	      return Math.random() * max + min;
	    };
	  }
	
	  function normal(mu, sigma) {
	    var x, r;
	    mu = mu == null ? 0 : +mu;
	    sigma = sigma == null ? 1 : +sigma;
	    return function() {
	      var y;
	
	      
	      if (x != null) y = x, x = null;
	
	      
	      else do {
	        x = Math.random() * 2 - 1;
	        y = Math.random() * 2 - 1;
	        r = x * x + y * y;
	      } while (!r || r > 1);
	
	      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
	    };
	  }
	
	  function logNormal() {
	    var randomNormal = normal.apply(this, arguments);
	    return function() {
	      return Math.exp(randomNormal());
	    };
	  }
	
	  function irwinHall(n) {
	    return function() {
	      for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();
	      return sum;
	    };
	  }
	
	  function bates(n) {
	    var randomIrwinHall = irwinHall(n);
	    return function() {
	      return randomIrwinHall() / n;
	    };
	  }
	
	  function exponential(lambda) {
	    return function() {
	      return -Math.log(1 - Math.random()) / lambda;
	    };
	  }
	
	  function linear(t) {
	    return +t;
	  }
	
	  function quadIn(t) {
	    return t * t;
	  }
	
	  function quadOut(t) {
	    return t * (2 - t);
	  }
	
	  function quadInOut(t) {
	    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
	  }
	
	  function cubicIn(t) {
	    return t * t * t;
	  }
	
	  function cubicOut(t) {
	    return --t * t * t + 1;
	  }
	
	  function easeCubicInOut(t) {
	    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
	  }
	
	  var exponent = 3;
	
	  var polyIn = (function custom(e) {
	    e = +e;
	
	    function polyIn(t) {
	      return Math.pow(t, e);
	    }
	
	    polyIn.exponent = custom;
	
	    return polyIn;
	  })(exponent);
	
	  var polyOut = (function custom(e) {
	    e = +e;
	
	    function polyOut(t) {
	      return 1 - Math.pow(1 - t, e);
	    }
	
	    polyOut.exponent = custom;
	
	    return polyOut;
	  })(exponent);
	
	  var polyInOut = (function custom(e) {
	    e = +e;
	
	    function polyInOut(t) {
	      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
	    }
	
	    polyInOut.exponent = custom;
	
	    return polyInOut;
	  })(exponent);
	
	  var pi = Math.PI;
	  var halfPi = pi / 2;
	  function sinIn(t) {
	    return 1 - Math.cos(t * halfPi);
	  }
	
	  function sinOut(t) {
	    return Math.sin(t * halfPi);
	  }
	
	  function sinInOut(t) {
	    return (1 - Math.cos(pi * t)) / 2;
	  }
	
	  function expIn(t) {
	    return Math.pow(2, 10 * t - 10);
	  }
	
	  function expOut(t) {
	    return 1 - Math.pow(2, -10 * t);
	  }
	
	  function expInOut(t) {
	    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
	  }
	
	  function circleIn(t) {
	    return 1 - Math.sqrt(1 - t * t);
	  }
	
	  function circleOut(t) {
	    return Math.sqrt(1 - --t * t);
	  }
	
	  function circleInOut(t) {
	    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
	  }
	
	  var b1 = 4 / 11;
	  var b2 = 6 / 11;
	  var b3 = 8 / 11;
	  var b4 = 3 / 4;
	  var b5 = 9 / 11;
	  var b6 = 10 / 11;
	  var b7 = 15 / 16;
	  var b8 = 21 / 22;
	  var b9 = 63 / 64;
	  var b0 = 1 / b1 / b1;
	  function bounceIn(t) {
	    return 1 - bounceOut(1 - t);
	  }
	
	  function bounceOut(t) {
	    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
	  }
	
	  function bounceInOut(t) {
	    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
	  }
	
	  var overshoot = 1.70158;
	
	  var backIn = (function custom(s) {
	    s = +s;
	
	    function backIn(t) {
	      return t * t * ((s + 1) * t - s);
	    }
	
	    backIn.overshoot = custom;
	
	    return backIn;
	  })(overshoot);
	
	  var backOut = (function custom(s) {
	    s = +s;
	
	    function backOut(t) {
	      return --t * t * ((s + 1) * t + s) + 1;
	    }
	
	    backOut.overshoot = custom;
	
	    return backOut;
	  })(overshoot);
	
	  var backInOut = (function custom(s) {
	    s = +s;
	
	    function backInOut(t) {
	      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
	    }
	
	    backInOut.overshoot = custom;
	
	    return backInOut;
	  })(overshoot);
	
	  var tau = 2 * Math.PI;
	  var amplitude = 1;
	  var period = 0.3;
	  var elasticIn = (function custom(a, p) {
	    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	    function elasticIn(t) {
	      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
	    }
	
	    elasticIn.amplitude = function(a) { return custom(a, p * tau); };
	    elasticIn.period = function(p) { return custom(a, p); };
	
	    return elasticIn;
	  })(amplitude, period);
	
	  var elasticOut = (function custom(a, p) {
	    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	    function elasticOut(t) {
	      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
	    }
	
	    elasticOut.amplitude = function(a) { return custom(a, p * tau); };
	    elasticOut.period = function(p) { return custom(a, p); };
	
	    return elasticOut;
	  })(amplitude, period);
	
	  var elasticInOut = (function custom(a, p) {
	    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	    function elasticInOut(t) {
	      return ((t = t * 2 - 1) < 0
	          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)
	          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
	    }
	
	    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };
	    elasticInOut.period = function(p) { return custom(a, p); };
	
	    return elasticInOut;
	  })(amplitude, period);
	
	  function area(polygon) {
	    var i = -1,
	        n = polygon.length,
	        a,
	        b = polygon[n - 1],
	        area = 0;
	
	    while (++i < n) {
	      a = b;
	      b = polygon[i];
	      area += a[1] * b[0] - a[0] * b[1];
	    }
	
	    return area / 2;
	  }
	
	  function centroid(polygon) {
	    var i = -1,
	        n = polygon.length,
	        x = 0,
	        y = 0,
	        a,
	        b = polygon[n - 1],
	        c,
	        k = 0;
	
	    while (++i < n) {
	      a = b;
	      b = polygon[i];
	      k += c = a[0] * b[1] - b[0] * a[1];
	      x += (a[0] + b[0]) * c;
	      y += (a[1] + b[1]) * c;
	    }
	
	    return k *= 3, [x / k, y / k];
	  }
	
	  
	  
	  
	  
	  function cross(a, b, c) {
	    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
	  }
	
	  function lexicographicOrder(a, b) {
	    return a[0] - b[0] || a[1] - b[1];
	  }
	
	  
	  
	  
	  function computeUpperHullIndexes(points) {
	    var n = points.length,
	        indexes = [0, 1],
	        size = 2;
	
	    for (var i = 2; i < n; ++i) {
	      while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;
	      indexes[size++] = i;
	    }
	
	    return indexes.slice(0, size); 
	  }
	
	  function hull(points) {
	    if ((n = points.length) < 3) return null;
	
	    var i,
	        n,
	        sortedPoints = new Array(n),
	        flippedPoints = new Array(n);
	
	    for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];
	    sortedPoints.sort(lexicographicOrder);
	    for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];
	
	    var upperIndexes = computeUpperHullIndexes(sortedPoints),
	        lowerIndexes = computeUpperHullIndexes(flippedPoints);
	
	    
	    var skipLeft = lowerIndexes[0] === upperIndexes[0],
	        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
	        hull = [];
	
	    
	    
	    for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);
	    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);
	
	    return hull;
	  }
	
	  function contains(polygon, point) {
	    var n = polygon.length,
	        p = polygon[n - 1],
	        x = point[0], y = point[1],
	        x0 = p[0], y0 = p[1],
	        x1, y1,
	        inside = false;
	
	    for (var i = 0; i < n; ++i) {
	      p = polygon[i], x1 = p[0], y1 = p[1];
	      if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;
	      x0 = x1, y0 = y1;
	    }
	
	    return inside;
	  }
	
	  function length$1(polygon) {
	    var i = -1,
	        n = polygon.length,
	        b = polygon[n - 1],
	        xa,
	        ya,
	        xb = b[0],
	        yb = b[1],
	        perimeter = 0;
	
	    while (++i < n) {
	      xa = xb;
	      ya = yb;
	      b = polygon[i];
	      xb = b[0];
	      yb = b[1];
	      xa -= xb;
	      ya -= yb;
	      perimeter += Math.sqrt(xa * xa + ya * ya);
	    }
	
	    return perimeter;
	  }
	
	var   pi$1 = Math.PI;
	var   tau$1 = 2 * pi$1;
	  var epsilon = 1e-6;
	  var tauEpsilon = tau$1 - epsilon;
	  function Path() {
	    this._x0 = this._y0 = 
	    this._x1 = this._y1 = null; 
	    this._ = [];
	  }
	
	  function path() {
	    return new Path;
	  }
	
	  Path.prototype = path.prototype = {
	    constructor: Path,
	    moveTo: function(x, y) {
	      this._.push("M", this._x0 = this._x1 = +x, ",", this._y0 = this._y1 = +y);
	    },
	    closePath: function() {
	      if (this._x1 !== null) {
	        this._x1 = this._x0, this._y1 = this._y0;
	        this._.push("Z");
	      }
	    },
	    lineTo: function(x, y) {
	      this._.push("L", this._x1 = +x, ",", this._y1 = +y);
	    },
	    quadraticCurveTo: function(x1, y1, x, y) {
	      this._.push("Q", +x1, ",", +y1, ",", this._x1 = +x, ",", this._y1 = +y);
	    },
	    bezierCurveTo: function(x1, y1, x2, y2, x, y) {
	      this._.push("C", +x1, ",", +y1, ",", +x2, ",", +y2, ",", this._x1 = +x, ",", this._y1 = +y);
	    },
	    arcTo: function(x1, y1, x2, y2, r) {
	      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
	      var x0 = this._x1,
	          y0 = this._y1,
	          x21 = x2 - x1,
	          y21 = y2 - y1,
	          x01 = x0 - x1,
	          y01 = y0 - y1,
	          l01_2 = x01 * x01 + y01 * y01;
	
	      
	      if (r < 0) throw new Error("negative radius: " + r);
	
	      
	      if (this._x1 === null) {
	        this._.push(
	          "M", this._x1 = x1, ",", this._y1 = y1
	        );
	      }
	
	      
	      else if (!(l01_2 > epsilon));
	
	      
	      
	      
	      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
	        this._.push(
	          "L", this._x1 = x1, ",", this._y1 = y1
	        );
	      }
	
	      
	      else {
	        var x20 = x2 - x0,
	            y20 = y2 - y0,
	            l21_2 = x21 * x21 + y21 * y21,
	            l20_2 = x20 * x20 + y20 * y20,
	            l21 = Math.sqrt(l21_2),
	            l01 = Math.sqrt(l01_2),
	            l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
	            t01 = l / l01,
	            t21 = l / l21;
	
	        
	        if (Math.abs(t01 - 1) > epsilon) {
	          this._.push(
	            "L", x1 + t01 * x01, ",", y1 + t01 * y01
	          );
	        }
	
	        this._.push(
	          "A", r, ",", r, ",0,0,", +(y01 * x20 > x01 * y20), ",", this._x1 = x1 + t21 * x21, ",", this._y1 = y1 + t21 * y21
	        );
	      }
	    },
	    arc: function(x, y, r, a0, a1, ccw) {
	      x = +x, y = +y, r = +r;
	      var dx = r * Math.cos(a0),
	          dy = r * Math.sin(a0),
	          x0 = x + dx,
	          y0 = y + dy,
	          cw = 1 ^ ccw,
	          da = ccw ? a0 - a1 : a1 - a0;
	
	      
	      if (r < 0) throw new Error("negative radius: " + r);
	
	      
	      if (this._x1 === null) {
	        this._.push(
	          "M", x0, ",", y0
	        );
	      }
	
	      
	      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
	        this._.push(
	          "L", x0, ",", y0
	        );
	      }
	
	      
	      if (!r) return;
	
	      
	      if (da > tauEpsilon) {
	        this._.push(
	          "A", r, ",", r, ",0,1,", cw, ",", x - dx, ",", y - dy,
	          "A", r, ",", r, ",0,1,", cw, ",", this._x1 = x0, ",", this._y1 = y0
	        );
	      }
	
	      
	      else {
	        if (da < 0) da = da % tau$1 + tau$1;
	        this._.push(
	          "A", r, ",", r, ",0,", +(da >= pi$1), ",", cw, ",", this._x1 = x + r * Math.cos(a1), ",", this._y1 = y + r * Math.sin(a1)
	        );
	      }
	    },
	    rect: function(x, y, w, h) {
	      this._.push("M", this._x0 = this._x1 = +x, ",", this._y0 = this._y1 = +y, "h", +w, "v", +h, "h", -w, "Z");
	    },
	    toString: function() {
	      return this._.join("");
	    }
	  };
	
	  function tree_add(d) {
	    var x = +this._x.call(null, d),
	        y = +this._y.call(null, d);
	    return add(this.cover(x, y), x, y, d);
	  }
	
	  function add(tree, x, y, d) {
	    if (isNaN(x) || isNaN(y)) return tree; 
	
	    var parent,
	        node = tree._root,
	        leaf = {data: d},
	        x0 = tree._x0,
	        y0 = tree._y0,
	        x1 = tree._x1,
	        y1 = tree._y1,
	        xm,
	        ym,
	        xp,
	        yp,
	        right,
	        bottom,
	        i,
	        j;
	
	    
	    if (!node) return tree._root = leaf, tree;
	
	    
	    while (node.length) {
	      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
	      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
	      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
	    }
	
	    
	    xp = +tree._x.call(null, node.data);
	    yp = +tree._y.call(null, node.data);
	    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;
	
	    
	    do {
	      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
	      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
	      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
	    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));
	    return parent[j] = node, parent[i] = leaf, tree;
	  }
	
	  function addAll(data) {
	    var d, i, n = data.length,
	        x,
	        y,
	        xz = new Array(n),
	        yz = new Array(n),
	        x0 = Infinity,
	        y0 = Infinity,
	        x1 = -Infinity,
	        y1 = -Infinity;
	
	    
	    for (i = 0; i < n; ++i) {
	      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
	      xz[i] = x;
	      yz[i] = y;
	      if (x < x0) x0 = x;
	      if (x > x1) x1 = x;
	      if (y < y0) y0 = y;
	      if (y > y1) y1 = y;
	    }
	
	    
	    if (x1 < x0) x0 = this._x0, x1 = this._x1;
	    if (y1 < y0) y0 = this._y0, y1 = this._y1;
	
	    
	    this.cover(x0, y0).cover(x1, y1);
	
	    
	    for (i = 0; i < n; ++i) {
	      add(this, xz[i], yz[i], data[i]);
	    }
	
	    return this;
	  }
	
	  function tree_cover(x, y) {
	    if (isNaN(x = +x) || isNaN(y = +y)) return this; 
	
	    var x0 = this._x0,
	        y0 = this._y0,
	        x1 = this._x1,
	        y1 = this._y1;
	
	    
	    
	    
	    if (isNaN(x0)) {
	      x1 = (x0 = Math.floor(x)) + 1;
	      y1 = (y0 = Math.floor(y)) + 1;
	    }
	
	    
	    else if (x0 > x || x > x1 || y0 > y || y > y1) {
	      var z = x1 - x0,
	          node = this._root,
	          parent,
	          i;
	
	      switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {
	        case 0: {
	          do parent = new Array(4), parent[i] = node, node = parent;
	          while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);
	          break;
	        }
	        case 1: {
	          do parent = new Array(4), parent[i] = node, node = parent;
	          while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);
	          break;
	        }
	        case 2: {
	          do parent = new Array(4), parent[i] = node, node = parent;
	          while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);
	          break;
	        }
	        case 3: {
	          do parent = new Array(4), parent[i] = node, node = parent;
	          while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);
	          break;
	        }
	      }
	
	      if (this._root && this._root.length) this._root = node;
	    }
	
	    
	    else return this;
	
	    this._x0 = x0;
	    this._y0 = y0;
	    this._x1 = x1;
	    this._y1 = y1;
	    return this;
	  }
	
	  function tree_data() {
	    var data = [];
	    this.visit(function(node) {
	      if (!node.length) do data.push(node.data); while (node = node.next)
	    });
	    return data;
	  }
	
	  function tree_extent(_) {
	    return arguments.length
	        ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])
	        : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
	  }
	
	  function Quad(node, x0, y0, x1, y1) {
	    this.node = node;
	    this.x0 = x0;
	    this.y0 = y0;
	    this.x1 = x1;
	    this.y1 = y1;
	  }
	
	  function tree_find(x, y, radius) {
	    var data,
	        x0 = this._x0,
	        y0 = this._y0,
	        x1,
	        y1,
	        x2,
	        y2,
	        x3 = this._x1,
	        y3 = this._y1,
	        quads = [],
	        node = this._root,
	        q,
	        i;
	
	    if (node) quads.push(new Quad(node, x0, y0, x3, y3));
	    if (radius == null) radius = Infinity;
	    else {
	      x0 = x - radius, y0 = y - radius;
	      x3 = x + radius, y3 = y + radius;
	      radius *= radius;
	    }
	
	    while (q = quads.pop()) {
	
	      
	      if (!(node = q.node)
	          || (x1 = q.x0) > x3
	          || (y1 = q.y0) > y3
	          || (x2 = q.x1) < x0
	          || (y2 = q.y1) < y0) continue;
	
	      
	      if (node.length) {
	        var xm = (x1 + x2) / 2,
	            ym = (y1 + y2) / 2;
	
	        quads.push(
	          new Quad(node[3], xm, ym, x2, y2),
	          new Quad(node[2], x1, ym, xm, y2),
	          new Quad(node[1], xm, y1, x2, ym),
	          new Quad(node[0], x1, y1, xm, ym)
	        );
	
	        
	        if (i = (y >= ym) << 1 | (x >= xm)) {
	          q = quads[quads.length - 1];
	          quads[quads.length - 1] = quads[quads.length - 1 - i];
	          quads[quads.length - 1 - i] = q;
	        }
	      }
	
	      
	      else {
	        var dx = x - +this._x.call(null, node.data),
	            dy = y - +this._y.call(null, node.data),
	            d2 = dx * dx + dy * dy;
	        if (d2 < radius) {
	          var d = Math.sqrt(radius = d2);
	          x0 = x - d, y0 = y - d;
	          x3 = x + d, y3 = y + d;
	          data = node.data;
	        }
	      }
	    }
	
	    return data;
	  }
	
	  function tree_remove(d) {
	    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; 
	
	    var parent,
	        node = this._root,
	        retainer,
	        previous,
	        next,
	        x0 = this._x0,
	        y0 = this._y0,
	        x1 = this._x1,
	        y1 = this._y1,
	        x,
	        y,
	        xm,
	        ym,
	        right,
	        bottom,
	        i,
	        j;
	
	    
	    if (!node) return this;
	
	    
	    
	    if (node.length) while (true) {
	      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
	      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
	      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
	      if (!node.length) break;
	      if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;
	    }
	
	    
	    while (node.data !== d) if (!(previous = node, node = node.next)) return this;
	    if (next = node.next) delete node.next;
	
	    
	    if (previous) return (next ? previous.next = next : delete previous.next), this;
	
	    
	    if (!parent) return this._root = next, this;
	
	    
	    next ? parent[i] = next : delete parent[i];
	
	    
	    if ((node = parent[0] || parent[1] || parent[2] || parent[3])
	        && node === (parent[3] || parent[2] || parent[1] || parent[0])
	        && !node.length) {
	      if (retainer) retainer[j] = node;
	      else this._root = node;
	    }
	
	    return this;
	  }
	
	  function removeAll(data) {
	    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);
	    return this;
	  }
	
	  function tree_root() {
	    return this._root;
	  }
	
	  function tree_size() {
	    var size = 0;
	    this.visit(function(node) {
	      if (!node.length) do ++size; while (node = node.next)
	    });
	    return size;
	  }
	
	  function tree_visit(callback) {
	    var quads = [], q, node = this._root, child, x0, y0, x1, y1;
	    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));
	    while (q = quads.pop()) {
	      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
	        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
	        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
	        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
	        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
	        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
	      }
	    }
	    return this;
	  }
	
	  function tree_visitAfter(callback) {
	    var quads = [], next = [], q;
	    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));
	    while (q = quads.pop()) {
	      var node = q.node;
	      if (node.length) {
	        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
	        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
	        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
	        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
	        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
	      }
	      next.push(q);
	    }
	    while (q = next.pop()) {
	      callback(q.node, q.x0, q.y0, q.x1, q.y1);
	    }
	    return this;
	  }
	
	  function defaultX(d) {
	    return d[0];
	  }
	
	  function tree_x(_) {
	    return arguments.length ? (this._x = _, this) : this._x;
	  }
	
	  function defaultY(d) {
	    return d[1];
	  }
	
	  function tree_y(_) {
	    return arguments.length ? (this._y = _, this) : this._y;
	  }
	
	  function quadtree(nodes, x, y) {
	    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);
	    return nodes == null ? tree : tree.addAll(nodes);
	  }
	
	  function Quadtree(x, y, x0, y0, x1, y1) {
	    this._x = x;
	    this._y = y;
	    this._x0 = x0;
	    this._y0 = y0;
	    this._x1 = x1;
	    this._y1 = y1;
	    this._root = undefined;
	  }
	
	  function leaf_copy(leaf) {
	    var copy = {data: leaf.data}, next = copy;
	    while (leaf = leaf.next) next = next.next = {data: leaf.data};
	    return copy;
	  }
	
	  var treeProto = quadtree.prototype = Quadtree.prototype;
	
	  treeProto.copy = function() {
	    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
	        node = this._root,
	        nodes,
	        child;
	
	    if (!node) return copy;
	
	    if (!node.length) return copy._root = leaf_copy(node), copy;
	
	    nodes = [{source: node, target: copy._root = new Array(4)}];
	    while (node = nodes.pop()) {
	      for (var i = 0; i < 4; ++i) {
	        if (child = node.source[i]) {
	          if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});
	          else node.target[i] = leaf_copy(child);
	        }
	      }
	    }
	
	    return copy;
	  };
	
	  treeProto.add = tree_add;
	  treeProto.addAll = addAll;
	  treeProto.cover = tree_cover;
	  treeProto.data = tree_data;
	  treeProto.extent = tree_extent;
	  treeProto.find = tree_find;
	  treeProto.remove = tree_remove;
	  treeProto.removeAll = removeAll;
	  treeProto.root = tree_root;
	  treeProto.size = tree_size;
	  treeProto.visit = tree_visit;
	  treeProto.visitAfter = tree_visitAfter;
	  treeProto.x = tree_x;
	  treeProto.y = tree_y;
	
	  var slice$1 = [].slice;
	
	  var noabort = {};
	
	  function Queue(size) {
	    if (!(size >= 1)) throw new Error;
	    this._size = size;
	    this._call =
	    this._error = null;
	    this._tasks = [];
	    this._data = [];
	    this._waiting =
	    this._active =
	    this._ended =
	    this._start = 0; 
	  }
	
	  Queue.prototype = queue.prototype = {
	    constructor: Queue,
	    defer: function(callback) {
	      if (typeof callback !== "function" || this._call) throw new Error;
	      if (this._error != null) return this;
	      var t = slice$1.call(arguments, 1);
	      t.push(callback);
	      ++this._waiting, this._tasks.push(t);
	      poke(this);
	      return this;
	    },
	    abort: function() {
	      if (this._error == null) abort(this, new Error("abort"));
	      return this;
	    },
	    await: function(callback) {
	      if (typeof callback !== "function" || this._call) throw new Error;
	      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };
	      maybeNotify(this);
	      return this;
	    },
	    awaitAll: function(callback) {
	      if (typeof callback !== "function" || this._call) throw new Error;
	      this._call = callback;
	      maybeNotify(this);
	      return this;
	    }
	  };
	
	  function poke(q) {
	    if (!q._start) try { start(q); } 
	    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } 
	  }
	
	  function start(q) {
	    while (q._start = q._waiting && q._active < q._size) {
	      var i = q._ended + q._active,
	          t = q._tasks[i],
	          j = t.length - 1,
	          c = t[j];
	      t[j] = end(q, i);
	      --q._waiting, ++q._active;
	      t = c.apply(null, t);
	      if (!q._tasks[i]) continue; 
	      q._tasks[i] = t || noabort;
	    }
	  }
	
	  function end(q, i) {
	    return function(e, r) {
	      if (!q._tasks[i]) return; 
	      --q._active, ++q._ended;
	      q._tasks[i] = null;
	      if (q._error != null) return; 
	      if (e != null) {
	        abort(q, e);
	      } else {
	        q._data[i] = r;
	        if (q._waiting) poke(q);
	        else maybeNotify(q);
	      }
	    };
	  }
	
	  function abort(q, e) {
	    var i = q._tasks.length, t;
	    q._error = e; 
	    q._data = undefined; 
	    q._waiting = NaN; 
	
	    while (--i >= 0) {
	      if (t = q._tasks[i]) {
	        q._tasks[i] = null;
	        if (t.abort) try { t.abort(); }
	        catch (e) {  }
	      }
	    }
	
	    q._active = NaN; 
	    maybeNotify(q);
	  }
	
	  function maybeNotify(q) {
	    if (!q._active && q._call) q._call(q._error, q._data);
	  }
	
	  function queue(concurrency) {
	    return new Queue(arguments.length ? +concurrency : Infinity);
	  }
	
	  function constant$1(x) {
	    return function constant() {
	      return x;
	    };
	  }
	
	  var epsilon$1 = 1e-12;
	  var pi$2 = Math.PI;
	  var halfPi$1 = pi$2 / 2;
	  var tau$2 = 2 * pi$2;
	
	  function arcInnerRadius(d) {
	    return d.innerRadius;
	  }
	
	  function arcOuterRadius(d) {
	    return d.outerRadius;
	  }
	
	  function arcStartAngle(d) {
	    return d.startAngle;
	  }
	
	  function arcEndAngle(d) {
	    return d.endAngle;
	  }
	
	  function arcPadAngle(d) {
	    return d && d.padAngle; 
	  }
	
	  function asin(x) {
	    return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);
	  }
	
	  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
	    var x10 = x1 - x0, y10 = y1 - y0,
	        x32 = x3 - x2, y32 = y3 - y2,
	        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);
	    return [x0 + t * x10, y0 + t * y10];
	  }
	
	  
	  
	  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
	    var x01 = x0 - x1,
	        y01 = y0 - y1,
	        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),
	        ox = lo * y01,
	        oy = -lo * x01,
	        x11 = x0 + ox,
	        y11 = y0 + oy,
	        x10 = x1 + ox,
	        y10 = y1 + oy,
	        x00 = (x11 + x10) / 2,
	        y00 = (y11 + y10) / 2,
	        dx = x10 - x11,
	        dy = y10 - y11,
	        d2 = dx * dx + dy * dy,
	        r = r1 - rc,
	        D = x11 * y10 - x10 * y11,
	        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),
	        cx0 = (D * dy - dx * d) / d2,
	        cy0 = (-D * dx - dy * d) / d2,
	        cx1 = (D * dy + dx * d) / d2,
	        cy1 = (-D * dx + dy * d) / d2,
	        dx0 = cx0 - x00,
	        dy0 = cy0 - y00,
	        dx1 = cx1 - x00,
	        dy1 = cy1 - y00;
	
	    
	    
	    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
	
	    return {
	      cx: cx0,
	      cy: cy0,
	      x01: -ox,
	      y01: -oy,
	      x11: cx0 * (r1 / r - 1),
	      y11: cy0 * (r1 / r - 1)
	    };
	  }
	
	  function arc() {
	    var innerRadius = arcInnerRadius,
	        outerRadius = arcOuterRadius,
	        cornerRadius = constant$1(0),
	        padRadius = null,
	        startAngle = arcStartAngle,
	        endAngle = arcEndAngle,
	        padAngle = arcPadAngle,
	        context = null;
	
	    function arc() {
	      var buffer,
	          r,
	          r0 = +innerRadius.apply(this, arguments),
	          r1 = +outerRadius.apply(this, arguments),
	          a0 = startAngle.apply(this, arguments) - halfPi$1,
	          a1 = endAngle.apply(this, arguments) - halfPi$1,
	          da = Math.abs(a1 - a0),
	          cw = a1 > a0;
	
	      if (!context) context = buffer = path();
	
	      
	      if (r1 < r0) r = r1, r1 = r0, r0 = r;
	
	      
	      if (!(r1 > epsilon$1)) context.moveTo(0, 0);
	
	      
	      else if (da > tau$2 - epsilon$1) {
	        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));
	        context.arc(0, 0, r1, a0, a1, !cw);
	        if (r0 > epsilon$1) {
	          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));
	          context.arc(0, 0, r0, a1, a0, cw);
	        }
	      }
	
	      
	      else {
	        var a01 = a0,
	            a11 = a1,
	            a00 = a0,
	            a10 = a1,
	            da0 = da,
	            da1 = da,
	            ap = padAngle.apply(this, arguments) / 2,
	            rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),
	            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
	            rc0 = rc,
	            rc1 = rc,
	            t0,
	            t1;
	
	        
	        if (rp > epsilon$1) {
	          var p0 = asin(rp / r0 * Math.sin(ap)),
	              p1 = asin(rp / r1 * Math.sin(ap));
	          if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
	          else da0 = 0, a00 = a10 = (a0 + a1) / 2;
	          if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
	          else da1 = 0, a01 = a11 = (a0 + a1) / 2;
	        }
	
	        var x01 = r1 * Math.cos(a01),
	            y01 = r1 * Math.sin(a01),
	            x10 = r0 * Math.cos(a10),
	            y10 = r0 * Math.sin(a10);
	
	        
	        if (rc > epsilon$1) {
	          var x11 = r1 * Math.cos(a11),
	              y11 = r1 * Math.sin(a11),
	              x00 = r0 * Math.cos(a00),
	              y00 = r0 * Math.sin(a00);
	
	          
	          if (da < pi$2) {
	            var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],
	                ax = x01 - oc[0],
	                ay = y01 - oc[1],
	                bx = x11 - oc[0],
	                by = y11 - oc[1],
	                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),
	                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
	            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
	            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
	          }
	        }
	
	        
	        if (!(da1 > epsilon$1)) context.moveTo(x01, y01);
	
	        
	        else if (rc1 > epsilon$1) {
	          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
	          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
	
	          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
	
	          
	          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
	
	          
	          else {
	            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
	            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
	            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
	          }
	        }
	
	        
	        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
	
	        
	        
	        if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);
	
	        
	        else if (rc0 > epsilon$1) {
	          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
	          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
	
	          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
	
	          
	          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
	
	          
	          else {
	            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
	            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
	            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
	          }
	        }
	
	        
	        else context.arc(0, 0, r0, a10, a00, cw);
	      }
	
	      context.closePath();
	
	      if (buffer) return context = null, buffer + "" || null;
	    }
	
	    arc.centroid = function() {
	      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
	          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;
	      return [Math.cos(a) * r, Math.sin(a) * r];
	    };
	
	    arc.innerRadius = function(_) {
	      return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : innerRadius;
	    };
	
	    arc.outerRadius = function(_) {
	      return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : outerRadius;
	    };
	
	    arc.cornerRadius = function(_) {
	      return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : cornerRadius;
	    };
	
	    arc.padRadius = function(_) {
	      return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), arc) : padRadius;
	    };
	
	    arc.startAngle = function(_) {
	      return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : startAngle;
	    };
	
	    arc.endAngle = function(_) {
	      return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : endAngle;
	    };
	
	    arc.padAngle = function(_) {
	      return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : padAngle;
	    };
	
	    arc.context = function(_) {
	      return arguments.length ? ((context = _ == null ? null : _), arc) : context;
	    };
	
	    return arc;
	  }
	
	  function Linear(context) {
	    this._context = context;
	  }
	
	  Linear.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; 
	        default: this._context.lineTo(x, y); break;
	      }
	    }
	  };
	
	  function curveLinear(context) {
	    return new Linear(context);
	  }
	
	  function x(p) {
	    return p[0];
	  }
	
	  function y(p) {
	    return p[1];
	  }
	
	  function line() {
	    var x$$ = x,
	        y$$ = y,
	        defined = constant$1(true),
	        context = null,
	        curve = curveLinear,
	        output = null;
	
	    function line(data) {
	      var i,
	          n = data.length,
	          d,
	          defined0 = false,
	          buffer;
	
	      if (context == null) output = curve(buffer = path());
	
	      for (i = 0; i <= n; ++i) {
	        if (!(i < n && defined(d = data[i], i, data)) === defined0) {
	          if (defined0 = !defined0) output.lineStart();
	          else output.lineEnd();
	        }
	        if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));
	      }
	
	      if (buffer) return output = null, buffer + "" || null;
	    }
	
	    line.x = function(_) {
	      return arguments.length ? (x$$ = typeof _ === "function" ? _ : constant$1(+_), line) : x$$;
	    };
	
	    line.y = function(_) {
	      return arguments.length ? (y$$ = typeof _ === "function" ? _ : constant$1(+_), line) : y$$;
	    };
	
	    line.defined = function(_) {
	      return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), line) : defined;
	    };
	
	    line.curve = function(_) {
	      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
	    };
	
	    line.context = function(_) {
	      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
	    };
	
	    return line;
	  }
	
	  function area$1() {
	    var x0 = x,
	        x1 = null,
	        y0 = constant$1(0),
	        y1 = y,
	        defined = constant$1(true),
	        context = null,
	        curve = curveLinear,
	        output = null;
	
	    function area(data) {
	      var i,
	          j,
	          k,
	          n = data.length,
	          d,
	          defined0 = false,
	          buffer,
	          x0z = new Array(n),
	          y0z = new Array(n);
	
	      if (context == null) output = curve(buffer = path());
	
	      for (i = 0; i <= n; ++i) {
	        if (!(i < n && defined(d = data[i], i, data)) === defined0) {
	          if (defined0 = !defined0) {
	            j = i;
	            output.areaStart();
	            output.lineStart();
	          } else {
	            output.lineEnd();
	            output.lineStart();
	            for (k = i - 1; k >= j; --k) {
	              output.point(x0z[k], y0z[k]);
	            }
	            output.lineEnd();
	            output.areaEnd();
	          }
	        }
	        if (defined0) {
	          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
	          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
	        }
	      }
	
	      if (buffer) return output = null, buffer + "" || null;
	    }
	
	    function arealine() {
	      return line().defined(defined).curve(curve).context(context);
	    }
	
	    area.x = function(_) {
	      return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$1(+_), x1 = null, area) : x0;
	    };
	
	    area.x0 = function(_) {
	      return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$1(+_), area) : x0;
	    };
	
	    area.x1 = function(_) {
	      return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), area) : x1;
	    };
	
	    area.y = function(_) {
	      return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$1(+_), y1 = null, area) : y0;
	    };
	
	    area.y0 = function(_) {
	      return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$1(+_), area) : y0;
	    };
	
	    area.y1 = function(_) {
	      return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), area) : y1;
	    };
	
	    area.lineX0 =
	    area.lineY0 = function() {
	      return arealine().x(x0).y(y0);
	    };
	
	    area.lineY1 = function() {
	      return arealine().x(x0).y(y1);
	    };
	
	    area.lineX1 = function() {
	      return arealine().x(x1).y(y0);
	    };
	
	    area.defined = function(_) {
	      return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), area) : defined;
	    };
	
	    area.curve = function(_) {
	      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
	    };
	
	    area.context = function(_) {
	      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
	    };
	
	    return area;
	  }
	
	  function descending$1(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  }
	
	  function identity$1(d) {
	    return d;
	  }
	
	  function pie() {
	    var value = identity$1,
	        sortValues = descending$1,
	        sort = null,
	        startAngle = constant$1(0),
	        endAngle = constant$1(tau$2),
	        padAngle = constant$1(0);
	
	    function pie(data) {
	      var i,
	          n = data.length,
	          j,
	          k,
	          sum = 0,
	          index = new Array(n),
	          arcs = new Array(n),
	          a0 = +startAngle.apply(this, arguments),
	          da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),
	          a1,
	          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
	          pa = p * (da < 0 ? -1 : 1),
	          v;
	
	      for (i = 0; i < n; ++i) {
	        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
	          sum += v;
	        }
	      }
	
	      
	      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
	      else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });
	
	      
	      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
	        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
	          data: data[j],
	          index: i,
	          value: v,
	          startAngle: a0,
	          endAngle: a1,
	          padAngle: p
	        };
	      }
	
	      return arcs;
	    }
	
	    pie.value = function(_) {
	      return arguments.length ? (value = typeof _ === "function" ? _ : constant$1(+_), pie) : value;
	    };
	
	    pie.sortValues = function(_) {
	      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
	    };
	
	    pie.sort = function(_) {
	      return arguments.length ? (sort = _, sortValues = null, pie) : sort;
	    };
	
	    pie.startAngle = function(_) {
	      return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : startAngle;
	    };
	
	    pie.endAngle = function(_) {
	      return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : endAngle;
	    };
	
	    pie.padAngle = function(_) {
	      return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : padAngle;
	    };
	
	    return pie;
	  }
	
	  var curveRadialLinear = curveRadial(curveLinear);
	
	  function Radial(curve) {
	    this._curve = curve;
	  }
	
	  Radial.prototype = {
	    areaStart: function() {
	      this._curve.areaStart();
	    },
	    areaEnd: function() {
	      this._curve.areaEnd();
	    },
	    lineStart: function() {
	      this._curve.lineStart();
	    },
	    lineEnd: function() {
	      this._curve.lineEnd();
	    },
	    point: function(a, r) {
	      this._curve.point(r * Math.sin(a), r * -Math.cos(a));
	    }
	  };
	
	  function curveRadial(curve) {
	
	    function radial(context) {
	      return new Radial(curve(context));
	    }
	
	    radial._curve = curve;
	
	    return radial;
	  }
	
	  function radialLine(l) {
	    var c = l.curve;
	
	    l.angle = l.x, delete l.x;
	    l.radius = l.y, delete l.y;
	
	    l.curve = function(_) {
	      return arguments.length ? c(curveRadial(_)) : c()._curve;
	    };
	
	    return l;
	  }
	
	  function radialLine$1() {
	    return radialLine(line().curve(curveRadialLinear));
	  }
	
	  function radialArea() {
	    var a = area$1().curve(curveRadialLinear),
	        c = a.curve,
	        x0 = a.lineX0,
	        x1 = a.lineX1,
	        y0 = a.lineY0,
	        y1 = a.lineY1;
	
	    a.angle = a.x, delete a.x;
	    a.startAngle = a.x0, delete a.x0;
	    a.endAngle = a.x1, delete a.x1;
	    a.radius = a.y, delete a.y;
	    a.innerRadius = a.y0, delete a.y0;
	    a.outerRadius = a.y1, delete a.y1;
	    a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;
	    a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;
	    a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;
	    a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;
	
	    a.curve = function(_) {
	      return arguments.length ? c(curveRadial(_)) : c()._curve;
	    };
	
	    return a;
	  }
	
	  var circle = {
	    draw: function(context, size) {
	      var r = Math.sqrt(size / pi$2);
	      context.moveTo(r, 0);
	      context.arc(0, 0, r, 0, tau$2);
	    }
	  };
	
	  var cross$1 = {
	    draw: function(context, size) {
	      var r = Math.sqrt(size / 5) / 2;
	      context.moveTo(-3 * r, -r);
	      context.lineTo(-r, -r);
	      context.lineTo(-r, -3 * r);
	      context.lineTo(r, -3 * r);
	      context.lineTo(r, -r);
	      context.lineTo(3 * r, -r);
	      context.lineTo(3 * r, r);
	      context.lineTo(r, r);
	      context.lineTo(r, 3 * r);
	      context.lineTo(-r, 3 * r);
	      context.lineTo(-r, r);
	      context.lineTo(-3 * r, r);
	      context.closePath();
	    }
	  };
	
	  var tan30 = Math.sqrt(1 / 3);
	  var tan30_2 = tan30 * 2;
	  var diamond = {
	    draw: function(context, size) {
	      var y = Math.sqrt(size / tan30_2),
	          x = y * tan30;
	      context.moveTo(0, -y);
	      context.lineTo(x, 0);
	      context.lineTo(0, y);
	      context.lineTo(-x, 0);
	      context.closePath();
	    }
	  };
	
	  var ka = 0.89081309152928522810;
	  var kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);
	  var kx = Math.sin(tau$2 / 10) * kr;
	  var ky = -Math.cos(tau$2 / 10) * kr;
	  var star = {
	    draw: function(context, size) {
	      var r = Math.sqrt(size * ka),
	          x = kx * r,
	          y = ky * r;
	      context.moveTo(0, -r);
	      context.lineTo(x, y);
	      for (var i = 1; i < 5; ++i) {
	        var a = tau$2 * i / 5,
	            c = Math.cos(a),
	            s = Math.sin(a);
	        context.lineTo(s * r, -c * r);
	        context.lineTo(c * x - s * y, s * x + c * y);
	      }
	      context.closePath();
	    }
	  };
	
	  var square = {
	    draw: function(context, size) {
	      var w = Math.sqrt(size),
	          x = -w / 2;
	      context.rect(x, x, w, w);
	    }
	  };
	
	  var sqrt3 = Math.sqrt(3);
	
	  var triangle = {
	    draw: function(context, size) {
	      var y = -Math.sqrt(size / (sqrt3 * 3));
	      context.moveTo(0, y * 2);
	      context.lineTo(-sqrt3 * y, -y);
	      context.lineTo(sqrt3 * y, -y);
	      context.closePath();
	    }
	  };
	
	  var c = -0.5;
	  var s = Math.sqrt(3) / 2;
	  var k = 1 / Math.sqrt(12);
	  var a = (k / 2 + 1) * 3;
	  var wye = {
	    draw: function(context, size) {
	      var r = Math.sqrt(size / a),
	          x0 = r / 2,
	          y0 = r * k,
	          x1 = x0,
	          y1 = r * k + r,
	          x2 = -x1,
	          y2 = y1;
	      context.moveTo(x0, y0);
	      context.lineTo(x1, y1);
	      context.lineTo(x2, y2);
	      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
	      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
	      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
	      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
	      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
	      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
	      context.closePath();
	    }
	  };
	
	  var symbols = [
	    circle,
	    cross$1,
	    diamond,
	    square,
	    star,
	    triangle,
	    wye
	  ];
	
	  function symbol() {
	    var type = constant$1(circle),
	        size = constant$1(64),
	        context = null;
	
	    function symbol() {
	      var buffer;
	      if (!context) context = buffer = path();
	      type.apply(this, arguments).draw(context, +size.apply(this, arguments));
	      if (buffer) return context = null, buffer + "" || null;
	    }
	
	    symbol.type = function(_) {
	      return arguments.length ? (type = typeof _ === "function" ? _ : constant$1(_), symbol) : type;
	    };
	
	    symbol.size = function(_) {
	      return arguments.length ? (size = typeof _ === "function" ? _ : constant$1(+_), symbol) : size;
	    };
	
	    symbol.context = function(_) {
	      return arguments.length ? (context = _ == null ? null : _, symbol) : context;
	    };
	
	    return symbol;
	  }
	
	  function noop() {}
	
	  function point(that, x, y) {
	    that._context.bezierCurveTo(
	      (2 * that._x0 + that._x1) / 3,
	      (2 * that._y0 + that._y1) / 3,
	      (that._x0 + 2 * that._x1) / 3,
	      (that._y0 + 2 * that._y1) / 3,
	      (that._x0 + 4 * that._x1 + x) / 6,
	      (that._y0 + 4 * that._y1 + y) / 6
	    );
	  }
	
	  function Basis(context) {
	    this._context = context;
	  }
	
	  Basis.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 =
	      this._y0 = this._y1 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 3: point(this, this._x1, this._y1); 
	        case 2: this._context.lineTo(this._x1, this._y1); break;
	      }
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); 
	        default: point(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = x;
	      this._y0 = this._y1, this._y1 = y;
	    }
	  };
	
	  function basis(context) {
	    return new Basis(context);
	  }
	
	  function BasisClosed(context) {
	    this._context = context;
	  }
	
	  BasisClosed.prototype = {
	    areaStart: noop,
	    areaEnd: noop,
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
	      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 1: {
	          this._context.moveTo(this._x2, this._y2);
	          this._context.closePath();
	          break;
	        }
	        case 2: {
	          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
	          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
	          this._context.closePath();
	          break;
	        }
	        case 3: {
	          this.point(this._x2, this._y2);
	          this.point(this._x3, this._y3);
	          this.point(this._x4, this._y4);
	          break;
	        }
	      }
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
	        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
	        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
	        default: point(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = x;
	      this._y0 = this._y1, this._y1 = y;
	    }
	  };
	
	  function basisClosed(context) {
	    return new BasisClosed(context);
	  }
	
	  function BasisOpen(context) {
	    this._context = context;
	  }
	
	  BasisOpen.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 =
	      this._y0 = this._y1 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
	        case 3: this._point = 4; 
	        default: point(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = x;
	      this._y0 = this._y1, this._y1 = y;
	    }
	  };
	
	  function basisOpen(context) {
	    return new BasisOpen(context);
	  }
	
	  function Bundle(context, beta) {
	    this._basis = new Basis(context);
	    this._beta = beta;
	  }
	
	  Bundle.prototype = {
	    lineStart: function() {
	      this._x = [];
	      this._y = [];
	      this._basis.lineStart();
	    },
	    lineEnd: function() {
	      var x = this._x,
	          y = this._y,
	          j = x.length - 1;
	
	      if (j > 0) {
	        var x0 = x[0],
	            y0 = y[0],
	            dx = x[j] - x0,
	            dy = y[j] - y0,
	            i = -1,
	            t;
	
	        while (++i <= j) {
	          t = i / j;
	          this._basis.point(
	            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
	            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
	          );
	        }
	      }
	
	      this._x = this._y = null;
	      this._basis.lineEnd();
	    },
	    point: function(x, y) {
	      this._x.push(+x);
	      this._y.push(+y);
	    }
	  };
	
	  var bundle = (function custom(beta) {
	
	    function bundle(context) {
	      return beta === 1 ? new Basis(context) : new Bundle(context, beta);
	    }
	
	    bundle.beta = function(beta) {
	      return custom(+beta);
	    };
	
	    return bundle;
	  })(0.85);
	
	  function point$1(that, x, y) {
	    that._context.bezierCurveTo(
	      that._x1 + that._k * (that._x2 - that._x0),
	      that._y1 + that._k * (that._y2 - that._y0),
	      that._x2 + that._k * (that._x1 - x),
	      that._y2 + that._k * (that._y1 - y),
	      that._x2,
	      that._y2
	    );
	  }
	
	  function Cardinal(context, tension) {
	    this._context = context;
	    this._k = (1 - tension) / 6;
	  }
	
	  Cardinal.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 =
	      this._y0 = this._y1 = this._y2 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 2: this._context.lineTo(this._x2, this._y2); break;
	        case 3: point$1(this, this._x1, this._y1); break;
	      }
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
	        case 2: this._point = 3; 
	        default: point$1(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var cardinal = (function custom(tension) {
	
	    function cardinal(context) {
	      return new Cardinal(context, tension);
	    }
	
	    cardinal.tension = function(tension) {
	      return custom(+tension);
	    };
	
	    return cardinal;
	  })(0);
	
	  function CardinalClosed(context, tension) {
	    this._context = context;
	    this._k = (1 - tension) / 6;
	  }
	
	  CardinalClosed.prototype = {
	    areaStart: noop,
	    areaEnd: noop,
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
	      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 1: {
	          this._context.moveTo(this._x3, this._y3);
	          this._context.closePath();
	          break;
	        }
	        case 2: {
	          this._context.lineTo(this._x3, this._y3);
	          this._context.closePath();
	          break;
	        }
	        case 3: {
	          this.point(this._x3, this._y3);
	          this.point(this._x4, this._y4);
	          this.point(this._x5, this._y5);
	          break;
	        }
	      }
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
	        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
	        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
	        default: point$1(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var cardinalClosed = (function custom(tension) {
	
	    function cardinal(context) {
	      return new CardinalClosed(context, tension);
	    }
	
	    cardinal.tension = function(tension) {
	      return custom(+tension);
	    };
	
	    return cardinal;
	  })(0);
	
	  function CardinalOpen(context, tension) {
	    this._context = context;
	    this._k = (1 - tension) / 6;
	  }
	
	  CardinalOpen.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 =
	      this._y0 = this._y1 = this._y2 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
	        case 3: this._point = 4; 
	        default: point$1(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var cardinalOpen = (function custom(tension) {
	
	    function cardinal(context) {
	      return new CardinalOpen(context, tension);
	    }
	
	    cardinal.tension = function(tension) {
	      return custom(+tension);
	    };
	
	    return cardinal;
	  })(0);
	
	  function point$2(that, x, y) {
	    var x1 = that._x1,
	        y1 = that._y1,
	        x2 = that._x2,
	        y2 = that._y2;
	
	    if (that._l01_a > epsilon$1) {
	      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
	          n = 3 * that._l01_a * (that._l01_a + that._l12_a);
	      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
	      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
	    }
	
	    if (that._l23_a > epsilon$1) {
	      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
	          m = 3 * that._l23_a * (that._l23_a + that._l12_a);
	      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
	      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
	    }
	
	    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
	  }
	
	  function CatmullRom(context, alpha) {
	    this._context = context;
	    this._alpha = alpha;
	  }
	
	  CatmullRom.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 =
	      this._y0 = this._y1 = this._y2 = NaN;
	      this._l01_a = this._l12_a = this._l23_a =
	      this._l01_2a = this._l12_2a = this._l23_2a =
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 2: this._context.lineTo(this._x2, this._y2); break;
	        case 3: this.point(this, this._x2, this._y2); break;
	      }
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	
	      if (this._point) {
	        var x23 = this._x2 - x,
	            y23 = this._y2 - y;
	        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	      }
	
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; 
	        default: point$2(this, x, y); break;
	      }
	
	      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var catmullRom = (function custom(alpha) {
	
	    function catmullRom(context) {
	      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
	    }
	
	    catmullRom.alpha = function(alpha) {
	      return custom(+alpha);
	    };
	
	    return catmullRom;
	  })(0.5);
	
	  function CatmullRomClosed(context, alpha) {
	    this._context = context;
	    this._alpha = alpha;
	  }
	
	  CatmullRomClosed.prototype = {
	    areaStart: noop,
	    areaEnd: noop,
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
	      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
	      this._l01_a = this._l12_a = this._l23_a =
	      this._l01_2a = this._l12_2a = this._l23_2a =
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 1: {
	          this._context.moveTo(this._x3, this._y3);
	          this._context.closePath();
	          break;
	        }
	        case 2: {
	          this._context.lineTo(this._x3, this._y3);
	          this._context.closePath();
	          break;
	        }
	        case 3: {
	          this.point(this._x3, this._y3);
	          this.point(this._x4, this._y4);
	          this.point(this._x5, this._y5);
	          break;
	        }
	      }
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	
	      if (this._point) {
	        var x23 = this._x2 - x,
	            y23 = this._y2 - y;
	        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	      }
	
	      switch (this._point) {
	        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
	        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
	        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
	        default: point$2(this, x, y); break;
	      }
	
	      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var catmullRomClosed = (function custom(alpha) {
	
	    function catmullRom(context) {
	      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
	    }
	
	    catmullRom.alpha = function(alpha) {
	      return custom(+alpha);
	    };
	
	    return catmullRom;
	  })(0.5);
	
	  function CatmullRomOpen(context, alpha) {
	    this._context = context;
	    this._alpha = alpha;
	  }
	
	  CatmullRomOpen.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 =
	      this._y0 = this._y1 = this._y2 = NaN;
	      this._l01_a = this._l12_a = this._l23_a =
	      this._l01_2a = this._l12_2a = this._l23_2a =
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	
	      if (this._point) {
	        var x23 = this._x2 - x,
	            y23 = this._y2 - y;
	        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	      }
	
	      switch (this._point) {
	        case 0: this._point = 1; break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
	        case 3: this._point = 4; 
	        default: point$2(this, x, y); break;
	      }
	
	      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var catmullRomOpen = (function custom(alpha) {
	
	    function catmullRom(context) {
	      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
	    }
	
	    catmullRom.alpha = function(alpha) {
	      return custom(+alpha);
	    };
	
	    return catmullRom;
	  })(0.5);
	
	  function LinearClosed(context) {
	    this._context = context;
	  }
	
	  LinearClosed.prototype = {
	    areaStart: noop,
	    areaEnd: noop,
	    lineStart: function() {
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._point) this._context.closePath();
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      if (this._point) this._context.lineTo(x, y);
	      else this._point = 1, this._context.moveTo(x, y);
	    }
	  };
	
	  function linearClosed(context) {
	    return new LinearClosed(context);
	  }
	
	  function sign(x) {
	    return x < 0 ? -1 : 1;
	  }
	
	  
	  
	  
	  
	  function slope3(that, x2, y2) {
	    var h0 = that._x1 - that._x0,
	        h1 = x2 - that._x1,
	        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
	        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
	        p = (s0 * h1 + s1 * h0) / (h0 + h1);
	    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
	  }
	
	  
	  function slope2(that, t) {
	    var h = that._x1 - that._x0;
	    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
	  }
	
	  
	  
	  
	  function point$3(that, t0, t1) {
	    var x0 = that._x0,
	        y0 = that._y0,
	        x1 = that._x1,
	        y1 = that._y1,
	        dx = (x1 - x0) / 3;
	    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
	  }
	
	  function MonotoneX(context) {
	    this._context = context;
	  }
	
	  MonotoneX.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 =
	      this._y0 = this._y1 =
	      this._t0 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 2: this._context.lineTo(this._x1, this._y1); break;
	        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;
	      }
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      var t1 = NaN;
	
	      x = +x, y = +y;
	      if (x === this._x1 && y === this._y1) return; 
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
	        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;
	      }
	
	      this._x0 = this._x1, this._x1 = x;
	      this._y0 = this._y1, this._y1 = y;
	      this._t0 = t1;
	    }
	  }
	
	  function MonotoneY(context) {
	    this._context = new ReflectContext(context);
	  }
	
	  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
	    MonotoneX.prototype.point.call(this, y, x);
	  };
	
	  function ReflectContext(context) {
	    this._context = context;
	  }
	
	  ReflectContext.prototype = {
	    moveTo: function(x, y) { this._context.moveTo(y, x); },
	    closePath: function() { this._context.closePath(); },
	    lineTo: function(x, y) { this._context.lineTo(y, x); },
	    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
	  };
	
	  function monotoneX(context) {
	    return new MonotoneX(context);
	  }
	
	  function monotoneY(context) {
	    return new MonotoneY(context);
	  }
	
	  function Natural(context) {
	    this._context = context;
	  }
	
	  Natural.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x = [];
	      this._y = [];
	    },
	    lineEnd: function() {
	      var x = this._x,
	          y = this._y,
	          n = x.length;
	
	      if (n) {
	        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
	        if (n === 2) {
	          this._context.lineTo(x[1], y[1]);
	        } else {
	          var px = controlPoints(x),
	              py = controlPoints(y);
	          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
	            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
	          }
	        }
	      }
	
	      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	      this._x = this._y = null;
	    },
	    point: function(x, y) {
	      this._x.push(+x);
	      this._y.push(+y);
	    }
	  };
	
	  
	  function controlPoints(x) {
	    var i,
	        n = x.length - 1,
	        m,
	        a = new Array(n),
	        b = new Array(n),
	        r = new Array(n);
	    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
	    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
	    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
	    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
	    a[n - 1] = r[n - 1] / b[n - 1];
	    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
	    b[n - 1] = (x[n] + a[n - 1]) / 2;
	    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
	    return [a, b];
	  }
	
	  function natural(context) {
	    return new Natural(context);
	  }
	
	  function Step(context, t) {
	    this._context = context;
	    this._t = t;
	  }
	
	  Step.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x = this._y = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; 
	        default: {
	          if (this._t <= 0) {
	            this._context.lineTo(this._x, y);
	            this._context.lineTo(x, y);
	          } else {
	            var x1 = this._x * (1 - this._t) + x * this._t;
	            this._context.lineTo(x1, this._y);
	            this._context.lineTo(x1, y);
	          }
	          break;
	        }
	      }
	      this._x = x, this._y = y;
	    }
	  };
	
	  function step(context) {
	    return new Step(context, 0.5);
	  }
	
	  function stepBefore(context) {
	    return new Step(context, 0);
	  }
	
	  function stepAfter(context) {
	    return new Step(context, 1);
	  }
	
	  var slice$2 = Array.prototype.slice;
	
	  function none(series, order) {
	    if (!((n = series.length) > 1)) return;
	    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
	      s0 = s1, s1 = series[order[i]];
	      for (var j = 0; j < m; ++j) {
	        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
	      }
	    }
	  }
	
	  function none$1(series) {
	    var n = series.length, o = new Array(n);
	    while (--n >= 0) o[n] = n;
	    return o;
	  }
	
	  function stackValue(d, key) {
	    return d[key];
	  }
	
	  function stack() {
	    var keys = constant$1([]),
	        order = none$1,
	        offset = none,
	        value = stackValue;
	
	    function stack(data) {
	      var kz = keys.apply(this, arguments),
	          i,
	          m = data.length,
	          n = kz.length,
	          sz = new Array(n),
	          oz;
	
	      for (i = 0; i < n; ++i) {
	        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
	          si[j] = sij = [0, +value(data[j], ki, j, data)];
	          sij.data = data[j];
	        }
	        si.key = ki;
	      }
	
	      for (i = 0, oz = order(sz); i < n; ++i) {
	        sz[oz[i]].index = i;
	      }
	
	      offset(sz, oz);
	      return sz;
	    }
	
	    stack.keys = function(_) {
	      return arguments.length ? (keys = typeof _ === "function" ? _ : constant$1(slice$2.call(_)), stack) : keys;
	    };
	
	    stack.value = function(_) {
	      return arguments.length ? (value = typeof _ === "function" ? _ : constant$1(+_), stack) : value;
	    };
	
	    stack.order = function(_) {
	      return arguments.length ? (order = _ == null ? none$1 : typeof _ === "function" ? _ : constant$1(slice$2.call(_)), stack) : order;
	    };
	
	    stack.offset = function(_) {
	      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;
	    };
	
	    return stack;
	  }
	
	  function expand(series, order) {
	    if (!((n = series.length) > 0)) return;
	    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
	      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
	      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
	    }
	    none(series, order);
	  }
	
	  function silhouette(series, order) {
	    if (!((n = series.length) > 0)) return;
	    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
	      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
	      s0[j][1] += s0[j][0] = -y / 2;
	    }
	    none(series, order);
	  }
	
	  function wiggle(series, order) {
	    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
	    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
	      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
	        var si = series[order[i]],
	            sij0 = si[j][1] || 0,
	            sij1 = si[j - 1][1] || 0,
	            s3 = (sij0 - sij1) / 2;
	        for (var k = 0; k < i; ++k) {
	          var sk = series[order[k]],
	              skj0 = sk[j][1] || 0,
	              skj1 = sk[j - 1][1] || 0;
	          s3 += skj0 - skj1;
	        }
	        s1 += sij0, s2 += s3 * sij0;
	      }
	      s0[j - 1][1] += s0[j - 1][0] = y;
	      if (s1) y -= s2 / s1;
	    }
	    s0[j - 1][1] += s0[j - 1][0] = y;
	    none(series, order);
	  }
	
	  function ascending$1(series) {
	    var sums = series.map(sum$1);
	    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });
	  }
	
	  function sum$1(series) {
	    var s = 0, i = -1, n = series.length, v;
	    while (++i < n) if (v = +series[i][1]) s += v;
	    return s;
	  }
	
	  function descending$2(series) {
	    return ascending$1(series).reverse();
	  }
	
	  function insideOut(series) {
	    var n = series.length,
	        i,
	        j,
	        sums = series.map(sum$1),
	        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),
	        top = 0,
	        bottom = 0,
	        tops = [],
	        bottoms = [];
	
	    for (i = 0; i < n; ++i) {
	      j = order[i];
	      if (top < bottom) {
	        top += sums[j];
	        tops.push(j);
	      } else {
	        bottom += sums[j];
	        bottoms.push(j);
	      }
	    }
	
	    return bottoms.reverse().concat(tops);
	  }
	
	  function reverse(series) {
	    return none$1(series).reverse();
	  }
	
	  function define(constructor, factory, prototype) {
	    constructor.prototype = factory.prototype = prototype;
	    prototype.constructor = constructor;
	  }
	
	  function extend(parent, definition) {
	    var prototype = Object.create(parent.prototype);
	    for (var key in definition) prototype[key] = definition[key];
	    return prototype;
	  }
	
	  function Color() {}
	
	  var darker = 0.7;
	  var brighter = 1 / darker;
	
	  var reHex3 = /^#([0-9a-f]{3})$/;
	  var reHex6 = /^#([0-9a-f]{6})$/;
	  var reRgbInteger = /^rgb\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*\)$/;
	  var reRgbPercent = /^rgb\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
	  var reRgbaInteger = /^rgba\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
	  var reRgbaPercent = /^rgba\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
	  var reHslPercent = /^hsl\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
	  var reHslaPercent = /^hsla\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
	  var named = {
	    aliceblue: 0xf0f8ff,
	    antiquewhite: 0xfaebd7,
	    aqua: 0x00ffff,
	    aquamarine: 0x7fffd4,
	    azure: 0xf0ffff,
	    beige: 0xf5f5dc,
	    bisque: 0xffe4c4,
	    black: 0x000000,
	    blanchedalmond: 0xffebcd,
	    blue: 0x0000ff,
	    blueviolet: 0x8a2be2,
	    brown: 0xa52a2a,
	    burlywood: 0xdeb887,
	    cadetblue: 0x5f9ea0,
	    chartreuse: 0x7fff00,
	    chocolate: 0xd2691e,
	    coral: 0xff7f50,
	    cornflowerblue: 0x6495ed,
	    cornsilk: 0xfff8dc,
	    crimson: 0xdc143c,
	    cyan: 0x00ffff,
	    darkblue: 0x00008b,
	    darkcyan: 0x008b8b,
	    darkgoldenrod: 0xb8860b,
	    darkgray: 0xa9a9a9,
	    darkgreen: 0x006400,
	    darkgrey: 0xa9a9a9,
	    darkkhaki: 0xbdb76b,
	    darkmagenta: 0x8b008b,
	    darkolivegreen: 0x556b2f,
	    darkorange: 0xff8c00,
	    darkorchid: 0x9932cc,
	    darkred: 0x8b0000,
	    darksalmon: 0xe9967a,
	    darkseagreen: 0x8fbc8f,
	    darkslateblue: 0x483d8b,
	    darkslategray: 0x2f4f4f,
	    darkslategrey: 0x2f4f4f,
	    darkturquoise: 0x00ced1,
	    darkviolet: 0x9400d3,
	    deeppink: 0xff1493,
	    deepskyblue: 0x00bfff,
	    dimgray: 0x696969,
	    dimgrey: 0x696969,
	    dodgerblue: 0x1e90ff,
	    firebrick: 0xb22222,
	    floralwhite: 0xfffaf0,
	    forestgreen: 0x228b22,
	    fuchsia: 0xff00ff,
	    gainsboro: 0xdcdcdc,
	    ghostwhite: 0xf8f8ff,
	    gold: 0xffd700,
	    goldenrod: 0xdaa520,
	    gray: 0x808080,
	    green: 0x008000,
	    greenyellow: 0xadff2f,
	    grey: 0x808080,
	    honeydew: 0xf0fff0,
	    hotpink: 0xff69b4,
	    indianred: 0xcd5c5c,
	    indigo: 0x4b0082,
	    ivory: 0xfffff0,
	    khaki: 0xf0e68c,
	    lavender: 0xe6e6fa,
	    lavenderblush: 0xfff0f5,
	    lawngreen: 0x7cfc00,
	    lemonchiffon: 0xfffacd,
	    lightblue: 0xadd8e6,
	    lightcoral: 0xf08080,
	    lightcyan: 0xe0ffff,
	    lightgoldenrodyellow: 0xfafad2,
	    lightgray: 0xd3d3d3,
	    lightgreen: 0x90ee90,
	    lightgrey: 0xd3d3d3,
	    lightpink: 0xffb6c1,
	    lightsalmon: 0xffa07a,
	    lightseagreen: 0x20b2aa,
	    lightskyblue: 0x87cefa,
	    lightslategray: 0x778899,
	    lightslategrey: 0x778899,
	    lightsteelblue: 0xb0c4de,
	    lightyellow: 0xffffe0,
	    lime: 0x00ff00,
	    limegreen: 0x32cd32,
	    linen: 0xfaf0e6,
	    magenta: 0xff00ff,
	    maroon: 0x800000,
	    mediumaquamarine: 0x66cdaa,
	    mediumblue: 0x0000cd,
	    mediumorchid: 0xba55d3,
	    mediumpurple: 0x9370db,
	    mediumseagreen: 0x3cb371,
	    mediumslateblue: 0x7b68ee,
	    mediumspringgreen: 0x00fa9a,
	    mediumturquoise: 0x48d1cc,
	    mediumvioletred: 0xc71585,
	    midnightblue: 0x191970,
	    mintcream: 0xf5fffa,
	    mistyrose: 0xffe4e1,
	    moccasin: 0xffe4b5,
	    navajowhite: 0xffdead,
	    navy: 0x000080,
	    oldlace: 0xfdf5e6,
	    olive: 0x808000,
	    olivedrab: 0x6b8e23,
	    orange: 0xffa500,
	    orangered: 0xff4500,
	    orchid: 0xda70d6,
	    palegoldenrod: 0xeee8aa,
	    palegreen: 0x98fb98,
	    paleturquoise: 0xafeeee,
	    palevioletred: 0xdb7093,
	    papayawhip: 0xffefd5,
	    peachpuff: 0xffdab9,
	    peru: 0xcd853f,
	    pink: 0xffc0cb,
	    plum: 0xdda0dd,
	    powderblue: 0xb0e0e6,
	    purple: 0x800080,
	    rebeccapurple: 0x663399,
	    red: 0xff0000,
	    rosybrown: 0xbc8f8f,
	    royalblue: 0x4169e1,
	    saddlebrown: 0x8b4513,
	    salmon: 0xfa8072,
	    sandybrown: 0xf4a460,
	    seagreen: 0x2e8b57,
	    seashell: 0xfff5ee,
	    sienna: 0xa0522d,
	    silver: 0xc0c0c0,
	    skyblue: 0x87ceeb,
	    slateblue: 0x6a5acd,
	    slategray: 0x708090,
	    slategrey: 0x708090,
	    snow: 0xfffafa,
	    springgreen: 0x00ff7f,
	    steelblue: 0x4682b4,
	    tan: 0xd2b48c,
	    teal: 0x008080,
	    thistle: 0xd8bfd8,
	    tomato: 0xff6347,
	    turquoise: 0x40e0d0,
	    violet: 0xee82ee,
	    wheat: 0xf5deb3,
	    white: 0xffffff,
	    whitesmoke: 0xf5f5f5,
	    yellow: 0xffff00,
	    yellowgreen: 0x9acd32
	  };
	
	  define(Color, color, {
	    displayable: function() {
	      return this.rgb().displayable();
	    },
	    toString: function() {
	      return this.rgb() + "";
	    }
	  });
	
	  function color(format) {
	    var m;
	    format = (format + "").trim().toLowerCase();
	    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) 
	        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) 
	        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) 
	        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) 
	        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) 
	        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) 
	        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) 
	        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) 
	        : named.hasOwnProperty(format) ? rgbn(named[format])
	        : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
	        : null;
	  }
	
	  function rgbn(n) {
	    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
	  }
	
	  function rgba(r, g, b, a) {
	    if (a <= 0) r = g = b = NaN;
	    return new Rgb(r, g, b, a);
	  }
	
	  function rgbConvert(o) {
	    if (!(o instanceof Color)) o = color(o);
	    if (!o) return new Rgb;
	    o = o.rgb();
	    return new Rgb(o.r, o.g, o.b, o.opacity);
	  }
	
	  function colorRgb(r, g, b, opacity) {
	    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
	  }
	
	  function Rgb(r, g, b, opacity) {
	    this.r = +r;
	    this.g = +g;
	    this.b = +b;
	    this.opacity = +opacity;
	  }
	
	  define(Rgb, colorRgb, extend(Color, {
	    brighter: function(k) {
	      k = k == null ? brighter : Math.pow(brighter, k);
	      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
	    },
	    darker: function(k) {
	      k = k == null ? darker : Math.pow(darker, k);
	      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
	    },
	    rgb: function() {
	      return this;
	    },
	    displayable: function() {
	      return (0 <= this.r && this.r <= 255)
	          && (0 <= this.g && this.g <= 255)
	          && (0 <= this.b && this.b <= 255)
	          && (0 <= this.opacity && this.opacity <= 1);
	    },
	    toString: function() {
	      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
	      return (a === 1 ? "rgb(" : "rgba(")
	          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
	          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
	          + Math.max(0, Math.min(255, Math.round(this.b) || 0))
	          + (a === 1 ? ")" : ", " + a + ")");
	    }
	  }));
	
	  function hsla(h, s, l, a) {
	    if (a <= 0) h = s = l = NaN;
	    else if (l <= 0 || l >= 1) h = s = NaN;
	    else if (s <= 0) h = NaN;
	    return new Hsl(h, s, l, a);
	  }
	
	  function hslConvert(o) {
	    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
	    if (!(o instanceof Color)) o = color(o);
	    if (!o) return new Hsl;
	    if (o instanceof Hsl) return o;
	    o = o.rgb();
	    var r = o.r / 255,
	        g = o.g / 255,
	        b = o.b / 255,
	        min = Math.min(r, g, b),
	        max = Math.max(r, g, b),
	        h = NaN,
	        s = max - min,
	        l = (max + min) / 2;
	    if (s) {
	      if (r === max) h = (g - b) / s + (g < b) * 6;
	      else if (g === max) h = (b - r) / s + 2;
	      else h = (r - g) / s + 4;
	      s /= l < 0.5 ? max + min : 2 - max - min;
	      h *= 60;
	    } else {
	      s = l > 0 && l < 1 ? 0 : h;
	    }
	    return new Hsl(h, s, l, o.opacity);
	  }
	
	  function colorHsl(h, s, l, opacity) {
	    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
	  }
	
	  function Hsl(h, s, l, opacity) {
	    this.h = +h;
	    this.s = +s;
	    this.l = +l;
	    this.opacity = +opacity;
	  }
	
	  define(Hsl, colorHsl, extend(Color, {
	    brighter: function(k) {
	      k = k == null ? brighter : Math.pow(brighter, k);
	      return new Hsl(this.h, this.s, this.l * k, this.opacity);
	    },
	    darker: function(k) {
	      k = k == null ? darker : Math.pow(darker, k);
	      return new Hsl(this.h, this.s, this.l * k, this.opacity);
	    },
	    rgb: function() {
	      var h = this.h % 360 + (this.h < 0) * 360,
	          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
	          l = this.l,
	          m2 = l + (l < 0.5 ? l : 1 - l) * s,
	          m1 = 2 * l - m2;
	      return new Rgb(
	        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
	        hsl2rgb(h, m1, m2),
	        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
	        this.opacity
	      );
	    },
	    displayable: function() {
	      return (0 <= this.s && this.s <= 1 || isNaN(this.s))
	          && (0 <= this.l && this.l <= 1)
	          && (0 <= this.opacity && this.opacity <= 1);
	    }
	  }));
	
	  
	  function hsl2rgb(h, m1, m2) {
	    return (h < 60 ? m1 + (m2 - m1) * h / 60
	        : h < 180 ? m2
	        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
	        : m1) * 255;
	  }
	
	  var deg2rad = Math.PI / 180;
	  var rad2deg = 180 / Math.PI;
	
	  var Kn = 18;
	  var Xn = 0.950470;
	  var Yn = 1;
	  var Zn = 1.088830;
	  var t0 = 4 / 29;
	  var t1 = 6 / 29;
	  var t2 = 3 * t1 * t1;
	  var t3 = t1 * t1 * t1;
	  function labConvert(o) {
	    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
	    if (o instanceof Hcl) {
	      var h = o.h * deg2rad;
	      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
	    }
	    if (!(o instanceof Rgb)) o = rgbConvert(o);
	    var b = rgb2xyz(o.r),
	        a = rgb2xyz(o.g),
	        l = rgb2xyz(o.b),
	        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),
	        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),
	        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);
	    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
	  }
	
	  function lab(l, a, b, opacity) {
	    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
	  }
	
	  function Lab(l, a, b, opacity) {
	    this.l = +l;
	    this.a = +a;
	    this.b = +b;
	    this.opacity = +opacity;
	  }
	
	  define(Lab, lab, extend(Color, {
	    brighter: function(k) {
	      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
	    },
	    darker: function(k) {
	      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
	    },
	    rgb: function() {
	      var y = (this.l + 16) / 116,
	          x = isNaN(this.a) ? y : y + this.a / 500,
	          z = isNaN(this.b) ? y : y - this.b / 200;
	      y = Yn * lab2xyz(y);
	      x = Xn * lab2xyz(x);
	      z = Zn * lab2xyz(z);
	      return new Rgb(
	        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), 
	        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),
	        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),
	        this.opacity
	      );
	    }
	  }));
	
	  function xyz2lab(t) {
	    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
	  }
	
	  function lab2xyz(t) {
	    return t > t1 ? t * t * t : t2 * (t - t0);
	  }
	
	  function xyz2rgb(x) {
	    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
	  }
	
	  function rgb2xyz(x) {
	    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
	  }
	
	  function hclConvert(o) {
	    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
	    if (!(o instanceof Lab)) o = labConvert(o);
	    var h = Math.atan2(o.b, o.a) * rad2deg;
	    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
	  }
	
	  function colorHcl(h, c, l, opacity) {
	    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
	  }
	
	  function Hcl(h, c, l, opacity) {
	    this.h = +h;
	    this.c = +c;
	    this.l = +l;
	    this.opacity = +opacity;
	  }
	
	  define(Hcl, colorHcl, extend(Color, {
	    brighter: function(k) {
	      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);
	    },
	    darker: function(k) {
	      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);
	    },
	    rgb: function() {
	      return labConvert(this).rgb();
	    }
	  }));
	
	  var A = -0.14861;
	  var B = +1.78277;
	  var C = -0.29227;
	  var D = -0.90649;
	  var E = +1.97294;
	  var ED = E * D;
	  var EB = E * B;
	  var BC_DA = B * C - D * A;
	  function cubehelixConvert(o) {
	    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
	    if (!(o instanceof Rgb)) o = rgbConvert(o);
	    var r = o.r / 255,
	        g = o.g / 255,
	        b = o.b / 255,
	        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
	        bl = b - l,
	        k = (E * (g - l) - C * bl) / D,
	        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), 
	        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
	    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
	  }
	
	  function cubehelix(h, s, l, opacity) {
	    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
	  }
	
	  function Cubehelix(h, s, l, opacity) {
	    this.h = +h;
	    this.s = +s;
	    this.l = +l;
	    this.opacity = +opacity;
	  }
	
	  define(Cubehelix, cubehelix, extend(Color, {
	    brighter: function(k) {
	      k = k == null ? brighter : Math.pow(brighter, k);
	      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
	    },
	    darker: function(k) {
	      k = k == null ? darker : Math.pow(darker, k);
	      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
	    },
	    rgb: function() {
	      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
	          l = +this.l,
	          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
	          cosh = Math.cos(h),
	          sinh = Math.sin(h);
	      return new Rgb(
	        255 * (l + a * (A * cosh + B * sinh)),
	        255 * (l + a * (C * cosh + D * sinh)),
	        255 * (l + a * (E * cosh)),
	        this.opacity
	      );
	    }
	  }));
	
	  function basis$1(t1, v0, v1, v2, v3) {
	    var t2 = t1 * t1, t3 = t2 * t1;
	    return ((1 - 3 * t1 + 3 * t2 - t3) * v0
	        + (4 - 6 * t2 + 3 * t3) * v1
	        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
	        + t3 * v3) / 6;
	  }
	
	  function basis$2(values) {
	    var n = values.length - 1;
	    return function(t) {
	      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
	          v1 = values[i],
	          v2 = values[i + 1],
	          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
	          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
	      return basis$1((t - i / n) * n, v0, v1, v2, v3);
	    };
	  }
	
	  function basisClosed$1(values) {
	    var n = values.length;
	    return function(t) {
	      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
	          v0 = values[(i + n - 1) % n],
	          v1 = values[i % n],
	          v2 = values[(i + 1) % n],
	          v3 = values[(i + 2) % n];
	      return basis$1((t - i / n) * n, v0, v1, v2, v3);
	    };
	  }
	
	  function constant$2(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function linear$1(a, d) {
	    return function(t) {
	      return a + t * d;
	    };
	  }
	
	  function exponential$1(a, b, y) {
	    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
	      return Math.pow(a + t * b, y);
	    };
	  }
	
	  function hue(a, b) {
	    var d = b - a;
	    return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);
	  }
	
	  function gamma(y) {
	    return (y = +y) === 1 ? nogamma : function(a, b) {
	      return b - a ? exponential$1(a, b, y) : constant$2(isNaN(a) ? b : a);
	    };
	  }
	
	  function nogamma(a, b) {
	    var d = b - a;
	    return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);
	  }
	
	  var interpolateRgb = (function rgbGamma(y) {
	    var color = gamma(y);
	
	    function rgb(start, end) {
	      var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),
	          g = color(start.g, end.g),
	          b = color(start.b, end.b),
	          opacity = color(start.opacity, end.opacity);
	      return function(t) {
	        start.r = r(t);
	        start.g = g(t);
	        start.b = b(t);
	        start.opacity = opacity(t);
	        return start + "";
	      };
	    }
	
	    rgb.gamma = rgbGamma;
	
	    return rgb;
	  })(1);
	
	  function rgbSpline(spline) {
	    return function(colors) {
	      var n = colors.length,
	          r = new Array(n),
	          g = new Array(n),
	          b = new Array(n),
	          i, color;
	      for (i = 0; i < n; ++i) {
	        color = colorRgb(colors[i]);
	        r[i] = color.r || 0;
	        g[i] = color.g || 0;
	        b[i] = color.b || 0;
	      }
	      r = spline(r);
	      g = spline(g);
	      b = spline(b);
	      color.opacity = 1;
	      return function(t) {
	        color.r = r(t);
	        color.g = g(t);
	        color.b = b(t);
	        return color + "";
	      };
	    };
	  }
	
	  var rgbBasis = rgbSpline(basis$2);
	  var rgbBasisClosed = rgbSpline(basisClosed$1);
	
	  function array$1(a, b) {
	    var nb = b ? b.length : 0,
	        na = a ? Math.min(nb, a.length) : 0,
	        x = new Array(nb),
	        c = new Array(nb),
	        i;
	
	    for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);
	    for (; i < nb; ++i) c[i] = b[i];
	
	    return function(t) {
	      for (i = 0; i < na; ++i) c[i] = x[i](t);
	      return c;
	    };
	  }
	
	  function date(a, b) {
	    var d = new Date;
	    return a = +a, b -= a, function(t) {
	      return d.setTime(a + b * t), d;
	    };
	  }
	
	  function interpolateNumber(a, b) {
	    return a = +a, b -= a, function(t) {
	      return a + b * t;
	    };
	  }
	
	  function object(a, b) {
	    var i = {},
	        c = {},
	        k;
	
	    if (a === null || typeof a !== "object") a = {};
	    if (b === null || typeof b !== "object") b = {};
	
	    for (k in b) {
	      if (k in a) {
	        i[k] = interpolate(a[k], b[k]);
	      } else {
	        c[k] = b[k];
	      }
	    }
	
	    return function(t) {
	      for (k in i) c[k] = i[k](t);
	      return c;
	    };
	  }
	
	  var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
	  var reB = new RegExp(reA.source, "g");
	  function zero(b) {
	    return function() {
	      return b;
	    };
	  }
	
	  function one(b) {
	    return function(t) {
	      return b(t) + "";
	    };
	  }
	
	  function interpolateString(a, b) {
	    var bi = reA.lastIndex = reB.lastIndex = 0, 
	        am, 
	        bm, 
	        bs, 
	        i = -1, 
	        s = [], 
	        q = []; 
	
	    
	    a = a + "", b = b + "";
	
	    
	    while ((am = reA.exec(a))
	        && (bm = reB.exec(b))) {
	      if ((bs = bm.index) > bi) { 
	        bs = b.slice(bi, bs);
	        if (s[i]) s[i] += bs; 
	        else s[++i] = bs;
	      }
	      if ((am = am[0]) === (bm = bm[0])) { 
	        if (s[i]) s[i] += bm; 
	        else s[++i] = bm;
	      } else { 
	        s[++i] = null;
	        q.push({i: i, x: interpolateNumber(am, bm)});
	      }
	      bi = reB.lastIndex;
	    }
	
	    
	    if (bi < b.length) {
	      bs = b.slice(bi);
	      if (s[i]) s[i] += bs; 
	      else s[++i] = bs;
	    }
	
	    
	    
	    return s.length < 2 ? (q[0]
	        ? one(q[0].x)
	        : zero(b))
	        : (b = q.length, function(t) {
	            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	            return s.join("");
	          });
	  }
	
	  function interpolate(a, b) {
	    var t = typeof b, c;
	    return b == null || t === "boolean" ? constant$2(b)
	        : (t === "number" ? interpolateNumber
	        : t === "string" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)
	        : b instanceof color ? interpolateRgb
	        : b instanceof Date ? date
	        : Array.isArray(b) ? array$1
	        : isNaN(b) ? object
	        : interpolateNumber)(a, b);
	  }
	
	  function interpolateRound(a, b) {
	    return a = +a, b -= a, function(t) {
	      return Math.round(a + b * t);
	    };
	  }
	
	  var degrees = 180 / Math.PI;
	
	  var identity$2 = {
	    translateX: 0,
	    translateY: 0,
	    rotate: 0,
	    skewX: 0,
	    scaleX: 1,
	    scaleY: 1
	  };
	
	  function decompose(a, b, c, d, e, f) {
	    var scaleX, scaleY, skewX;
	    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
	    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
	    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
	    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
	    return {
	      translateX: e,
	      translateY: f,
	      rotate: Math.atan2(b, a) * degrees,
	      skewX: Math.atan(skewX) * degrees,
	      scaleX: scaleX,
	      scaleY: scaleY
	    };
	  }
	
	  var cssNode;
	  var cssRoot;
	  var cssView;
	  var svgNode;
	  function parseCss(value) {
	    if (value === "none") return identity$2;
	    if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
	    cssNode.style.transform = value;
	    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
	    cssRoot.removeChild(cssNode);
	    value = value.slice(7, -1).split(",");
	    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
	  }
	
	  function parseSvg(value) {
	    if (value == null) return identity$2;
	    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
	    svgNode.setAttribute("transform", value);
	    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;
	    value = value.matrix;
	    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
	  }
	
	  function interpolateTransform(parse, pxComma, pxParen, degParen) {
	
	    function pop(s) {
	      return s.length ? s.pop() + " " : "";
	    }
	
	    function translate(xa, ya, xb, yb, s, q) {
	      if (xa !== xb || ya !== yb) {
	        var i = s.push("translate(", null, pxComma, null, pxParen);
	        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});
	      } else if (xb || yb) {
	        s.push("translate(" + xb + pxComma + yb + pxParen);
	      }
	    }
	
	    function rotate(a, b, s, q) {
	      if (a !== b) {
	        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; 
	        q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: interpolateNumber(a, b)});
	      } else if (b) {
	        s.push(pop(s) + "rotate(" + b + degParen);
	      }
	    }
	
	    function skewX(a, b, s, q) {
	      if (a !== b) {
	        q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: interpolateNumber(a, b)});
	      } else if (b) {
	        s.push(pop(s) + "skewX(" + b + degParen);
	      }
	    }
	
	    function scale(xa, ya, xb, yb, s, q) {
	      if (xa !== xb || ya !== yb) {
	        var i = s.push(pop(s) + "scale(", null, ",", null, ")");
	        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});
	      } else if (xb !== 1 || yb !== 1) {
	        s.push(pop(s) + "scale(" + xb + "," + yb + ")");
	      }
	    }
	
	    return function(a, b) {
	      var s = [], 
	          q = []; 
	      a = parse(a), b = parse(b);
	      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
	      rotate(a.rotate, b.rotate, s, q);
	      skewX(a.skewX, b.skewX, s, q);
	      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
	      a = b = null; 
	      return function(t) {
	        var i = -1, n = q.length, o;
	        while (++i < n) s[(o = q[i]).i] = o.x(t);
	        return s.join("");
	      };
	    };
	  }
	
	  var interpolateTransform$1 = interpolateTransform(parseCss, "px, ", "px)", "deg)");
	  var interpolateTransform$2 = interpolateTransform(parseSvg, ", ", ")", ")");
	
	  var rho = Math.SQRT2;
	  var rho2 = 2;
	  var rho4 = 4;
	  var epsilon2 = 1e-12;
	  function cosh(x) {
	    return ((x = Math.exp(x)) + 1 / x) / 2;
	  }
	
	  function sinh(x) {
	    return ((x = Math.exp(x)) - 1 / x) / 2;
	  }
	
	  function tanh(x) {
	    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	  }
	
	  
	  
	  function interpolateZoom(p0, p1) {
	    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
	        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
	        dx = ux1 - ux0,
	        dy = uy1 - uy0,
	        d2 = dx * dx + dy * dy,
	        i,
	        S;
	
	    
	    if (d2 < epsilon2) {
	      S = Math.log(w1 / w0) / rho;
	      i = function(t) {
	        return [
	          ux0 + t * dx,
	          uy0 + t * dy,
	          w0 * Math.exp(rho * t * S)
	        ];
	      }
	    }
	
	    
	    else {
	      var d1 = Math.sqrt(d2),
	          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
	          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
	          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
	          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
	      S = (r1 - r0) / rho;
	      i = function(t) {
	        var s = t * S,
	            coshr0 = cosh(r0),
	            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
	        return [
	          ux0 + u * dx,
	          uy0 + u * dy,
	          w0 * coshr0 / cosh(rho * s + r0)
	        ];
	      }
	    }
	
	    i.duration = S * 1000;
	
	    return i;
	  }
	
	  function hsl(hue) {
	    return function(start, end) {
	      var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),
	          s = nogamma(start.s, end.s),
	          l = nogamma(start.l, end.l),
	          opacity = nogamma(start.opacity, end.opacity);
	      return function(t) {
	        start.h = h(t);
	        start.s = s(t);
	        start.l = l(t);
	        start.opacity = opacity(t);
	        return start + "";
	      };
	    }
	  }
	
	  var hsl$1 = hsl(hue);
	  var hslLong = hsl(nogamma);
	
	  function lab$1(start, end) {
	    var l = nogamma((start = lab(start)).l, (end = lab(end)).l),
	        a = nogamma(start.a, end.a),
	        b = nogamma(start.b, end.b),
	        opacity = nogamma(start.opacity, end.opacity);
	    return function(t) {
	      start.l = l(t);
	      start.a = a(t);
	      start.b = b(t);
	      start.opacity = opacity(t);
	      return start + "";
	    };
	  }
	
	  function hcl(hue) {
	    return function(start, end) {
	      var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),
	          c = nogamma(start.c, end.c),
	          l = nogamma(start.l, end.l),
	          opacity = nogamma(start.opacity, end.opacity);
	      return function(t) {
	        start.h = h(t);
	        start.c = c(t);
	        start.l = l(t);
	        start.opacity = opacity(t);
	        return start + "";
	      };
	    }
	  }
	
	  var hcl$1 = hcl(hue);
	  var hclLong = hcl(nogamma);
	
	  function cubehelix$1(hue) {
	    return (function cubehelixGamma(y) {
	      y = +y;
	
	      function cubehelix$$(start, end) {
	        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),
	            s = nogamma(start.s, end.s),
	            l = nogamma(start.l, end.l),
	            opacity = nogamma(start.opacity, end.opacity);
	        return function(t) {
	          start.h = h(t);
	          start.s = s(t);
	          start.l = l(Math.pow(t, y));
	          start.opacity = opacity(t);
	          return start + "";
	        };
	      }
	
	      cubehelix$$.gamma = cubehelixGamma;
	
	      return cubehelix$$;
	    })(1);
	  }
	
	  var cubehelix$2 = cubehelix$1(hue);
	  var interpolateCubehelixLong = cubehelix$1(nogamma);
	
	  function quantize(interpolator, n) {
	    var samples = new Array(n);
	    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
	    return samples;
	  }
	
	  var noop$1 = {value: function() {}};
	
	  function dispatch() {
	    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
	      if (!(t = arguments[i] + "") || (t in _)) throw new Error("illegal type: " + t);
	      _[t] = [];
	    }
	    return new Dispatch(_);
	  }
	
	  function Dispatch(_) {
	    this._ = _;
	  }
	
	  function parseTypenames(typenames, types) {
	    return typenames.trim().split(/^|\s+/).map(function(t) {
	      var name = "", i = t.indexOf(".");
	      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
	      if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
	      return {type: t, name: name};
	    });
	  }
	
	  Dispatch.prototype = dispatch.prototype = {
	    constructor: Dispatch,
	    on: function(typename, callback) {
	      var _ = this._,
	          T = parseTypenames(typename + "", _),
	          t,
	          i = -1,
	          n = T.length;
	
	      
	      if (arguments.length < 2) {
	        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
	        return;
	      }
	
	      
	      
	      if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
	      while (++i < n) {
	        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);
	        else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);
	      }
	
	      return this;
	    },
	    copy: function() {
	      var copy = {}, _ = this._;
	      for (var t in _) copy[t] = _[t].slice();
	      return new Dispatch(copy);
	    },
	    call: function(type, that) {
	      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
	      if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
	      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
	    },
	    apply: function(type, that, args) {
	      if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
	      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
	    }
	  };
	
	  function get(type, name) {
	    for (var i = 0, n = type.length, c; i < n; ++i) {
	      if ((c = type[i]).name === name) {
	        return c.value;
	      }
	    }
	  }
	
	  function set$1(type, name, callback) {
	    for (var i = 0, n = type.length; i < n; ++i) {
	      if (type[i].name === name) {
	        type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));
	        break;
	      }
	    }
	    if (callback != null) type.push({name: name, value: callback});
	    return type;
	  }
	
	  function objectConverter(columns) {
	    return new Function("d", "return {" + columns.map(function(name, i) {
	      return JSON.stringify(name) + ": d[" + i + "]";
	    }).join(",") + "}");
	  }
	
	  function customConverter(columns, f) {
	    var object = objectConverter(columns);
	    return function(row, i) {
	      return f(object(row), i, columns);
	    };
	  }
	
	  
	  function inferColumns(rows) {
	    var columnSet = Object.create(null),
	        columns = [];
	
	    rows.forEach(function(row) {
	      for (var column in row) {
	        if (!(column in columnSet)) {
	          columns.push(columnSet[column] = column);
	        }
	      }
	    });
	
	    return columns;
	  }
	
	  function dsv(delimiter) {
	    var reFormat = new RegExp("[\"" + delimiter + "\n]"),
	        delimiterCode = delimiter.charCodeAt(0);
	
	    function parse(text, f) {
	      var convert, columns, rows = parseRows(text, function(row, i) {
	        if (convert) return convert(row, i - 1);
	        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
	      });
	      rows.columns = columns;
	      return rows;
	    }
	
	    function parseRows(text, f) {
	      var EOL = {}, 
	          EOF = {}, 
	          rows = [], 
	          N = text.length,
	          I = 0, 
	          n = 0, 
	          t, 
	          eol; 
	
	      function token() {
	        if (I >= N) return EOF; 
	        if (eol) return eol = false, EOL; 
	
	        
	        var j = I, c;
	        if (text.charCodeAt(j) === 34) {
	          var i = j;
	          while (i++ < N) {
	            if (text.charCodeAt(i) === 34) {
	              if (text.charCodeAt(i + 1) !== 34) break;
	              ++i;
	            }
	          }
	          I = i + 2;
	          c = text.charCodeAt(i + 1);
	          if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(i + 2) === 10) ++I;
	          } else if (c === 10) {
	            eol = true;
	          }
	          return text.slice(j + 1, i).replace(/""/g, "\"");
	        }
	
	        
	        while (I < N) {
	          var k = 1;
	          c = text.charCodeAt(I++);
	          if (c === 10) eol = true; 
	          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } 
	          else if (c !== delimiterCode) continue;
	          return text.slice(j, I - k);
	        }
	
	        
	        return text.slice(j);
	      }
	
	      while ((t = token()) !== EOF) {
	        var a = [];
	        while (t !== EOL && t !== EOF) {
	          a.push(t);
	          t = token();
	        }
	        if (f && (a = f(a, n++)) == null) continue;
	        rows.push(a);
	      }
	
	      return rows;
	    }
	
	    function format(rows, columns) {
	      if (columns == null) columns = inferColumns(rows);
	      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {
	        return columns.map(function(column) {
	          return formatValue(row[column]);
	        }).join(delimiter);
	      })).join("\n");
	    }
	
	    function formatRows(rows) {
	      return rows.map(formatRow).join("\n");
	    }
	
	    function formatRow(row) {
	      return row.map(formatValue).join(delimiter);
	    }
	
	    function formatValue(text) {
	      return text == null ? ""
	          : reFormat.test(text += "") ? "\"" + text.replace(/\"/g, "\"\"") + "\""
	          : text;
	    }
	
	    return {
	      parse: parse,
	      parseRows: parseRows,
	      format: format,
	      formatRows: formatRows
	    };
	  }
	
	  var csv = dsv(",");
	
	  var csvParse = csv.parse;
	  var csvParseRows = csv.parseRows;
	  var csvFormat = csv.format;
	  var csvFormatRows = csv.formatRows;
	
	  var tsv = dsv("\t");
	
	  var tsvParse = tsv.parse;
	  var tsvParseRows = tsv.parseRows;
	  var tsvFormat = tsv.format;
	  var tsvFormatRows = tsv.formatRows;
	
	  function request(url, callback) {
	    var request,
	        event = dispatch("beforesend", "progress", "load", "error"),
	        mimeType,
	        headers = map$1(),
	        xhr = new XMLHttpRequest,
	        user = null,
	        password = null,
	        response,
	        responseType,
	        timeout = 0;
	
	    
	    if (typeof XDomainRequest !== "undefined"
	        && !("withCredentials" in xhr)
	        && /^(http(s)?:)?\/\//.test(url)) xhr = new XDomainRequest;
	
	    "onload" in xhr
	        ? xhr.onload = xhr.onerror = xhr.ontimeout = respond
	        : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };
	
	    function respond(o) {
	      var status = xhr.status, result;
	      if (!status && hasResponse(xhr)
	          || status >= 200 && status < 300
	          || status === 304) {
	        if (response) {
	          try {
	            result = response.call(request, xhr);
	          } catch (e) {
	            event.call("error", request, e);
	            return;
	          }
	        } else {
	          result = xhr;
	        }
	        event.call("load", request, result);
	      } else {
	        event.call("error", request, o);
	      }
	    }
	
	    xhr.onprogress = function(e) {
	      event.call("progress", request, e);
	    };
	
	    request = {
	      header: function(name, value) {
	        name = (name + "").toLowerCase();
	        if (arguments.length < 2) return headers.get(name);
	        if (value == null) headers.remove(name);
	        else headers.set(name, value + "");
	        return request;
	      },
	
	      
	      mimeType: function(value) {
	        if (!arguments.length) return mimeType;
	        mimeType = value == null ? null : value + "";
	        return request;
	      },
	
	      
	      
	      responseType: function(value) {
	        if (!arguments.length) return responseType;
	        responseType = value;
	        return request;
	      },
	
	      timeout: function(value) {
	        if (!arguments.length) return timeout;
	        timeout = +value;
	        return request;
	      },
	
	      user: function(value) {
	        return arguments.length < 1 ? user : (user = value == null ? null : value + "", request);
	      },
	
	      password: function(value) {
	        return arguments.length < 1 ? password : (password = value == null ? null : value + "", request);
	      },
	
	      
	      
	      response: function(value) {
	        response = value;
	        return request;
	      },
	
	      
	      get: function(data, callback) {
	        return request.send("GET", data, callback);
	      },
	
	      
	      post: function(data, callback) {
	        return request.send("POST", data, callback);
	      },
	
	      
	      send: function(method, data, callback) {
	        if (!callback && typeof data === "function") callback = data, data = null;
	        if (callback && callback.length === 1) callback = fixCallback(callback);
	        xhr.open(method, url, true, user, password);
	        if (mimeType != null && !headers.has("accept")) headers.set("accept", mimeType + ",*/*");
	        if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });
	        if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);
	        if (responseType != null) xhr.responseType = responseType;
	        if (timeout > 0) xhr.timeout = timeout;
	        if (callback) request.on("error", callback).on("load", function(xhr) { callback(null, xhr); });
	        event.call("beforesend", request, xhr);
	        xhr.send(data == null ? null : data);
	        return request;
	      },
	
	      abort: function() {
	        xhr.abort();
	        return request;
	      },
	
	      on: function() {
	        var value = event.on.apply(event, arguments);
	        return value === event ? request : value;
	      }
	    };
	
	    return callback
	        ? request.get(callback)
	        : request;
	  }
	
	  function fixCallback(callback) {
	    return function(error, xhr) {
	      callback(error == null ? xhr : null);
	    };
	  }
	
	  function hasResponse(xhr) {
	    var type = xhr.responseType;
	    return type && type !== "text"
	        ? xhr.response 
	        : xhr.responseText; 
	  }
	
	  function type(defaultMimeType, response) {
	    return function(url, callback) {
	      var r = request(url).mimeType(defaultMimeType).response(response);
	      return callback ? r.get(callback) : r;
	    };
	  }
	
	  var html = type("text/html", function(xhr) {
	    return document.createRange().createContextualFragment(xhr.responseText);
	  });
	
	  var json = type("application/json", function(xhr) {
	    return JSON.parse(xhr.responseText);
	  });
	
	  var text = type("text/plain", function(xhr) {
	    return xhr.responseText;
	  });
	
	  var xml = type("application/xml", function(xhr) {
	    var xml = xhr.responseXML;
	    if (!xml) throw new Error("parse error");
	    return xml;
	  });
	
	  function dsv$1(defaultMimeType, parse) {
	    return function(url, row, callback) {
	      if (arguments.length < 3) callback = row, row = null;
	      var r = request(url).mimeType(defaultMimeType);
	      r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };
	      r.row(row);
	      return callback ? r.get(callback) : r;
	    };
	  }
	
	  function responseOf(parse, row) {
	    return function(request) {
	      return parse(request.responseText, row);
	    };
	  }
	
	  var csv$1 = dsv$1("text/csv", csvParse);
	
	  var tsv$1 = dsv$1("text/tab-separated-values", tsvParse);
	
	  var frame = 0;
	  var timeout = 0;
	  var interval = 0;
	  var pokeDelay = 1000;
	  var taskHead;
	  var taskTail;
	  var clockLast = 0;
	  var clockNow = 0;
	  var clockSkew = 0;
	  var clock = typeof performance === "object" && performance.now ? performance : Date;
	  var setFrame = typeof requestAnimationFrame === "function"
	          ? (clock === Date ? function(f) { requestAnimationFrame(function() { f(clock.now()); }); } : requestAnimationFrame)
	          : function(f) { setTimeout(f, 17); };
	  function now() {
	    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
	  }
	
	  function clearNow() {
	    clockNow = 0;
	  }
	
	  function Timer() {
	    this._call =
	    this._time =
	    this._next = null;
	  }
	
	  Timer.prototype = timer.prototype = {
	    constructor: Timer,
	    restart: function(callback, delay, time) {
	      if (typeof callback !== "function") throw new TypeError("callback is not a function");
	      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
	      if (!this._next && taskTail !== this) {
	        if (taskTail) taskTail._next = this;
	        else taskHead = this;
	        taskTail = this;
	      }
	      this._call = callback;
	      this._time = time;
	      sleep();
	    },
	    stop: function() {
	      if (this._call) {
	        this._call = null;
	        this._time = Infinity;
	        sleep();
	      }
	    }
	  };
	
	  function timer(callback, delay, time) {
	    var t = new Timer;
	    t.restart(callback, delay, time);
	    return t;
	  }
	
	  function timerFlush() {
	    now(); 
	    ++frame; 
	    var t = taskHead, e;
	    while (t) {
	      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
	      t = t._next;
	    }
	    --frame;
	  }
	
	  function wake(time) {
	    clockNow = (clockLast = time || clock.now()) + clockSkew;
	    frame = timeout = 0;
	    try {
	      timerFlush();
	    } finally {
	      frame = 0;
	      nap();
	      clockNow = 0;
	    }
	  }
	
	  function poke$1() {
	    var now = clock.now(), delay = now - clockLast;
	    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
	  }
	
	  function nap() {
	    var t0, t1 = taskHead, t2, time = Infinity;
	    while (t1) {
	      if (t1._call) {
	        if (time > t1._time) time = t1._time;
	        t0 = t1, t1 = t1._next;
	      } else {
	        t2 = t1._next, t1._next = null;
	        t1 = t0 ? t0._next = t2 : taskHead = t2;
	      }
	    }
	    taskTail = t0;
	    sleep(time);
	  }
	
	  function sleep(time) {
	    if (frame) return; 
	    if (timeout) timeout = clearTimeout(timeout);
	    var delay = time - clockNow;
	    if (delay > 24) {
	      if (time < Infinity) timeout = setTimeout(wake, delay);
	      if (interval) interval = clearInterval(interval);
	    } else {
	      if (!interval) interval = setInterval(poke$1, pokeDelay);
	      frame = 1, setFrame(wake);
	    }
	  }
	
	  function timeout$1(callback, delay, time) {
	    var t = new Timer;
	    delay = delay == null ? 0 : +delay;
	    t.restart(function(elapsed) {
	      t.stop();
	      callback(elapsed + delay);
	    }, delay, time);
	    return t;
	  }
	
	  function interval$1(callback, delay, time) {
	    var t = new Timer, total = delay;
	    if (delay == null) return t.restart(callback, delay, time), t;
	    delay = +delay, time = time == null ? now() : +time;
	    t.restart(function tick(elapsed) {
	      elapsed += total;
	      t.restart(tick, total += delay, time);
	      callback(elapsed);
	    }, delay, time);
	    return t;
	  }
	
	var   t0$1 = new Date;
	var   t1$1 = new Date;
	  function newInterval(floori, offseti, count, field) {
	
	    function interval(date) {
	      return floori(date = new Date(+date)), date;
	    }
	
	    interval.floor = interval;
	
	    interval.ceil = function(date) {
	      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
	    };
	
	    interval.round = function(date) {
	      var d0 = interval(date),
	          d1 = interval.ceil(date);
	      return date - d0 < d1 - date ? d0 : d1;
	    };
	
	    interval.offset = function(date, step) {
	      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
	    };
	
	    interval.range = function(start, stop, step) {
	      var range = [];
	      start = interval.ceil(start);
	      step = step == null ? 1 : Math.floor(step);
	      if (!(start < stop) || !(step > 0)) return range; 
	      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)
	      return range;
	    };
	
	    interval.filter = function(test) {
	      return newInterval(function(date) {
	        while (floori(date), !test(date)) date.setTime(date - 1);
	      }, function(date, step) {
	        while (--step >= 0) while (offseti(date, 1), !test(date));
	      });
	    };
	
	    if (count) {
	      interval.count = function(start, end) {
	        t0$1.setTime(+start), t1$1.setTime(+end);
	        floori(t0$1), floori(t1$1);
	        return Math.floor(count(t0$1, t1$1));
	      };
	
	      interval.every = function(step) {
	        step = Math.floor(step);
	        return !isFinite(step) || !(step > 0) ? null
	            : !(step > 1) ? interval
	            : interval.filter(field
	                ? function(d) { return field(d) % step === 0; }
	                : function(d) { return interval.count(0, d) % step === 0; });
	      };
	    }
	
	    return interval;
	  }
	
	  var millisecond = newInterval(function() {
	    
	  }, function(date, step) {
	    date.setTime(+date + step);
	  }, function(start, end) {
	    return end - start;
	  });
	
	  
	  millisecond.every = function(k) {
	    k = Math.floor(k);
	    if (!isFinite(k) || !(k > 0)) return null;
	    if (!(k > 1)) return millisecond;
	    return newInterval(function(date) {
	      date.setTime(Math.floor(date / k) * k);
	    }, function(date, step) {
	      date.setTime(+date + step * k);
	    }, function(start, end) {
	      return (end - start) / k;
	    });
	  };
	
	  var milliseconds = millisecond.range;
	
	  var durationSecond = 1e3;
	  var durationMinute = 6e4;
	  var durationHour = 36e5;
	  var durationDay = 864e5;
	  var durationWeek = 6048e5;
	
	  var second = newInterval(function(date) {
	    date.setTime(Math.floor(date / durationSecond) * durationSecond);
	  }, function(date, step) {
	    date.setTime(+date + step * durationSecond);
	  }, function(start, end) {
	    return (end - start) / durationSecond;
	  }, function(date) {
	    return date.getUTCSeconds();
	  });
	
	  var seconds = second.range;
	
	  var minute = newInterval(function(date) {
	    date.setTime(Math.floor(date / durationMinute) * durationMinute);
	  }, function(date, step) {
	    date.setTime(+date + step * durationMinute);
	  }, function(start, end) {
	    return (end - start) / durationMinute;
	  }, function(date) {
	    return date.getMinutes();
	  });
	
	  var minutes = minute.range;
	
	  var hour = newInterval(function(date) {
	    var offset = date.getTimezoneOffset() * durationMinute % durationHour;
	    if (offset < 0) offset += durationHour;
	    date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);
	  }, function(date, step) {
	    date.setTime(+date + step * durationHour);
	  }, function(start, end) {
	    return (end - start) / durationHour;
	  }, function(date) {
	    return date.getHours();
	  });
	
	  var hours = hour.range;
	
	  var day = newInterval(function(date) {
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setDate(date.getDate() + step);
	  }, function(start, end) {
	    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;
	  }, function(date) {
	    return date.getDate() - 1;
	  });
	
	  var days = day.range;
	
	  function weekday(i) {
	    return newInterval(function(date) {
	      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
	      date.setHours(0, 0, 0, 0);
	    }, function(date, step) {
	      date.setDate(date.getDate() + step * 7);
	    }, function(start, end) {
	      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
	    });
	  }
	
	  var timeWeek = weekday(0);
	  var timeMonday = weekday(1);
	  var tuesday = weekday(2);
	  var wednesday = weekday(3);
	  var thursday = weekday(4);
	  var friday = weekday(5);
	  var saturday = weekday(6);
	
	  var sundays = timeWeek.range;
	  var mondays = timeMonday.range;
	  var tuesdays = tuesday.range;
	  var wednesdays = wednesday.range;
	  var thursdays = thursday.range;
	  var fridays = friday.range;
	  var saturdays = saturday.range;
	
	  var month = newInterval(function(date) {
	    date.setDate(1);
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setMonth(date.getMonth() + step);
	  }, function(start, end) {
	    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
	  }, function(date) {
	    return date.getMonth();
	  });
	
	  var months = month.range;
	
	  var year = newInterval(function(date) {
	    date.setMonth(0, 1);
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setFullYear(date.getFullYear() + step);
	  }, function(start, end) {
	    return end.getFullYear() - start.getFullYear();
	  }, function(date) {
	    return date.getFullYear();
	  });
	
	  
	  year.every = function(k) {
	    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
	      date.setFullYear(Math.floor(date.getFullYear() / k) * k);
	      date.setMonth(0, 1);
	      date.setHours(0, 0, 0, 0);
	    }, function(date, step) {
	      date.setFullYear(date.getFullYear() + step * k);
	    });
	  };
	
	  var years = year.range;
	
	  var utcMinute = newInterval(function(date) {
	    date.setUTCSeconds(0, 0);
	  }, function(date, step) {
	    date.setTime(+date + step * durationMinute);
	  }, function(start, end) {
	    return (end - start) / durationMinute;
	  }, function(date) {
	    return date.getUTCMinutes();
	  });
	
	  var utcMinutes = utcMinute.range;
	
	  var utcHour = newInterval(function(date) {
	    date.setUTCMinutes(0, 0, 0);
	  }, function(date, step) {
	    date.setTime(+date + step * durationHour);
	  }, function(start, end) {
	    return (end - start) / durationHour;
	  }, function(date) {
	    return date.getUTCHours();
	  });
	
	  var utcHours = utcHour.range;
	
	  var utcDay = newInterval(function(date) {
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCDate(date.getUTCDate() + step);
	  }, function(start, end) {
	    return (end - start) / durationDay;
	  }, function(date) {
	    return date.getUTCDate() - 1;
	  });
	
	  var utcDays = utcDay.range;
	
	  function utcWeekday(i) {
	    return newInterval(function(date) {
	      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
	      date.setUTCHours(0, 0, 0, 0);
	    }, function(date, step) {
	      date.setUTCDate(date.getUTCDate() + step * 7);
	    }, function(start, end) {
	      return (end - start) / durationWeek;
	    });
	  }
	
	  var utcWeek = utcWeekday(0);
	  var utcMonday = utcWeekday(1);
	  var utcTuesday = utcWeekday(2);
	  var utcWednesday = utcWeekday(3);
	  var utcThursday = utcWeekday(4);
	  var utcFriday = utcWeekday(5);
	  var utcSaturday = utcWeekday(6);
	
	  var utcSundays = utcWeek.range;
	  var utcMondays = utcMonday.range;
	  var utcTuesdays = utcTuesday.range;
	  var utcWednesdays = utcWednesday.range;
	  var utcThursdays = utcThursday.range;
	  var utcFridays = utcFriday.range;
	  var utcSaturdays = utcSaturday.range;
	
	  var utcMonth = newInterval(function(date) {
	    date.setUTCDate(1);
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCMonth(date.getUTCMonth() + step);
	  }, function(start, end) {
	    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
	  }, function(date) {
	    return date.getUTCMonth();
	  });
	
	  var utcMonths = utcMonth.range;
	
	  var utcYear = newInterval(function(date) {
	    date.setUTCMonth(0, 1);
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCFullYear(date.getUTCFullYear() + step);
	  }, function(start, end) {
	    return end.getUTCFullYear() - start.getUTCFullYear();
	  }, function(date) {
	    return date.getUTCFullYear();
	  });
	
	  
	  utcYear.every = function(k) {
	    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
	      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
	      date.setUTCMonth(0, 1);
	      date.setUTCHours(0, 0, 0, 0);
	    }, function(date, step) {
	      date.setUTCFullYear(date.getUTCFullYear() + step * k);
	    });
	  };
	
	  var utcYears = utcYear.range;
	
	  
	  
	  
	  function formatDecimal(x, p) {
	    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; 
	    var i, coefficient = x.slice(0, i);
	
	    
	    
	    return [
	      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
	      +x.slice(i + 1)
	    ];
	  }
	
	  function exponent$1(x) {
	    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
	  }
	
	  function formatGroup(grouping, thousands) {
	    return function(value, width) {
	      var i = value.length,
	          t = [],
	          j = 0,
	          g = grouping[0],
	          length = 0;
	
	      while (i > 0 && g > 0) {
	        if (length + g + 1 > width) g = Math.max(1, width - length);
	        t.push(value.substring(i -= g, i + g));
	        if ((length += g + 1) > width) break;
	        g = grouping[j = (j + 1) % grouping.length];
	      }
	
	      return t.reverse().join(thousands);
	    };
	  }
	
	  function formatDefault(x, p) {
	    x = x.toPrecision(p);
	
	    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {
	      switch (x[i]) {
	        case ".": i0 = i1 = i; break;
	        case "0": if (i0 === 0) i0 = i; i1 = i; break;
	        case "e": break out;
	        default: if (i0 > 0) i0 = 0; break;
	      }
	    }
	
	    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
	  }
	
	  var prefixExponent;
	
	  function formatPrefixAuto(x, p) {
	    var d = formatDecimal(x, p);
	    if (!d) return x + "";
	    var coefficient = d[0],
	        exponent = d[1],
	        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
	        n = coefficient.length;
	    return i === n ? coefficient
	        : i > n ? coefficient + new Array(i - n + 1).join("0")
	        : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
	        : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; 
	  }
	
	  function formatRounded(x, p) {
	    var d = formatDecimal(x, p);
	    if (!d) return x + "";
	    var coefficient = d[0],
	        exponent = d[1];
	    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
	        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
	        : coefficient + new Array(exponent - coefficient.length + 2).join("0");
	  }
	
	  var formatTypes = {
	    "": formatDefault,
	    "%": function(x, p) { return (x * 100).toFixed(p); },
	    "b": function(x) { return Math.round(x).toString(2); },
	    "c": function(x) { return x + ""; },
	    "d": function(x) { return Math.round(x).toString(10); },
	    "e": function(x, p) { return x.toExponential(p); },
	    "f": function(x, p) { return x.toFixed(p); },
	    "g": function(x, p) { return x.toPrecision(p); },
	    "o": function(x) { return Math.round(x).toString(8); },
	    "p": function(x, p) { return formatRounded(x * 100, p); },
	    "r": formatRounded,
	    "s": formatPrefixAuto,
	    "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
	    "x": function(x) { return Math.round(x).toString(16); }
	  };
	
	  
	  var re = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;
	
	  function formatSpecifier(specifier) {
	    return new FormatSpecifier(specifier);
	  }
	
	  function FormatSpecifier(specifier) {
	    if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
	
	    var match,
	        fill = match[1] || " ",
	        align = match[2] || ">",
	        sign = match[3] || "-",
	        symbol = match[4] || "",
	        zero = !!match[5],
	        width = match[6] && +match[6],
	        comma = !!match[7],
	        precision = match[8] && +match[8].slice(1),
	        type = match[9] || "";
	
	    
	    if (type === "n") comma = true, type = "g";
	
	    
	    else if (!formatTypes[type]) type = "";
	
	    
	    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";
	
	    this.fill = fill;
	    this.align = align;
	    this.sign = sign;
	    this.symbol = symbol;
	    this.zero = zero;
	    this.width = width;
	    this.comma = comma;
	    this.precision = precision;
	    this.type = type;
	  }
	
	  FormatSpecifier.prototype.toString = function() {
	    return this.fill
	        + this.align
	        + this.sign
	        + this.symbol
	        + (this.zero ? "0" : "")
	        + (this.width == null ? "" : Math.max(1, this.width | 0))
	        + (this.comma ? "," : "")
	        + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0))
	        + this.type;
	  };
	
	  var prefixes = ["y","z","a","f","p","n","\xB5","m","","k","M","G","T","P","E","Z","Y"];
	
	  function identity$3(x) {
	    return x;
	  }
	
	  function formatLocale(locale) {
	    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,
	        currency = locale.currency,
	        decimal = locale.decimal;
	
	    function newFormat(specifier) {
	      specifier = formatSpecifier(specifier);
	
	      var fill = specifier.fill,
	          align = specifier.align,
	          sign = specifier.sign,
	          symbol = specifier.symbol,
	          zero = specifier.zero,
	          width = specifier.width,
	          comma = specifier.comma,
	          precision = specifier.precision,
	          type = specifier.type;
	
	      
	      
	      var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
	          suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? "%" : "";
	
	      
	      
	      
	      var formatType = formatTypes[type],
	          maybeSuffix = !type || /[defgprs%]/.test(type);
	
	      
	      
	      
	      
	      precision = precision == null ? (type ? 6 : 12)
	          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
	          : Math.max(0, Math.min(20, precision));
	
	      function format(value) {
	        var valuePrefix = prefix,
	            valueSuffix = suffix,
	            i, n, c;
	
	        if (type === "c") {
	          valueSuffix = formatType(value) + valueSuffix;
	          value = "";
	        } else {
	          value = +value;
	
	          
	          
	          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);
	
	          
	          value = formatType(value, precision);
	
	          
	          
	          if (valueNegative) {
	            i = -1, n = value.length;
	            valueNegative = false;
	            while (++i < n) {
	              if (c = value.charCodeAt(i), (48 < c && c < 58)
	                  || (type === "x" && 96 < c && c < 103)
	                  || (type === "X" && 64 < c && c < 71)) {
	                valueNegative = true;
	                break;
	              }
	            }
	          }
	
	          
	          valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
	          valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");
	
	          
	          
	          if (maybeSuffix) {
	            i = -1, n = value.length;
	            while (++i < n) {
	              if (c = value.charCodeAt(i), 48 > c || c > 57) {
	                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
	                value = value.slice(0, i);
	                break;
	              }
	            }
	          }
	        }
	
	        
	        if (comma && !zero) value = group(value, Infinity);
	
	        
	        var length = valuePrefix.length + value.length + valueSuffix.length,
	            padding = length < width ? new Array(width - length + 1).join(fill) : "";
	
	        
	        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
	
	        
	        switch (align) {
	          case "<": return valuePrefix + value + valueSuffix + padding;
	          case "=": return valuePrefix + padding + value + valueSuffix;
	          case "^": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
	        }
	        return padding + valuePrefix + value + valueSuffix;
	      }
	
	      format.toString = function() {
	        return specifier + "";
	      };
	
	      return format;
	    }
	
	    function formatPrefix(specifier, value) {
	      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
	          e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,
	          k = Math.pow(10, -e),
	          prefix = prefixes[8 + e / 3];
	      return function(value) {
	        return f(k * value) + prefix;
	      };
	    }
	
	    return {
	      format: newFormat,
	      formatPrefix: formatPrefix
	    };
	  }
	
	  var locale;
	  exports.format;
	  exports.formatPrefix;
	
	  defaultLocale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [3],
	    currency: ["$", ""]
	  });
	
	  function defaultLocale(definition) {
	    locale = formatLocale(definition);
	    exports.format = locale.format;
	    exports.formatPrefix = locale.formatPrefix;
	    return locale;
	  }
	
	  function precisionFixed(step) {
	    return Math.max(0, -exponent$1(Math.abs(step)));
	  }
	
	  function precisionPrefix(step, value) {
	    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));
	  }
	
	  function precisionRound(step, max) {
	    step = Math.abs(step), max = Math.abs(max) - step;
	    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;
	  }
	
	  function localDate(d) {
	    if (0 <= d.y && d.y < 100) {
	      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
	      date.setFullYear(d.y);
	      return date;
	    }
	    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
	  }
	
	  function utcDate(d) {
	    if (0 <= d.y && d.y < 100) {
	      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
	      date.setUTCFullYear(d.y);
	      return date;
	    }
	    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
	  }
	
	  function newYear(y) {
	    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};
	  }
	
	  function formatLocale$1(locale) {
	    var locale_dateTime = locale.dateTime,
	        locale_date = locale.date,
	        locale_time = locale.time,
	        locale_periods = locale.periods,
	        locale_weekdays = locale.days,
	        locale_shortWeekdays = locale.shortDays,
	        locale_months = locale.months,
	        locale_shortMonths = locale.shortMonths;
	
	    var periodRe = formatRe(locale_periods),
	        periodLookup = formatLookup(locale_periods),
	        weekdayRe = formatRe(locale_weekdays),
	        weekdayLookup = formatLookup(locale_weekdays),
	        shortWeekdayRe = formatRe(locale_shortWeekdays),
	        shortWeekdayLookup = formatLookup(locale_shortWeekdays),
	        monthRe = formatRe(locale_months),
	        monthLookup = formatLookup(locale_months),
	        shortMonthRe = formatRe(locale_shortMonths),
	        shortMonthLookup = formatLookup(locale_shortMonths);
	
	    var formats = {
	      "a": formatShortWeekday,
	      "A": formatWeekday,
	      "b": formatShortMonth,
	      "B": formatMonth,
	      "c": null,
	      "d": formatDayOfMonth,
	      "e": formatDayOfMonth,
	      "H": formatHour24,
	      "I": formatHour12,
	      "j": formatDayOfYear,
	      "L": formatMilliseconds,
	      "m": formatMonthNumber,
	      "M": formatMinutes,
	      "p": formatPeriod,
	      "S": formatSeconds,
	      "U": formatWeekNumberSunday,
	      "w": formatWeekdayNumber,
	      "W": formatWeekNumberMonday,
	      "x": null,
	      "X": null,
	      "y": formatYear,
	      "Y": formatFullYear,
	      "Z": formatZone,
	      "%": formatLiteralPercent
	    };
	
	    var utcFormats = {
	      "a": formatUTCShortWeekday,
	      "A": formatUTCWeekday,
	      "b": formatUTCShortMonth,
	      "B": formatUTCMonth,
	      "c": null,
	      "d": formatUTCDayOfMonth,
	      "e": formatUTCDayOfMonth,
	      "H": formatUTCHour24,
	      "I": formatUTCHour12,
	      "j": formatUTCDayOfYear,
	      "L": formatUTCMilliseconds,
	      "m": formatUTCMonthNumber,
	      "M": formatUTCMinutes,
	      "p": formatUTCPeriod,
	      "S": formatUTCSeconds,
	      "U": formatUTCWeekNumberSunday,
	      "w": formatUTCWeekdayNumber,
	      "W": formatUTCWeekNumberMonday,
	      "x": null,
	      "X": null,
	      "y": formatUTCYear,
	      "Y": formatUTCFullYear,
	      "Z": formatUTCZone,
	      "%": formatLiteralPercent
	    };
	
	    var parses = {
	      "a": parseShortWeekday,
	      "A": parseWeekday,
	      "b": parseShortMonth,
	      "B": parseMonth,
	      "c": parseLocaleDateTime,
	      "d": parseDayOfMonth,
	      "e": parseDayOfMonth,
	      "H": parseHour24,
	      "I": parseHour24,
	      "j": parseDayOfYear,
	      "L": parseMilliseconds,
	      "m": parseMonthNumber,
	      "M": parseMinutes,
	      "p": parsePeriod,
	      "S": parseSeconds,
	      "U": parseWeekNumberSunday,
	      "w": parseWeekdayNumber,
	      "W": parseWeekNumberMonday,
	      "x": parseLocaleDate,
	      "X": parseLocaleTime,
	      "y": parseYear,
	      "Y": parseFullYear,
	      "Z": parseZone,
	      "%": parseLiteralPercent
	    };
	
	    
	    formats.x = newFormat(locale_date, formats);
	    formats.X = newFormat(locale_time, formats);
	    formats.c = newFormat(locale_dateTime, formats);
	    utcFormats.x = newFormat(locale_date, utcFormats);
	    utcFormats.X = newFormat(locale_time, utcFormats);
	    utcFormats.c = newFormat(locale_dateTime, utcFormats);
	
	    function newFormat(specifier, formats) {
	      return function(date) {
	        var string = [],
	            i = -1,
	            j = 0,
	            n = specifier.length,
	            c,
	            pad,
	            format;
	
	        if (!(date instanceof Date)) date = new Date(+date);
	
	        while (++i < n) {
	          if (specifier.charCodeAt(i) === 37) {
	            string.push(specifier.slice(j, i));
	            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
	            else pad = c === "e" ? " " : "0";
	            if (format = formats[c]) c = format(date, pad);
	            string.push(c);
	            j = i + 1;
	          }
	        }
	
	        string.push(specifier.slice(j, i));
	        return string.join("");
	      };
	    }
	
	    function newParse(specifier, newDate) {
	      return function(string) {
	        var d = newYear(1900),
	            i = parseSpecifier(d, specifier, string += "", 0);
	        if (i != string.length) return null;
	
	        
	        if ("p" in d) d.H = d.H % 12 + d.p * 12;
	
	        
	        if ("W" in d || "U" in d) {
	          if (!("w" in d)) d.w = "W" in d ? 1 : 0;
	          var day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
	          d.m = 0;
	          d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
	        }
	
	        
	        
	        if ("Z" in d) {
	          d.H += d.Z / 100 | 0;
	          d.M += d.Z % 100;
	          return utcDate(d);
	        }
	
	        
	        return newDate(d);
	      };
	    }
	
	    function parseSpecifier(d, specifier, string, j) {
	      var i = 0,
	          n = specifier.length,
	          m = string.length,
	          c,
	          parse;
	
	      while (i < n) {
	        if (j >= m) return -1;
	        c = specifier.charCodeAt(i++);
	        if (c === 37) {
	          c = specifier.charAt(i++);
	          parse = parses[c in pads ? specifier.charAt(i++) : c];
	          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
	        } else if (c != string.charCodeAt(j++)) {
	          return -1;
	        }
	      }
	
	      return j;
	    }
	
	    function parsePeriod(d, string, i) {
	      var n = periodRe.exec(string.slice(i));
	      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseShortWeekday(d, string, i) {
	      var n = shortWeekdayRe.exec(string.slice(i));
	      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseWeekday(d, string, i) {
	      var n = weekdayRe.exec(string.slice(i));
	      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseShortMonth(d, string, i) {
	      var n = shortMonthRe.exec(string.slice(i));
	      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseMonth(d, string, i) {
	      var n = monthRe.exec(string.slice(i));
	      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseLocaleDateTime(d, string, i) {
	      return parseSpecifier(d, locale_dateTime, string, i);
	    }
	
	    function parseLocaleDate(d, string, i) {
	      return parseSpecifier(d, locale_date, string, i);
	    }
	
	    function parseLocaleTime(d, string, i) {
	      return parseSpecifier(d, locale_time, string, i);
	    }
	
	    function formatShortWeekday(d) {
	      return locale_shortWeekdays[d.getDay()];
	    }
	
	    function formatWeekday(d) {
	      return locale_weekdays[d.getDay()];
	    }
	
	    function formatShortMonth(d) {
	      return locale_shortMonths[d.getMonth()];
	    }
	
	    function formatMonth(d) {
	      return locale_months[d.getMonth()];
	    }
	
	    function formatPeriod(d) {
	      return locale_periods[+(d.getHours() >= 12)];
	    }
	
	    function formatUTCShortWeekday(d) {
	      return locale_shortWeekdays[d.getUTCDay()];
	    }
	
	    function formatUTCWeekday(d) {
	      return locale_weekdays[d.getUTCDay()];
	    }
	
	    function formatUTCShortMonth(d) {
	      return locale_shortMonths[d.getUTCMonth()];
	    }
	
	    function formatUTCMonth(d) {
	      return locale_months[d.getUTCMonth()];
	    }
	
	    function formatUTCPeriod(d) {
	      return locale_periods[+(d.getUTCHours() >= 12)];
	    }
	
	    return {
	      format: function(specifier) {
	        var f = newFormat(specifier += "", formats);
	        f.toString = function() { return specifier; };
	        return f;
	      },
	      parse: function(specifier) {
	        var p = newParse(specifier += "", localDate);
	        p.toString = function() { return specifier; };
	        return p;
	      },
	      utcFormat: function(specifier) {
	        var f = newFormat(specifier += "", utcFormats);
	        f.toString = function() { return specifier; };
	        return f;
	      },
	      utcParse: function(specifier) {
	        var p = newParse(specifier, utcDate);
	        p.toString = function() { return specifier; };
	        return p;
	      }
	    };
	  }
	
	  var pads = {"-": "", "_": " ", "0": "0"};
	  var numberRe = /^\s*\d+/;
	  var percentRe = /^%/;
	  var requoteRe = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	  function pad(value, fill, width) {
	    var sign = value < 0 ? "-" : "",
	        string = (sign ? -value : value) + "",
	        length = string.length;
	    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	  }
	
	  function requote(s) {
	    return s.replace(requoteRe, "\\$&");
	  }
	
	  function formatRe(names) {
	    return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
	  }
	
	  function formatLookup(names) {
	    var map = {}, i = -1, n = names.length;
	    while (++i < n) map[names[i].toLowerCase()] = i;
	    return map;
	  }
	
	  function parseWeekdayNumber(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 1));
	    return n ? (d.w = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseWeekNumberSunday(d, string, i) {
	    var n = numberRe.exec(string.slice(i));
	    return n ? (d.U = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseWeekNumberMonday(d, string, i) {
	    var n = numberRe.exec(string.slice(i));
	    return n ? (d.W = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseFullYear(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 4));
	    return n ? (d.y = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseYear(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
	  }
	
	  function parseZone(d, string, i) {
	    var n = /^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(string.slice(i, i + 6));
	    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
	  }
	
	  function parseMonthNumber(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
	  }
	
	  function parseDayOfMonth(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.d = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseDayOfYear(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 3));
	    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseHour24(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.H = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseMinutes(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.M = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseSeconds(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.S = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseMilliseconds(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 3));
	    return n ? (d.L = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseLiteralPercent(d, string, i) {
	    var n = percentRe.exec(string.slice(i, i + 1));
	    return n ? i + n[0].length : -1;
	  }
	
	  function formatDayOfMonth(d, p) {
	    return pad(d.getDate(), p, 2);
	  }
	
	  function formatHour24(d, p) {
	    return pad(d.getHours(), p, 2);
	  }
	
	  function formatHour12(d, p) {
	    return pad(d.getHours() % 12 || 12, p, 2);
	  }
	
	  function formatDayOfYear(d, p) {
	    return pad(1 + day.count(year(d), d), p, 3);
	  }
	
	  function formatMilliseconds(d, p) {
	    return pad(d.getMilliseconds(), p, 3);
	  }
	
	  function formatMonthNumber(d, p) {
	    return pad(d.getMonth() + 1, p, 2);
	  }
	
	  function formatMinutes(d, p) {
	    return pad(d.getMinutes(), p, 2);
	  }
	
	  function formatSeconds(d, p) {
	    return pad(d.getSeconds(), p, 2);
	  }
	
	  function formatWeekNumberSunday(d, p) {
	    return pad(timeWeek.count(year(d), d), p, 2);
	  }
	
	  function formatWeekdayNumber(d) {
	    return d.getDay();
	  }
	
	  function formatWeekNumberMonday(d, p) {
	    return pad(timeMonday.count(year(d), d), p, 2);
	  }
	
	  function formatYear(d, p) {
	    return pad(d.getFullYear() % 100, p, 2);
	  }
	
	  function formatFullYear(d, p) {
	    return pad(d.getFullYear() % 10000, p, 4);
	  }
	
	  function formatZone(d) {
	    var z = d.getTimezoneOffset();
	    return (z > 0 ? "-" : (z *= -1, "+"))
	        + pad(z / 60 | 0, "0", 2)
	        + pad(z % 60, "0", 2);
	  }
	
	  function formatUTCDayOfMonth(d, p) {
	    return pad(d.getUTCDate(), p, 2);
	  }
	
	  function formatUTCHour24(d, p) {
	    return pad(d.getUTCHours(), p, 2);
	  }
	
	  function formatUTCHour12(d, p) {
	    return pad(d.getUTCHours() % 12 || 12, p, 2);
	  }
	
	  function formatUTCDayOfYear(d, p) {
	    return pad(1 + utcDay.count(utcYear(d), d), p, 3);
	  }
	
	  function formatUTCMilliseconds(d, p) {
	    return pad(d.getUTCMilliseconds(), p, 3);
	  }
	
	  function formatUTCMonthNumber(d, p) {
	    return pad(d.getUTCMonth() + 1, p, 2);
	  }
	
	  function formatUTCMinutes(d, p) {
	    return pad(d.getUTCMinutes(), p, 2);
	  }
	
	  function formatUTCSeconds(d, p) {
	    return pad(d.getUTCSeconds(), p, 2);
	  }
	
	  function formatUTCWeekNumberSunday(d, p) {
	    return pad(utcWeek.count(utcYear(d), d), p, 2);
	  }
	
	  function formatUTCWeekdayNumber(d) {
	    return d.getUTCDay();
	  }
	
	  function formatUTCWeekNumberMonday(d, p) {
	    return pad(utcMonday.count(utcYear(d), d), p, 2);
	  }
	
	  function formatUTCYear(d, p) {
	    return pad(d.getUTCFullYear() % 100, p, 2);
	  }
	
	  function formatUTCFullYear(d, p) {
	    return pad(d.getUTCFullYear() % 10000, p, 4);
	  }
	
	  function formatUTCZone() {
	    return "+0000";
	  }
	
	  function formatLiteralPercent() {
	    return "%";
	  }
	
	  var locale$1;
	  exports.timeFormat;
	  exports.timeParse;
	  exports.utcFormat;
	  exports.utcParse;
	
	  defaultLocale$1({
	    dateTime: "%x, %X",
	    date: "%-m/%-d/%Y",
	    time: "%-I:%M:%S %p",
	    periods: ["AM", "PM"],
	    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
	    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
	    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
	  });
	
	  function defaultLocale$1(definition) {
	    locale$1 = formatLocale$1(definition);
	    exports.timeFormat = locale$1.format;
	    exports.timeParse = locale$1.parse;
	    exports.utcFormat = locale$1.utcFormat;
	    exports.utcParse = locale$1.utcParse;
	    return locale$1;
	  }
	
	  var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
	
	  function formatIsoNative(date) {
	    return date.toISOString();
	  }
	
	  var formatIso = Date.prototype.toISOString
	      ? formatIsoNative
	      : exports.utcFormat(isoSpecifier);
	
	  function parseIsoNative(string) {
	    var date = new Date(string);
	    return isNaN(date) ? null : date;
	  }
	
	  var parseIso = +new Date("2000-01-01T00:00:00.000Z")
	      ? parseIsoNative
	      : exports.utcParse(isoSpecifier);
	
	  var array$2 = Array.prototype;
	
	  var map$2 = array$2.map;
	  var slice$3 = array$2.slice;
	
	  var implicit = {name: "implicit"};
	
	  function ordinal(range) {
	    var index = map$1(),
	        domain = [],
	        unknown = implicit;
	
	    range = range == null ? [] : slice$3.call(range);
	
	    function scale(d) {
	      var key = d + "", i = index.get(key);
	      if (!i) {
	        if (unknown !== implicit) return unknown;
	        index.set(key, i = domain.push(d));
	      }
	      return range[(i - 1) % range.length];
	    }
	
	    scale.domain = function(_) {
	      if (!arguments.length) return domain.slice();
	      domain = [], index = map$1();
	      var i = -1, n = _.length, d, key;
	      while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
	      return scale;
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range = slice$3.call(_), scale) : range.slice();
	    };
	
	    scale.unknown = function(_) {
	      return arguments.length ? (unknown = _, scale) : unknown;
	    };
	
	    scale.copy = function() {
	      return ordinal()
	          .domain(domain)
	          .range(range)
	          .unknown(unknown);
	    };
	
	    return scale;
	  }
	
	  function band() {
	    var scale = ordinal().unknown(undefined),
	        domain = scale.domain,
	        ordinalRange = scale.range,
	        range$$ = [0, 1],
	        step,
	        bandwidth,
	        round = false,
	        paddingInner = 0,
	        paddingOuter = 0,
	        align = 0.5;
	
	    delete scale.unknown;
	
	    function rescale() {
	      var n = domain().length,
	          reverse = range$$[1] < range$$[0],
	          start = range$$[reverse - 0],
	          stop = range$$[1 - reverse];
	      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
	      if (round) step = Math.floor(step);
	      start += (stop - start - step * (n - paddingInner)) * align;
	      bandwidth = step * (1 - paddingInner);
	      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
	      var values = range(n).map(function(i) { return start + step * i; });
	      return ordinalRange(reverse ? values.reverse() : values);
	    }
	
	    scale.domain = function(_) {
	      return arguments.length ? (domain(_), rescale()) : domain();
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range$$ = [+_[0], +_[1]], rescale()) : range$$.slice();
	    };
	
	    scale.rangeRound = function(_) {
	      return range$$ = [+_[0], +_[1]], round = true, rescale();
	    };
	
	    scale.bandwidth = function() {
	      return bandwidth;
	    };
	
	    scale.step = function() {
	      return step;
	    };
	
	    scale.round = function(_) {
	      return arguments.length ? (round = !!_, rescale()) : round;
	    };
	
	    scale.padding = function(_) {
	      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
	    };
	
	    scale.paddingInner = function(_) {
	      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
	    };
	
	    scale.paddingOuter = function(_) {
	      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;
	    };
	
	    scale.align = function(_) {
	      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
	    };
	
	    scale.copy = function() {
	      return band()
	          .domain(domain())
	          .range(range$$)
	          .round(round)
	          .paddingInner(paddingInner)
	          .paddingOuter(paddingOuter)
	          .align(align);
	    };
	
	    return rescale();
	  }
	
	  function pointish(scale) {
	    var copy = scale.copy;
	
	    scale.padding = scale.paddingOuter;
	    delete scale.paddingInner;
	    delete scale.paddingOuter;
	
	    scale.copy = function() {
	      return pointish(copy());
	    };
	
	    return scale;
	  }
	
	  function point$4() {
	    return pointish(band().paddingInner(1));
	  }
	
	  function constant$3(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function number$1(x) {
	    return +x;
	  }
	
	  var unit = [0, 1];
	
	  function deinterpolate(a, b) {
	    return (b -= (a = +a))
	        ? function(x) { return (x - a) / b; }
	        : constant$3(b);
	  }
	
	  function deinterpolateClamp(deinterpolate) {
	    return function(a, b) {
	      var d = deinterpolate(a = +a, b = +b);
	      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };
	    };
	  }
	
	  function reinterpolateClamp(reinterpolate) {
	    return function(a, b) {
	      var r = reinterpolate(a = +a, b = +b);
	      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };
	    };
	  }
	
	  function bimap(domain, range, deinterpolate, reinterpolate) {
	    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
	    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);
	    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);
	    return function(x) { return r0(d0(x)); };
	  }
	
	  function polymap(domain, range, deinterpolate, reinterpolate) {
	    var j = Math.min(domain.length, range.length) - 1,
	        d = new Array(j),
	        r = new Array(j),
	        i = -1;
	
	    
	    if (domain[j] < domain[0]) {
	      domain = domain.slice().reverse();
	      range = range.slice().reverse();
	    }
	
	    while (++i < j) {
	      d[i] = deinterpolate(domain[i], domain[i + 1]);
	      r[i] = reinterpolate(range[i], range[i + 1]);
	    }
	
	    return function(x) {
	      var i = bisectRight(domain, x, 1, j) - 1;
	      return r[i](d[i](x));
	    };
	  }
	
	  function copy(source, target) {
	    return target
	        .domain(source.domain())
	        .range(source.range())
	        .interpolate(source.interpolate())
	        .clamp(source.clamp());
	  }
	
	  
	  
	  function continuous(deinterpolate$$, reinterpolate) {
	    var domain = unit,
	        range = unit,
	        interpolate$$ = interpolate,
	        clamp = false,
	        piecewise,
	        output,
	        input;
	
	    function rescale() {
	      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
	      output = input = null;
	      return scale;
	    }
	
	    function scale(x) {
	      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate$$)))(+x);
	    }
	
	    scale.invert = function(y) {
	      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);
	    };
	
	    scale.domain = function(_) {
	      return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();
	    };
	
	    scale.rangeRound = function(_) {
	      return range = slice$3.call(_), interpolate$$ = interpolateRound, rescale();
	    };
	
	    scale.clamp = function(_) {
	      return arguments.length ? (clamp = !!_, rescale()) : clamp;
	    };
	
	    scale.interpolate = function(_) {
	      return arguments.length ? (interpolate$$ = _, rescale()) : interpolate$$;
	    };
	
	    return rescale();
	  }
	
	  function tickFormat(domain, count, specifier) {
	    var start = domain[0],
	        stop = domain[domain.length - 1],
	        step = tickStep(start, stop, count == null ? 10 : count),
	        precision;
	    specifier = formatSpecifier(specifier == null ? ",f" : specifier);
	    switch (specifier.type) {
	      case "s": {
	        var value = Math.max(Math.abs(start), Math.abs(stop));
	        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;
	        return exports.formatPrefix(specifier, value);
	      }
	      case "":
	      case "e":
	      case "g":
	      case "p":
	      case "r": {
	        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
	        break;
	      }
	      case "f":
	      case "%": {
	        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
	        break;
	      }
	    }
	    return exports.format(specifier);
	  }
	
	  function linearish(scale) {
	    var domain = scale.domain;
	
	    scale.ticks = function(count) {
	      var d = domain();
	      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
	    };
	
	    scale.tickFormat = function(count, specifier) {
	      return tickFormat(domain(), count, specifier);
	    };
	
	    scale.nice = function(count) {
	      var d = domain(),
	          i = d.length - 1,
	          n = count == null ? 10 : count,
	          start = d[0],
	          stop = d[i],
	          step = tickStep(start, stop, n);
	
	      if (step) {
	        step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);
	        d[0] = Math.floor(start / step) * step;
	        d[i] = Math.ceil(stop / step) * step;
	        domain(d);
	      }
	
	      return scale;
	    };
	
	    return scale;
	  }
	
	  function linear$2() {
	    var scale = continuous(deinterpolate, interpolateNumber);
	
	    scale.copy = function() {
	      return copy(scale, linear$2());
	    };
	
	    return linearish(scale);
	  }
	
	  function identity$4() {
	    var domain = [0, 1];
	
	    function scale(x) {
	      return +x;
	    }
	
	    scale.invert = scale;
	
	    scale.domain = scale.range = function(_) {
	      return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();
	    };
	
	    scale.copy = function() {
	      return identity$4().domain(domain);
	    };
	
	    return linearish(scale);
	  }
	
	  function nice(domain, interval) {
	    domain = domain.slice();
	
	    var i0 = 0,
	        i1 = domain.length - 1,
	        x0 = domain[i0],
	        x1 = domain[i1],
	        t;
	
	    if (x1 < x0) {
	      t = i0, i0 = i1, i1 = t;
	      t = x0, x0 = x1, x1 = t;
	    }
	
	    domain[i0] = interval.floor(x0);
	    domain[i1] = interval.ceil(x1);
	    return domain;
	  }
	
	  function deinterpolate$1(a, b) {
	    return (b = Math.log(b / a))
	        ? function(x) { return Math.log(x / a) / b; }
	        : constant$3(b);
	  }
	
	  function reinterpolate(a, b) {
	    return a < 0
	        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }
	        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };
	  }
	
	  function pow10(x) {
	    return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
	  }
	
	  function powp(base) {
	    return base === 10 ? pow10
	        : base === Math.E ? Math.exp
	        : function(x) { return Math.pow(base, x); };
	  }
	
	  function logp(base) {
	    return base === Math.E ? Math.log
	        : base === 10 && Math.log10
	        || base === 2 && Math.log2
	        || (base = Math.log(base), function(x) { return Math.log(x) / base; });
	  }
	
	  function reflect(f) {
	    return function(x) {
	      return -f(-x);
	    };
	  }
	
	  function log() {
	    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),
	        domain = scale.domain,
	        base = 10,
	        logs = logp(10),
	        pows = powp(10);
	
	    function rescale() {
	      logs = logp(base), pows = powp(base);
	      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);
	      return scale;
	    }
	
	    scale.base = function(_) {
	      return arguments.length ? (base = +_, rescale()) : base;
	    };
	
	    scale.domain = function(_) {
	      return arguments.length ? (domain(_), rescale()) : domain();
	    };
	
	    scale.ticks = function(count) {
	      var d = domain(),
	          u = d[0],
	          v = d[d.length - 1],
	          r;
	
	      if (r = v < u) i = u, u = v, v = i;
	
	      var i = logs(u),
	          j = logs(v),
	          p,
	          k,
	          t,
	          n = count == null ? 10 : +count,
	          z = [];
	
	      if (!(base % 1) && j - i < n) {
	        i = Math.round(i) - 1, j = Math.round(j) + 1;
	        if (u > 0) for (; i < j; ++i) {
	          for (k = 1, p = pows(i); k < base; ++k) {
	            t = p * k;
	            if (t < u) continue;
	            if (t > v) break;
	            z.push(t);
	          }
	        } else for (; i < j; ++i) {
	          for (k = base - 1, p = pows(i); k >= 1; --k) {
	            t = p * k;
	            if (t < u) continue;
	            if (t > v) break;
	            z.push(t);
	          }
	        }
	      } else {
	        z = ticks(i, j, Math.min(j - i, n)).map(pows);
	      }
	
	      return r ? z.reverse() : z;
	    };
	
	    scale.tickFormat = function(count, specifier) {
	      if (specifier == null) specifier = base === 10 ? ".0e" : ",";
	      if (typeof specifier !== "function") specifier = exports.format(specifier);
	      if (count === Infinity) return specifier;
	      if (count == null) count = 10;
	      var k = Math.max(1, base * count / scale.ticks().length); 
	      return function(d) {
	        var i = d / pows(Math.round(logs(d)));
	        if (i * base < base - 0.5) i *= base;
	        return i <= k ? specifier(d) : "";
	      };
	    };
	
	    scale.nice = function() {
	      return domain(nice(domain(), {
	        floor: function(x) { return pows(Math.floor(logs(x))); },
	        ceil: function(x) { return pows(Math.ceil(logs(x))); }
	      }));
	    };
	
	    scale.copy = function() {
	      return copy(scale, log().base(base));
	    };
	
	    return scale;
	  }
	
	  function raise(x, exponent) {
	    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
	  }
	
	  function pow() {
	    var exponent = 1,
	        scale = continuous(deinterpolate, reinterpolate),
	        domain = scale.domain;
	
	    function deinterpolate(a, b) {
	      return (b = raise(b, exponent) - (a = raise(a, exponent)))
	          ? function(x) { return (raise(x, exponent) - a) / b; }
	          : constant$3(b);
	    }
	
	    function reinterpolate(a, b) {
	      b = raise(b, exponent) - (a = raise(a, exponent));
	      return function(t) { return raise(a + b * t, 1 / exponent); };
	    }
	
	    scale.exponent = function(_) {
	      return arguments.length ? (exponent = +_, domain(domain())) : exponent;
	    };
	
	    scale.copy = function() {
	      return copy(scale, pow().exponent(exponent));
	    };
	
	    return linearish(scale);
	  }
	
	  function sqrt() {
	    return pow().exponent(0.5);
	  }
	
	  function quantile() {
	    var domain = [],
	        range = [],
	        thresholds = [];
	
	    function rescale() {
	      var i = 0, n = Math.max(1, range.length);
	      thresholds = new Array(n - 1);
	      while (++i < n) thresholds[i - 1] = threshold(domain, i / n);
	      return scale;
	    }
	
	    function scale(x) {
	      if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];
	    }
	
	    scale.invertExtent = function(y) {
	      var i = range.indexOf(y);
	      return i < 0 ? [NaN, NaN] : [
	        i > 0 ? thresholds[i - 1] : domain[0],
	        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
	      ];
	    };
	
	    scale.domain = function(_) {
	      if (!arguments.length) return domain.slice();
	      domain = [];
	      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
	      domain.sort(ascending);
	      return rescale();
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();
	    };
	
	    scale.quantiles = function() {
	      return thresholds.slice();
	    };
	
	    scale.copy = function() {
	      return quantile()
	          .domain(domain)
	          .range(range);
	    };
	
	    return scale;
	  }
	
	  function quantize$1() {
	    var x0 = 0,
	        x1 = 1,
	        n = 1,
	        domain = [0.5],
	        range = [0, 1];
	
	    function scale(x) {
	      if (x <= x) return range[bisectRight(domain, x, 0, n)];
	    }
	
	    function rescale() {
	      var i = -1;
	      domain = new Array(n);
	      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
	      return scale;
	    }
	
	    scale.domain = function(_) {
	      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (n = (range = slice$3.call(_)).length - 1, rescale()) : range.slice();
	    };
	
	    scale.invertExtent = function(y) {
	      var i = range.indexOf(y);
	      return i < 0 ? [NaN, NaN]
	          : i < 1 ? [x0, domain[0]]
	          : i >= n ? [domain[n - 1], x1]
	          : [domain[i - 1], domain[i]];
	    };
	
	    scale.copy = function() {
	      return quantize$1()
	          .domain([x0, x1])
	          .range(range);
	    };
	
	    return linearish(scale);
	  }
	
	  function threshold$1() {
	    var domain = [0.5],
	        range = [0, 1],
	        n = 1;
	
	    function scale(x) {
	      if (x <= x) return range[bisectRight(domain, x, 0, n)];
	    }
	
	    scale.domain = function(_) {
	      return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
	    };
	
	    scale.invertExtent = function(y) {
	      var i = range.indexOf(y);
	      return [domain[i - 1], domain[i]];
	    };
	
	    scale.copy = function() {
	      return threshold$1()
	          .domain(domain)
	          .range(range);
	    };
	
	    return scale;
	  }
	
	var   durationSecond$1 = 1000;
	var   durationMinute$1 = durationSecond$1 * 60;
	var   durationHour$1 = durationMinute$1 * 60;
	var   durationDay$1 = durationHour$1 * 24;
	var   durationWeek$1 = durationDay$1 * 7;
	  var durationMonth = durationDay$1 * 30;
	  var durationYear = durationDay$1 * 365;
	  function date$1(t) {
	    return new Date(t);
	  }
	
	  function number$2(t) {
	    return t instanceof Date ? +t : +new Date(+t);
	  }
	
	  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
	    var scale = continuous(deinterpolate, interpolateNumber),
	        invert = scale.invert,
	        domain = scale.domain;
	
	    var formatMillisecond = format(".%L"),
	        formatSecond = format(":%S"),
	        formatMinute = format("%I:%M"),
	        formatHour = format("%I %p"),
	        formatDay = format("%a %d"),
	        formatWeek = format("%b %d"),
	        formatMonth = format("%B"),
	        formatYear = format("%Y");
	
	    var tickIntervals = [
	      [second,  1,      durationSecond$1],
	      [second,  5,  5 * durationSecond$1],
	      [second, 15, 15 * durationSecond$1],
	      [second, 30, 30 * durationSecond$1],
	      [minute,  1,      durationMinute$1],
	      [minute,  5,  5 * durationMinute$1],
	      [minute, 15, 15 * durationMinute$1],
	      [minute, 30, 30 * durationMinute$1],
	      [  hour,  1,      durationHour$1  ],
	      [  hour,  3,  3 * durationHour$1  ],
	      [  hour,  6,  6 * durationHour$1  ],
	      [  hour, 12, 12 * durationHour$1  ],
	      [   day,  1,      durationDay$1   ],
	      [   day,  2,  2 * durationDay$1   ],
	      [  week,  1,      durationWeek$1  ],
	      [ month,  1,      durationMonth ],
	      [ month,  3,  3 * durationMonth ],
	      [  year,  1,      durationYear  ]
	    ];
	
	    function tickFormat(date) {
	      return (second(date) < date ? formatMillisecond
	          : minute(date) < date ? formatSecond
	          : hour(date) < date ? formatMinute
	          : day(date) < date ? formatHour
	          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
	          : year(date) < date ? formatMonth
	          : formatYear)(date);
	    }
	
	    function tickInterval(interval, start, stop, step) {
	      if (interval == null) interval = 10;
	
	      
	      
	      
	      if (typeof interval === "number") {
	        var target = Math.abs(stop - start) / interval,
	            i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);
	        if (i === tickIntervals.length) {
	          step = tickStep(start / durationYear, stop / durationYear, interval);
	          interval = year;
	        } else if (i) {
	          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
	          step = i[1];
	          interval = i[0];
	        } else {
	          step = tickStep(start, stop, interval);
	          interval = millisecond;
	        }
	      }
	
	      return step == null ? interval : interval.every(step);
	    }
	
	    scale.invert = function(y) {
	      return new Date(invert(y));
	    };
	
	    scale.domain = function(_) {
	      return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);
	    };
	
	    scale.ticks = function(interval, step) {
	      var d = domain(),
	          t0 = d[0],
	          t1 = d[d.length - 1],
	          r = t1 < t0,
	          t;
	      if (r) t = t0, t0 = t1, t1 = t;
	      t = tickInterval(interval, t0, t1, step);
	      t = t ? t.range(t0, t1 + 1) : []; 
	      return r ? t.reverse() : t;
	    };
	
	    scale.tickFormat = function(count, specifier) {
	      return specifier == null ? tickFormat : format(specifier);
	    };
	
	    scale.nice = function(interval, step) {
	      var d = domain();
	      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))
	          ? domain(nice(d, interval))
	          : scale;
	    };
	
	    scale.copy = function() {
	      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
	    };
	
	    return scale;
	  }
	
	  function time() {
	    return calendar(year, month, timeWeek, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);
	  }
	
	  function utcTime() {
	    return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);
	  }
	
	  function colors(s) {
	    return s.match(/.{6}/g).map(function(x) {
	      return "#" + x;
	    });
	  }
	
	  var category10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
	
	  var category20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");
	
	  var category20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");
	
	  var category20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");
	
	  var cubehelix$3 = interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));
	
	  var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));
	
	  var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));
	
	  var rainbow = cubehelix();
	
	  function rainbow$1(t) {
	    if (t < 0 || t > 1) t -= Math.floor(t);
	    var ts = Math.abs(t - 0.5);
	    rainbow.h = 360 * t - 100;
	    rainbow.s = 1.5 - 1.5 * ts;
	    rainbow.l = 0.8 - 0.9 * ts;
	    return rainbow + "";
	  }
	
	  function ramp(range) {
	    var n = range.length;
	    return function(t) {
	      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
	    };
	  }
	
	  var viridis = ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
	
	  var magma = ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
	
	  var inferno = ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
	
	  var plasma = ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
	
	  function sequential(interpolator) {
	    var x0 = 0,
	        x1 = 1,
	        clamp = false;
	
	    function scale(x) {
	      var t = (x - x0) / (x1 - x0);
	      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);
	    }
	
	    scale.domain = function(_) {
	      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];
	    };
	
	    scale.clamp = function(_) {
	      return arguments.length ? (clamp = !!_, scale) : clamp;
	    };
	
	    scale.interpolator = function(_) {
	      return arguments.length ? (interpolator = _, scale) : interpolator;
	    };
	
	    scale.copy = function() {
	      return sequential(interpolator).domain([x0, x1]).clamp(clamp);
	    };
	
	    return linearish(scale);
	  }
	
	  var xhtml = "http://www.w3.org/1999/xhtml";
	
	  var namespaces = {
	    svg: "http://www.w3.org/2000/svg",
	    xhtml: xhtml,
	    xlink: "http://www.w3.org/1999/xlink",
	    xml: "http://www.w3.org/XML/1998/namespace",
	    xmlns: "http://www.w3.org/2000/xmlns/"
	  };
	
	  function namespace(name) {
	    var prefix = name += "", i = prefix.indexOf(":");
	    if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
	    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;
	  }
	
	  function creatorInherit(name) {
	    return function() {
	      var document = this.ownerDocument,
	          uri = this.namespaceURI;
	      return uri === xhtml && document.documentElement.namespaceURI === xhtml
	          ? document.createElement(name)
	          : document.createElementNS(uri, name);
	    };
	  }
	
	  function creatorFixed(fullname) {
	    return function() {
	      return this.ownerDocument.createElementNS(fullname.space, fullname.local);
	    };
	  }
	
	  function creator(name) {
	    var fullname = namespace(name);
	    return (fullname.local
	        ? creatorFixed
	        : creatorInherit)(fullname);
	  }
	
	  var nextId = 0;
	
	  function local() {
	    return new Local;
	  }
	
	  function Local() {
	    this._ = "@" + (++nextId).toString(36);
	  }
	
	  Local.prototype = local.prototype = {
	    constructor: Local,
	    get: function(node) {
	      var id = this._;
	      while (!(id in node)) if (!(node = node.parentNode)) return;
	      return node[id];
	    },
	    set: function(node, value) {
	      return node[this._] = value;
	    },
	    remove: function(node) {
	      return this._ in node && delete node[this._];
	    },
	    toString: function() {
	      return this._;
	    }
	  };
	
	  var matcher = function(selector) {
	    return function() {
	      return this.matches(selector);
	    };
	  };
	
	  if (typeof document !== "undefined") {
	    var element = document.documentElement;
	    if (!element.matches) {
	      var vendorMatches = element.webkitMatchesSelector
	          || element.msMatchesSelector
	          || element.mozMatchesSelector
	          || element.oMatchesSelector;
	      matcher = function(selector) {
	        return function() {
	          return vendorMatches.call(this, selector);
	        };
	      };
	    }
	  }
	
	  var matcher$1 = matcher;
	
	  var filterEvents = {};
	
	  exports.event = null;
	
	  if (typeof document !== "undefined") {
	    var element$1 = document.documentElement;
	    if (!("onmouseenter" in element$1)) {
	      filterEvents = {mouseenter: "mouseover", mouseleave: "mouseout"};
	    }
	  }
	
	  function filterContextListener(listener, index, group) {
	    listener = contextListener(listener, index, group);
	    return function(event) {
	      var related = event.relatedTarget;
	      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {
	        listener.call(this, event);
	      }
	    };
	  }
	
	  function contextListener(listener, index, group) {
	    return function(event1) {
	      var event0 = exports.event; 
	      exports.event = event1;
	      try {
	        listener.call(this, this.__data__, index, group);
	      } finally {
	        exports.event = event0;
	      }
	    };
	  }
	
	  function parseTypenames$1(typenames) {
	    return typenames.trim().split(/^|\s+/).map(function(t) {
	      var name = "", i = t.indexOf(".");
	      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
	      return {type: t, name: name};
	    });
	  }
	
	  function onRemove(typename) {
	    return function() {
	      var on = this.__on;
	      if (!on) return;
	      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
	        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
	          this.removeEventListener(o.type, o.listener, o.capture);
	        } else {
	          on[++i] = o;
	        }
	      }
	      if (++i) on.length = i;
	      else delete this.__on;
	    };
	  }
	
	  function onAdd(typename, value, capture) {
	    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
	    return function(d, i, group) {
	      var on = this.__on, o, listener = wrap(value, i, group);
	      if (on) for (var j = 0, m = on.length; j < m; ++j) {
	        if ((o = on[j]).type === typename.type && o.name === typename.name) {
	          this.removeEventListener(o.type, o.listener, o.capture);
	          this.addEventListener(o.type, o.listener = listener, o.capture = capture);
	          o.value = value;
	          return;
	        }
	      }
	      this.addEventListener(typename.type, listener, capture);
	      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};
	      if (!on) this.__on = [o];
	      else on.push(o);
	    };
	  }
	
	  function selection_on(typename, value, capture) {
	    var typenames = parseTypenames$1(typename + ""), i, n = typenames.length, t;
	
	    if (arguments.length < 2) {
	      var on = this.node().__on;
	      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
	        for (i = 0, o = on[j]; i < n; ++i) {
	          if ((t = typenames[i]).type === o.type && t.name === o.name) {
	            return o.value;
	          }
	        }
	      }
	      return;
	    }
	
	    on = value ? onAdd : onRemove;
	    if (capture == null) capture = false;
	    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));
	    return this;
	  }
	
	  function customEvent(event1, listener, that, args) {
	    var event0 = exports.event;
	    event1.sourceEvent = exports.event;
	    exports.event = event1;
	    try {
	      return listener.apply(that, args);
	    } finally {
	      exports.event = event0;
	    }
	  }
	
	  function sourceEvent() {
	    var current = exports.event, source;
	    while (source = current.sourceEvent) current = source;
	    return current;
	  }
	
	  function point$5(node, event) {
	    var svg = node.ownerSVGElement || node;
	
	    if (svg.createSVGPoint) {
	      var point = svg.createSVGPoint();
	      point.x = event.clientX, point.y = event.clientY;
	      point = point.matrixTransform(node.getScreenCTM().inverse());
	      return [point.x, point.y];
	    }
	
	    var rect = node.getBoundingClientRect();
	    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
	  }
	
	  function mouse(node) {
	    var event = sourceEvent();
	    if (event.changedTouches) event = event.changedTouches[0];
	    return point$5(node, event);
	  }
	
	  function none$2() {}
	
	  function selector(selector) {
	    return selector == null ? none$2 : function() {
	      return this.querySelector(selector);
	    };
	  }
	
	  function selection_select(select) {
	    if (typeof select !== "function") select = selector(select);
	
	    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
	        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          subgroup[i] = subnode;
	        }
	      }
	    }
	
	    return new Selection(subgroups, this._parents);
	  }
	
	  function empty() {
	    return [];
	  }
	
	  function selectorAll(selector) {
	    return selector == null ? empty : function() {
	      return this.querySelectorAll(selector);
	    };
	  }
	
	  function selection_selectAll(select) {
	    if (typeof select !== "function") select = selectorAll(select);
	
	    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          subgroups.push(select.call(node, node.__data__, i, group));
	          parents.push(node);
	        }
	      }
	    }
	
	    return new Selection(subgroups, parents);
	  }
	
	  function selection_filter(match) {
	    if (typeof match !== "function") match = matcher$1(match);
	
	    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
	        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
	          subgroup.push(node);
	        }
	      }
	    }
	
	    return new Selection(subgroups, this._parents);
	  }
	
	  function sparse(update) {
	    return new Array(update.length);
	  }
	
	  function selection_enter() {
	    return new Selection(this._enter || this._groups.map(sparse), this._parents);
	  }
	
	  function EnterNode(parent, datum) {
	    this.ownerDocument = parent.ownerDocument;
	    this.namespaceURI = parent.namespaceURI;
	    this._next = null;
	    this._parent = parent;
	    this.__data__ = datum;
	  }
	
	  EnterNode.prototype = {
	    constructor: EnterNode,
	    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
	    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
	    querySelector: function(selector) { return this._parent.querySelector(selector); },
	    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
	  };
	
	  function constant$4(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  var keyPrefix = "$"; 
	
	  function bindIndex(parent, group, enter, update, exit, data) {
	    var i = 0,
	        node,
	        groupLength = group.length,
	        dataLength = data.length;
	
	    
	    
	    
	    for (; i < dataLength; ++i) {
	      if (node = group[i]) {
	        node.__data__ = data[i];
	        update[i] = node;
	      } else {
	        enter[i] = new EnterNode(parent, data[i]);
	      }
	    }
	
	    
	    for (; i < groupLength; ++i) {
	      if (node = group[i]) {
	        exit[i] = node;
	      }
	    }
	  }
	
	  function bindKey(parent, group, enter, update, exit, data, key) {
	    var i,
	        node,
	        nodeByKeyValue = {},
	        groupLength = group.length,
	        dataLength = data.length,
	        keyValues = new Array(groupLength),
	        keyValue;
	
	    
	    
	    for (i = 0; i < groupLength; ++i) {
	      if (node = group[i]) {
	        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);
	        if (keyValue in nodeByKeyValue) {
	          exit[i] = node;
	        } else {
	          nodeByKeyValue[keyValue] = node;
	        }
	      }
	    }
	
	    
	    
	    
	    for (i = 0; i < dataLength; ++i) {
	      keyValue = keyPrefix + key.call(parent, data[i], i, data);
	      if (node = nodeByKeyValue[keyValue]) {
	        update[i] = node;
	        node.__data__ = data[i];
	        nodeByKeyValue[keyValue] = null;
	      } else {
	        enter[i] = new EnterNode(parent, data[i]);
	      }
	    }
	
	    
	    for (i = 0; i < groupLength; ++i) {
	      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {
	        exit[i] = node;
	      }
	    }
	  }
	
	  function selection_data(value, key) {
	    if (!value) {
	      data = new Array(this.size()), j = -1;
	      this.each(function(d) { data[++j] = d; });
	      return data;
	    }
	
	    var bind = key ? bindKey : bindIndex,
	        parents = this._parents,
	        groups = this._groups;
	
	    if (typeof value !== "function") value = constant$4(value);
	
	    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
	      var parent = parents[j],
	          group = groups[j],
	          groupLength = group.length,
	          data = value.call(parent, parent && parent.__data__, j, parents),
	          dataLength = data.length,
	          enterGroup = enter[j] = new Array(dataLength),
	          updateGroup = update[j] = new Array(dataLength),
	          exitGroup = exit[j] = new Array(groupLength);
	
	      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);
	
	      
	      
	      
	      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
	        if (previous = enterGroup[i0]) {
	          if (i0 >= i1) i1 = i0 + 1;
	          while (!(next = updateGroup[i1]) && ++i1 < dataLength);
	          previous._next = next || null;
	        }
	      }
	    }
	
	    update = new Selection(update, parents);
	    update._enter = enter;
	    update._exit = exit;
	    return update;
	  }
	
	  function selection_exit() {
	    return new Selection(this._exit || this._groups.map(sparse), this._parents);
	  }
	
	  function selection_merge(selection) {
	
	    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
	      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
	        if (node = group0[i] || group1[i]) {
	          merge[i] = node;
	        }
	      }
	    }
	
	    for (; j < m0; ++j) {
	      merges[j] = groups0[j];
	    }
	
	    return new Selection(merges, this._parents);
	  }
	
	  function selection_order() {
	
	    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
	      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
	        if (node = group[i]) {
	          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
	          next = node;
	        }
	      }
	    }
	
	    return this;
	  }
	
	  function selection_sort(compare) {
	    if (!compare) compare = ascending$2;
	
	    function compareNode(a, b) {
	      return a && b ? compare(a.__data__, b.__data__) : !a - !b;
	    }
	
	    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          sortgroup[i] = node;
	        }
	      }
	      sortgroup.sort(compareNode);
	    }
	
	    return new Selection(sortgroups, this._parents).order();
	  }
	
	  function ascending$2(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	
	  function selection_call() {
	    var callback = arguments[0];
	    arguments[0] = this;
	    callback.apply(null, arguments);
	    return this;
	  }
	
	  function selection_nodes() {
	    var nodes = new Array(this.size()), i = -1;
	    this.each(function() { nodes[++i] = this; });
	    return nodes;
	  }
	
	  function selection_node() {
	
	    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
	      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
	        var node = group[i];
	        if (node) return node;
	      }
	    }
	
	    return null;
	  }
	
	  function selection_size() {
	    var size = 0;
	    this.each(function() { ++size; });
	    return size;
	  }
	
	  function selection_empty() {
	    return !this.node();
	  }
	
	  function selection_each(callback) {
	
	    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
	      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
	        if (node = group[i]) callback.call(node, node.__data__, i, group);
	      }
	    }
	
	    return this;
	  }
	
	  function attrRemove(name) {
	    return function() {
	      this.removeAttribute(name);
	    };
	  }
	
	  function attrRemoveNS(fullname) {
	    return function() {
	      this.removeAttributeNS(fullname.space, fullname.local);
	    };
	  }
	
	  function attrConstant(name, value) {
	    return function() {
	      this.setAttribute(name, value);
	    };
	  }
	
	  function attrConstantNS(fullname, value) {
	    return function() {
	      this.setAttributeNS(fullname.space, fullname.local, value);
	    };
	  }
	
	  function attrFunction(name, value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      if (v == null) this.removeAttribute(name);
	      else this.setAttribute(name, v);
	    };
	  }
	
	  function attrFunctionNS(fullname, value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
	      else this.setAttributeNS(fullname.space, fullname.local, v);
	    };
	  }
	
	  function selection_attr(name, value) {
	    var fullname = namespace(name);
	
	    if (arguments.length < 2) {
	      var node = this.node();
	      return fullname.local
	          ? node.getAttributeNS(fullname.space, fullname.local)
	          : node.getAttribute(fullname);
	    }
	
	    return this.each((value == null
	        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
	        ? (fullname.local ? attrFunctionNS : attrFunction)
	        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
	  }
	
	  function window(node) {
	    return (node.ownerDocument && node.ownerDocument.defaultView) 
	        || (node.document && node) 
	        || node.defaultView; 
	  }
	
	  function styleRemove(name) {
	    return function() {
	      this.style.removeProperty(name);
	    };
	  }
	
	  function styleConstant(name, value, priority) {
	    return function() {
	      this.style.setProperty(name, value, priority);
	    };
	  }
	
	  function styleFunction(name, value, priority) {
	    return function() {
	      var v = value.apply(this, arguments);
	      if (v == null) this.style.removeProperty(name);
	      else this.style.setProperty(name, v, priority);
	    };
	  }
	
	  function selection_style(name, value, priority) {
	    var node;
	    return arguments.length > 1
	        ? this.each((value == null
	              ? styleRemove : typeof value === "function"
	              ? styleFunction
	              : styleConstant)(name, value, priority == null ? "" : priority))
	        : window(node = this.node())
	            .getComputedStyle(node, null)
	            .getPropertyValue(name);
	  }
	
	  function propertyRemove(name) {
	    return function() {
	      delete this[name];
	    };
	  }
	
	  function propertyConstant(name, value) {
	    return function() {
	      this[name] = value;
	    };
	  }
	
	  function propertyFunction(name, value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      if (v == null) delete this[name];
	      else this[name] = v;
	    };
	  }
	
	  function selection_property(name, value) {
	    return arguments.length > 1
	        ? this.each((value == null
	            ? propertyRemove : typeof value === "function"
	            ? propertyFunction
	            : propertyConstant)(name, value))
	        : this.node()[name];
	  }
	
	  function classArray(string) {
	    return string.trim().split(/^|\s+/);
	  }
	
	  function classList(node) {
	    return node.classList || new ClassList(node);
	  }
	
	  function ClassList(node) {
	    this._node = node;
	    this._names = classArray(node.getAttribute("class") || "");
	  }
	
	  ClassList.prototype = {
	    add: function(name) {
	      var i = this._names.indexOf(name);
	      if (i < 0) {
	        this._names.push(name);
	        this._node.setAttribute("class", this._names.join(" "));
	      }
	    },
	    remove: function(name) {
	      var i = this._names.indexOf(name);
	      if (i >= 0) {
	        this._names.splice(i, 1);
	        this._node.setAttribute("class", this._names.join(" "));
	      }
	    },
	    contains: function(name) {
	      return this._names.indexOf(name) >= 0;
	    }
	  };
	
	  function classedAdd(node, names) {
	    var list = classList(node), i = -1, n = names.length;
	    while (++i < n) list.add(names[i]);
	  }
	
	  function classedRemove(node, names) {
	    var list = classList(node), i = -1, n = names.length;
	    while (++i < n) list.remove(names[i]);
	  }
	
	  function classedTrue(names) {
	    return function() {
	      classedAdd(this, names);
	    };
	  }
	
	  function classedFalse(names) {
	    return function() {
	      classedRemove(this, names);
	    };
	  }
	
	  function classedFunction(names, value) {
	    return function() {
	      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
	    };
	  }
	
	  function selection_classed(name, value) {
	    var names = classArray(name + "");
	
	    if (arguments.length < 2) {
	      var list = classList(this.node()), i = -1, n = names.length;
	      while (++i < n) if (!list.contains(names[i])) return false;
	      return true;
	    }
	
	    return this.each((typeof value === "function"
	        ? classedFunction : value
	        ? classedTrue
	        : classedFalse)(names, value));
	  }
	
	  function textRemove() {
	    this.textContent = "";
	  }
	
	  function textConstant(value) {
	    return function() {
	      this.textContent = value;
	    };
	  }
	
	  function textFunction(value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      this.textContent = v == null ? "" : v;
	    };
	  }
	
	  function selection_text(value) {
	    return arguments.length
	        ? this.each(value == null
	            ? textRemove : (typeof value === "function"
	            ? textFunction
	            : textConstant)(value))
	        : this.node().textContent;
	  }
	
	  function htmlRemove() {
	    this.innerHTML = "";
	  }
	
	  function htmlConstant(value) {
	    return function() {
	      this.innerHTML = value;
	    };
	  }
	
	  function htmlFunction(value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      this.innerHTML = v == null ? "" : v;
	    };
	  }
	
	  function selection_html(value) {
	    return arguments.length
	        ? this.each(value == null
	            ? htmlRemove : (typeof value === "function"
	            ? htmlFunction
	            : htmlConstant)(value))
	        : this.node().innerHTML;
	  }
	
	  function raise$1() {
	    if (this.nextSibling) this.parentNode.appendChild(this);
	  }
	
	  function selection_raise() {
	    return this.each(raise$1);
	  }
	
	  function lower() {
	    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
	  }
	
	  function selection_lower() {
	    return this.each(lower);
	  }
	
	  function selection_append(name) {
	    var create = typeof name === "function" ? name : creator(name);
	    return this.select(function() {
	      return this.appendChild(create.apply(this, arguments));
	    });
	  }
	
	  function constantNull() {
	    return null;
	  }
	
	  function selection_insert(name, before) {
	    var create = typeof name === "function" ? name : creator(name),
	        select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
	    return this.select(function() {
	      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
	    });
	  }
	
	  function remove() {
	    var parent = this.parentNode;
	    if (parent) parent.removeChild(this);
	  }
	
	  function selection_remove() {
	    return this.each(remove);
	  }
	
	  function selection_datum(value) {
	    return arguments.length
	        ? this.property("__data__", value)
	        : this.node().__data__;
	  }
	
	  function dispatchEvent(node, type, params) {
	    var window$$ = window(node),
	        event = window$$.CustomEvent;
	
	    if (event) {
	      event = new event(type, params);
	    } else {
	      event = window$$.document.createEvent("Event");
	      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
	      else event.initEvent(type, false, false);
	    }
	
	    node.dispatchEvent(event);
	  }
	
	  function dispatchConstant(type, params) {
	    return function() {
	      return dispatchEvent(this, type, params);
	    };
	  }
	
	  function dispatchFunction(type, params) {
	    return function() {
	      return dispatchEvent(this, type, params.apply(this, arguments));
	    };
	  }
	
	  function selection_dispatch(type, params) {
	    return this.each((typeof params === "function"
	        ? dispatchFunction
	        : dispatchConstant)(type, params));
	  }
	
	  var root = [null];
	
	  function Selection(groups, parents) {
	    this._groups = groups;
	    this._parents = parents;
	  }
	
	  function selection() {
	    return new Selection([[document.documentElement]], root);
	  }
	
	  Selection.prototype = selection.prototype = {
	    constructor: Selection,
	    select: selection_select,
	    selectAll: selection_selectAll,
	    filter: selection_filter,
	    data: selection_data,
	    enter: selection_enter,
	    exit: selection_exit,
	    merge: selection_merge,
	    order: selection_order,
	    sort: selection_sort,
	    call: selection_call,
	    nodes: selection_nodes,
	    node: selection_node,
	    size: selection_size,
	    empty: selection_empty,
	    each: selection_each,
	    attr: selection_attr,
	    style: selection_style,
	    property: selection_property,
	    classed: selection_classed,
	    text: selection_text,
	    html: selection_html,
	    raise: selection_raise,
	    lower: selection_lower,
	    append: selection_append,
	    insert: selection_insert,
	    remove: selection_remove,
	    datum: selection_datum,
	    on: selection_on,
	    dispatch: selection_dispatch
	  };
	
	  function select(selector) {
	    return typeof selector === "string"
	        ? new Selection([[document.querySelector(selector)]], [document.documentElement])
	        : new Selection([[selector]], root);
	  }
	
	  function selectAll(selector) {
	    return typeof selector === "string"
	        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])
	        : new Selection([selector == null ? [] : selector], root);
	  }
	
	  function touch(node, touches, identifier) {
	    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;
	
	    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
	      if ((touch = touches[i]).identifier === identifier) {
	        return point$5(node, touch);
	      }
	    }
	
	    return null;
	  }
	
	  function touches(node, touches) {
	    if (touches == null) touches = sourceEvent().touches;
	
	    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
	      points[i] = point$5(node, touches[i]);
	    }
	
	    return points;
	  }
	
	  var emptyOn = dispatch("start", "end", "interrupt");
	  var emptyTween = [];
	
	  var CREATED = 0;
	  var SCHEDULED = 1;
	  var STARTING = 2;
	  var STARTED = 3;
	  var ENDING = 4;
	  var ENDED = 5;
	
	  function schedule(node, name, id, index, group, timing) {
	    var schedules = node.__transition;
	    if (!schedules) node.__transition = {};
	    else if (id in schedules) return;
	    create(node, id, {
	      name: name,
	      index: index, 
	      group: group, 
	      on: emptyOn,
	      tween: emptyTween,
	      time: timing.time,
	      delay: timing.delay,
	      duration: timing.duration,
	      ease: timing.ease,
	      timer: null,
	      state: CREATED
	    });
	  }
	
	  function init(node, id) {
	    var schedule = node.__transition;
	    if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error("too late");
	    return schedule;
	  }
	
	  function set$2(node, id) {
	    var schedule = node.__transition;
	    if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error("too late");
	    return schedule;
	  }
	
	  function get$1(node, id) {
	    var schedule = node.__transition;
	    if (!schedule || !(schedule = schedule[id])) throw new Error("too late");
	    return schedule;
	  }
	
	  function create(node, id, self) {
	    var schedules = node.__transition,
	        tween;
	
	    
	    
	    schedules[id] = self;
	    self.timer = timer(schedule, 0, self.time);
	
	    
	    
	    function schedule(elapsed) {
	      self.state = SCHEDULED;
	      if (self.delay <= elapsed) start(elapsed - self.delay);
	      else self.timer.restart(start, self.delay, self.time);
	    }
	
	    function start(elapsed) {
	      var i, j, n, o;
	
	      for (i in schedules) {
	        o = schedules[i];
	        if (o.name !== self.name) continue;
	
	        
	        
	        if (o.state === STARTED) {
	          o.state = ENDED;
	          o.timer.stop();
	          o.on.call("interrupt", node, node.__data__, o.index, o.group);
	          delete schedules[i];
	        }
	
	        
	        
	        
	        else if (+i < id) {
	          o.state = ENDED;
	          o.timer.stop();
	          delete schedules[i];
	        }
	      }
	
	      
	      
	      
	      
	      timeout$1(function() {
	        if (self.state === STARTED) {
	          self.timer.restart(tick, self.delay, self.time);
	          tick(elapsed);
	        }
	      });
	
	      
	      
	      self.state = STARTING;
	      self.on.call("start", node, node.__data__, self.index, self.group);
	      if (self.state !== STARTING) return; 
	      self.state = STARTED;
	
	      
	      tween = new Array(n = self.tween.length);
	      for (i = 0, j = -1; i < n; ++i) {
	        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
	          tween[++j] = o;
	        }
	      }
	      tween.length = j + 1;
	    }
	
	    function tick(elapsed) {
	      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),
	          i = -1,
	          n = tween.length;
	
	      while (++i < n) {
	        tween[i].call(null, t);
	      }
	
	      
	      if (self.state === ENDING) {
	        self.state = ENDED;
	        self.timer.stop();
	        self.on.call("end", node, node.__data__, self.index, self.group);
	        for (i in schedules) if (+i !== id) return void delete schedules[id];
	        delete node.__transition;
	      }
	    }
	  }
	
	  function interrupt(node, name) {
	    var schedules = node.__transition,
	        schedule,
	        active,
	        empty = true,
	        i;
	
	    if (!schedules) return;
	
	    name = name == null ? null : name + "";
	
	    for (i in schedules) {
	      if ((schedule = schedules[i]).name !== name) { empty = false; continue; }
	      active = schedule.state === STARTED;
	      schedule.state = ENDED;
	      schedule.timer.stop();
	      if (active) schedule.on.call("interrupt", node, node.__data__, schedule.index, schedule.group);
	      delete schedules[i];
	    }
	
	    if (empty) delete node.__transition;
	  }
	
	  function selection_interrupt(name) {
	    return this.each(function() {
	      interrupt(this, name);
	    });
	  }
	
	  function tweenRemove(id, name) {
	    var tween0, tween1;
	    return function() {
	      var schedule = set$2(this, id),
	          tween = schedule.tween;
	
	      
	      
	      
	      if (tween !== tween0) {
	        tween1 = tween0 = tween;
	        for (var i = 0, n = tween1.length; i < n; ++i) {
	          if (tween1[i].name === name) {
	            tween1 = tween1.slice();
	            tween1.splice(i, 1);
	            break;
	          }
	        }
	      }
	
	      schedule.tween = tween1;
	    };
	  }
	
	  function tweenFunction(id, name, value) {
	    var tween0, tween1;
	    if (typeof value !== "function") throw new Error;
	    return function() {
	      var schedule = set$2(this, id),
	          tween = schedule.tween;
	
	      
	      
	      
	      if (tween !== tween0) {
	        tween1 = (tween0 = tween).slice();
	        for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {
	          if (tween1[i].name === name) {
	            tween1[i] = t;
	            break;
	          }
	        }
	        if (i === n) tween1.push(t);
	      }
	
	      schedule.tween = tween1;
	    };
	  }
	
	  function transition_tween(name, value) {
	    var id = this._id;
	
	    name += "";
	
	    if (arguments.length < 2) {
	      var tween = get$1(this.node(), id).tween;
	      for (var i = 0, n = tween.length, t; i < n; ++i) {
	        if ((t = tween[i]).name === name) {
	          return t.value;
	        }
	      }
	      return null;
	    }
	
	    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
	  }
	
	  function tweenValue(transition, name, value) {
	    var id = transition._id;
	
	    transition.each(function() {
	      var schedule = set$2(this, id);
	      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
	    });
	
	    return function(node) {
	      return get$1(node, id).value[name];
	    };
	  }
	
	  function interpolate$1(a, b) {
	    var c;
	    return (typeof b === "number" ? interpolateNumber
	        : b instanceof color ? interpolateRgb
	        : (c = color(b)) ? (b = c, interpolateRgb)
	        : interpolateString)(a, b);
	  }
	
	  function attrRemove$1(name) {
	    return function() {
	      this.removeAttribute(name);
	    };
	  }
	
	  function attrRemoveNS$1(fullname) {
	    return function() {
	      this.removeAttributeNS(fullname.space, fullname.local);
	    };
	  }
	
	  function attrConstant$1(name, interpolate, value1) {
	    var value00,
	        interpolate0;
	    return function() {
	      var value0 = this.getAttribute(name);
	      return value0 === value1 ? null
	          : value0 === value00 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value1);
	    };
	  }
	
	  function attrConstantNS$1(fullname, interpolate, value1) {
	    var value00,
	        interpolate0;
	    return function() {
	      var value0 = this.getAttributeNS(fullname.space, fullname.local);
	      return value0 === value1 ? null
	          : value0 === value00 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value1);
	    };
	  }
	
	  function attrFunction$1(name, interpolate, value) {
	    var value00,
	        value10,
	        interpolate0;
	    return function() {
	      var value0, value1 = value(this);
	      if (value1 == null) return void this.removeAttribute(name);
	      value0 = this.getAttribute(name);
	      return value0 === value1 ? null
	          : value0 === value00 && value1 === value10 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value10 = value1);
	    };
	  }
	
	  function attrFunctionNS$1(fullname, interpolate, value) {
	    var value00,
	        value10,
	        interpolate0;
	    return function() {
	      var value0, value1 = value(this);
	      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
	      value0 = this.getAttributeNS(fullname.space, fullname.local);
	      return value0 === value1 ? null
	          : value0 === value00 && value1 === value10 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value10 = value1);
	    };
	  }
	
	  function transition_attr(name, value) {
	    var fullname = namespace(name), i = fullname === "transform" ? interpolateTransform$2 : interpolate$1;
	    return this.attrTween(name, typeof value === "function"
	        ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, "attr." + name, value))
	        : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)
	        : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));
	  }
	
	  function attrTweenNS(fullname, value) {
	    function tween() {
	      var node = this, i = value.apply(node, arguments);
	      return i && function(t) {
	        node.setAttributeNS(fullname.space, fullname.local, i(t));
	      };
	    }
	    tween._value = value;
	    return tween;
	  }
	
	  function attrTween(name, value) {
	    function tween() {
	      var node = this, i = value.apply(node, arguments);
	      return i && function(t) {
	        node.setAttribute(name, i(t));
	      };
	    }
	    tween._value = value;
	    return tween;
	  }
	
	  function transition_attrTween(name, value) {
	    var key = "attr." + name;
	    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
	    if (value == null) return this.tween(key, null);
	    if (typeof value !== "function") throw new Error;
	    var fullname = namespace(name);
	    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
	  }
	
	  function delayFunction(id, value) {
	    return function() {
	      init(this, id).delay = +value.apply(this, arguments);
	    };
	  }
	
	  function delayConstant(id, value) {
	    return value = +value, function() {
	      init(this, id).delay = value;
	    };
	  }
	
	  function transition_delay(value) {
	    var id = this._id;
	
	    return arguments.length
	        ? this.each((typeof value === "function"
	            ? delayFunction
	            : delayConstant)(id, value))
	        : get$1(this.node(), id).delay;
	  }
	
	  function durationFunction(id, value) {
	    return function() {
	      set$2(this, id).duration = +value.apply(this, arguments);
	    };
	  }
	
	  function durationConstant(id, value) {
	    return value = +value, function() {
	      set$2(this, id).duration = value;
	    };
	  }
	
	  function transition_duration(value) {
	    var id = this._id;
	
	    return arguments.length
	        ? this.each((typeof value === "function"
	            ? durationFunction
	            : durationConstant)(id, value))
	        : get$1(this.node(), id).duration;
	  }
	
	  function easeConstant(id, value) {
	    if (typeof value !== "function") throw new Error;
	    return function() {
	      set$2(this, id).ease = value;
	    };
	  }
	
	  function transition_ease(value) {
	    var id = this._id;
	
	    return arguments.length
	        ? this.each(easeConstant(id, value))
	        : get$1(this.node(), id).ease;
	  }
	
	  function transition_filter(match) {
	    if (typeof match !== "function") match = matcher$1(match);
	
	    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
	        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
	          subgroup.push(node);
	        }
	      }
	    }
	
	    return new Transition(subgroups, this._parents, this._name, this._id);
	  }
	
	  function transition_merge(transition) {
	    if (transition._id !== this._id) throw new Error;
	
	    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
	      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
	        if (node = group0[i] || group1[i]) {
	          merge[i] = node;
	        }
	      }
	    }
	
	    for (; j < m0; ++j) {
	      merges[j] = groups0[j];
	    }
	
	    return new Transition(merges, this._parents, this._name, this._id);
	  }
	
	  function start$1(name) {
	    return (name + "").trim().split(/^|\s+/).every(function(t) {
	      var i = t.indexOf(".");
	      if (i >= 0) t = t.slice(0, i);
	      return !t || t === "start";
	    });
	  }
	
	  function onFunction(id, name, listener) {
	    var on0, on1, sit = start$1(name) ? init : set$2;
	    return function() {
	      var schedule = sit(this, id),
	          on = schedule.on;
	
	      
	      
	      
	      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
	
	      schedule.on = on1;
	    };
	  }
	
	  function transition_on(name, listener) {
	    var id = this._id;
	
	    return arguments.length < 2
	        ? get$1(this.node(), id).on.on(name)
	        : this.each(onFunction(id, name, listener));
	  }
	
	  function removeFunction(id) {
	    return function() {
	      var parent = this.parentNode;
	      for (var i in this.__transition) if (+i !== id) return;
	      if (parent) parent.removeChild(this);
	    };
	  }
	
	  function transition_remove() {
	    return this.on("end.remove", removeFunction(this._id));
	  }
	
	  function transition_select(select) {
	    var name = this._name,
	        id = this._id;
	
	    if (typeof select !== "function") select = selector(select);
	
	    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
	        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          subgroup[i] = subnode;
	          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));
	        }
	      }
	    }
	
	    return new Transition(subgroups, this._parents, name, id);
	  }
	
	  function transition_selectAll(select) {
	    var name = this._name,
	        id = this._id;
	
	    if (typeof select !== "function") select = selectorAll(select);
	
	    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {
	            if (child = children[k]) {
	              schedule(child, name, id, k, children, inherit);
	            }
	          }
	          subgroups.push(children);
	          parents.push(node);
	        }
	      }
	    }
	
	    return new Transition(subgroups, parents, name, id);
	  }
	
	  var Selection$1 = selection.prototype.constructor;
	
	  function transition_selection() {
	    return new Selection$1(this._groups, this._parents);
	  }
	
	  function styleRemove$1(name, interpolate) {
	    var value00,
	        value10,
	        interpolate0;
	    return function() {
	      var style = window(this).getComputedStyle(this, null),
	          value0 = style.getPropertyValue(name),
	          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));
	      return value0 === value1 ? null
	          : value0 === value00 && value1 === value10 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value10 = value1);
	    };
	  }
	
	  function styleRemoveEnd(name) {
	    return function() {
	      this.style.removeProperty(name);
	    };
	  }
	
	  function styleConstant$1(name, interpolate, value1) {
	    var value00,
	        interpolate0;
	    return function() {
	      var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);
	      return value0 === value1 ? null
	          : value0 === value00 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value1);
	    };
	  }
	
	  function styleFunction$1(name, interpolate, value) {
	    var value00,
	        value10,
	        interpolate0;
	    return function() {
	      var style = window(this).getComputedStyle(this, null),
	          value0 = style.getPropertyValue(name),
	          value1 = value(this);
	      if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));
	      return value0 === value1 ? null
	          : value0 === value00 && value1 === value10 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value10 = value1);
	    };
	  }
	
	  function transition_style(name, value, priority) {
	    var i = (name += "") === "transform" ? interpolateTransform$1 : interpolate$1;
	    return value == null ? this
	            .styleTween(name, styleRemove$1(name, i))
	            .on("end.style." + name, styleRemoveEnd(name))
	        : this.styleTween(name, typeof value === "function"
	            ? styleFunction$1(name, i, tweenValue(this, "style." + name, value))
	            : styleConstant$1(name, i, value), priority);
	  }
	
	  function styleTween(name, value, priority) {
	    function tween() {
	      var node = this, i = value.apply(node, arguments);
	      return i && function(t) {
	        node.style.setProperty(name, i(t), priority);
	      };
	    }
	    tween._value = value;
	    return tween;
	  }
	
	  function transition_styleTween(name, value, priority) {
	    var key = "style." + (name += "");
	    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
	    if (value == null) return this.tween(key, null);
	    if (typeof value !== "function") throw new Error;
	    return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
	  }
	
	  function textConstant$1(value) {
	    return function() {
	      this.textContent = value;
	    };
	  }
	
	  function textFunction$1(value) {
	    return function() {
	      var value1 = value(this);
	      this.textContent = value1 == null ? "" : value1;
	    };
	  }
	
	  function transition_text(value) {
	    return this.tween("text", typeof value === "function"
	        ? textFunction$1(tweenValue(this, "text", value))
	        : textConstant$1(value == null ? "" : value + ""));
	  }
	
	  function transition_transition() {
	    var name = this._name,
	        id0 = this._id,
	        id1 = newId();
	
	    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          var inherit = get$1(node, id0);
	          schedule(node, name, id1, i, group, {
	            time: inherit.time + inherit.delay + inherit.duration,
	            delay: 0,
	            duration: inherit.duration,
	            ease: inherit.ease
	          });
	        }
	      }
	    }
	
	    return new Transition(groups, this._parents, name, id1);
	  }
	
	  var id = 0;
	
	  function Transition(groups, parents, name, id) {
	    this._groups = groups;
	    this._parents = parents;
	    this._name = name;
	    this._id = id;
	  }
	
	  function transition(name) {
	    return selection().transition(name);
	  }
	
	  function newId() {
	    return ++id;
	  }
	
	  var selection_prototype = selection.prototype;
	
	  Transition.prototype = transition.prototype = {
	    constructor: Transition,
	    select: transition_select,
	    selectAll: transition_selectAll,
	    filter: transition_filter,
	    merge: transition_merge,
	    selection: transition_selection,
	    transition: transition_transition,
	    call: selection_prototype.call,
	    nodes: selection_prototype.nodes,
	    node: selection_prototype.node,
	    size: selection_prototype.size,
	    empty: selection_prototype.empty,
	    each: selection_prototype.each,
	    on: transition_on,
	    attr: transition_attr,
	    attrTween: transition_attrTween,
	    style: transition_style,
	    styleTween: transition_styleTween,
	    text: transition_text,
	    remove: transition_remove,
	    tween: transition_tween,
	    delay: transition_delay,
	    duration: transition_duration,
	    ease: transition_ease
	  };
	
	  var defaultTiming = {
	    time: null, 
	    delay: 0,
	    duration: 250,
	    ease: easeCubicInOut
	  };
	
	  function inherit(node, id) {
	    var timing;
	    while (!(timing = node.__transition) || !(timing = timing[id])) {
	      if (!(node = node.parentNode)) {
	        return defaultTiming.time = now(), defaultTiming;
	      }
	    }
	    return timing;
	  }
	
	  function selection_transition(name) {
	    var id,
	        timing;
	
	    if (name instanceof Transition) {
	      id = name._id, name = name._name;
	    } else {
	      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
	    }
	
	    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          schedule(node, name, id, i, group, timing || inherit(node, id));
	        }
	      }
	    }
	
	    return new Transition(groups, this._parents, name, id);
	  }
	
	  selection.prototype.interrupt = selection_interrupt;
	  selection.prototype.transition = selection_transition;
	
	  var root$1 = [null];
	
	  function active(node, name) {
	    var schedules = node.__transition,
	        schedule,
	        i;
	
	    if (schedules) {
	      name = name == null ? null : name + "";
	      for (i in schedules) {
	        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {
	          return new Transition([[node]], root$1, name, +i);
	        }
	      }
	    }
	
	    return null;
	  }
	
	  var slice$4 = Array.prototype.slice;
	
	  function identity$5(x) {
	    return x;
	  }
	
	  var top = 1;
	  var right = 2;
	  var bottom = 3;
	  var left = 4;
	var   epsilon$2 = 1e-6;
	  function translateX(scale0, scale1, d) {
	    var x = scale0(d);
	    return "translate(" + (isFinite(x) ? x : scale1(d)) + ",0)";
	  }
	
	  function translateY(scale0, scale1, d) {
	    var y = scale0(d);
	    return "translate(0," + (isFinite(y) ? y : scale1(d)) + ")";
	  }
	
	  function center(scale) {
	    var width = scale.bandwidth() / 2;
	    return function(d) {
	      return scale(d) + width;
	    };
	  }
	
	  function entering() {
	    return !this.__axis;
	  }
	
	  function axis(orient, scale) {
	    var tickArguments = [],
	        tickValues = null,
	        tickFormat = null,
	        tickSizeInner = 6,
	        tickSizeOuter = 6,
	        tickPadding = 3;
	
	    function axis(context) {
	      var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
	          format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,
	          spacing = Math.max(tickSizeInner, 0) + tickPadding,
	          transform = orient === top || orient === bottom ? translateX : translateY,
	          range = scale.range(),
	          range0 = range[0] + 0.5,
	          range1 = range[range.length - 1] + 0.5,
	          position = (scale.bandwidth ? center : identity$5)(scale.copy()),
	          selection = context.selection ? context.selection() : context,
	          path = selection.selectAll(".domain").data([null]),
	          tick = selection.selectAll(".tick").data(values, scale).order(),
	          tickExit = tick.exit(),
	          tickEnter = tick.enter().append("g").attr("class", "tick"),
	          line = tick.select("line"),
	          text = tick.select("text"),
	          k = orient === top || orient === left ? -1 : 1,
	          x, y = orient === left || orient === right ? (x = "x", "y") : (x = "y", "x");
	
	      path = path.merge(path.enter().insert("path", ".tick")
	          .attr("class", "domain")
	          .attr("stroke", "#000"));
	
	      tick = tick.merge(tickEnter);
	
	      line = line.merge(tickEnter.append("line")
	          .attr("stroke", "#000")
	          .attr(x + "2", k * tickSizeInner)
	          .attr(y + "1", 0.5)
	          .attr(y + "2", 0.5));
	
	      text = text.merge(tickEnter.append("text")
	          .attr("fill", "#000")
	          .attr(x, k * spacing)
	          .attr(y, 0.5)
	          .attr("dy", orient === top ? "0em" : orient === bottom ? ".71em" : ".32em"));
	
	      if (context !== selection) {
	        path = path.transition(context);
	        tick = tick.transition(context);
	        line = line.transition(context);
	        text = text.transition(context);
	
	        tickExit = tickExit.transition(context)
	            .attr("opacity", epsilon$2)
	            .attr("transform", function(d) { return transform(position, this.parentNode.__axis || position, d); });
	
	        tickEnter
	            .attr("opacity", epsilon$2)
	            .attr("transform", function(d) { return transform(this.parentNode.__axis || position, position, d); });
	      }
	
	      tickExit.remove();
	
	      path
	          .attr("d", orient === left || orient == right
	              ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter
	              : "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter);
	
	      tick
	          .attr("opacity", 1)
	          .attr("transform", function(d) { return transform(position, position, d); });
	
	      line
	          .attr(x + "2", k * tickSizeInner);
	
	      text
	          .attr(x, k * spacing)
	          .text(format);
	
	      selection.filter(entering)
	          .attr("fill", "none")
	          .attr("font-size", 10)
	          .attr("font-family", "sans-serif")
	          .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
	
	      selection
	          .each(function() { this.__axis = position; });
	    }
	
	    axis.scale = function(_) {
	      return arguments.length ? (scale = _, axis) : scale;
	    };
	
	    axis.ticks = function() {
	      return tickArguments = slice$4.call(arguments), axis;
	    };
	
	    axis.tickArguments = function(_) {
	      return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();
	    };
	
	    axis.tickValues = function(_) {
	      return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();
	    };
	
	    axis.tickFormat = function(_) {
	      return arguments.length ? (tickFormat = _, axis) : tickFormat;
	    };
	
	    axis.tickSize = function(_) {
	      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
	    };
	
	    axis.tickSizeInner = function(_) {
	      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
	    };
	
	    axis.tickSizeOuter = function(_) {
	      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
	    };
	
	    axis.tickPadding = function(_) {
	      return arguments.length ? (tickPadding = +_, axis) : tickPadding;
	    };
	
	    return axis;
	  }
	
	  function axisTop(scale) {
	    return axis(top, scale);
	  }
	
	  function axisRight(scale) {
	    return axis(right, scale);
	  }
	
	  function axisBottom(scale) {
	    return axis(bottom, scale);
	  }
	
	  function axisLeft(scale) {
	    return axis(left, scale);
	  }
	
	  function defaultSeparation(a, b) {
	    return a.parent === b.parent ? 1 : 2;
	  }
	
	  function meanX(children) {
	    return children.reduce(meanXReduce, 0) / children.length;
	  }
	
	  function meanXReduce(x, c) {
	    return x + c.x;
	  }
	
	  function maxY(children) {
	    return 1 + children.reduce(maxYReduce, 0);
	  }
	
	  function maxYReduce(y, c) {
	    return Math.max(y, c.y);
	  }
	
	  function leafLeft(node) {
	    var children;
	    while (children = node.children) node = children[0];
	    return node;
	  }
	
	  function leafRight(node) {
	    var children;
	    while (children = node.children) node = children[children.length - 1];
	    return node;
	  }
	
	  function cluster() {
	    var separation = defaultSeparation,
	        dx = 1,
	        dy = 1,
	        nodeSize = false;
	
	    function cluster(root) {
	      var previousNode,
	          x = 0;
	
	      
	      root.eachAfter(function(node) {
	        var children = node.children;
	        if (children) {
	          node.x = meanX(children);
	          node.y = maxY(children);
	        } else {
	          node.x = previousNode ? x += separation(node, previousNode) : 0;
	          node.y = 0;
	          previousNode = node;
	        }
	      });
	
	      var left = leafLeft(root),
	          right = leafRight(root),
	          x0 = left.x - separation(left, right) / 2,
	          x1 = right.x + separation(right, left) / 2;
	
	      
	      return root.eachAfter(nodeSize ? function(node) {
	        node.x = (node.x - root.x) * dx;
	        node.y = (root.y - node.y) * dy;
	      } : function(node) {
	        node.x = (node.x - x0) / (x1 - x0) * dx;
	        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
	      });
	    }
	
	    cluster.separation = function(x) {
	      return arguments.length ? (separation = x, cluster) : separation;
	    };
	
	    cluster.size = function(x) {
	      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
	    };
	
	    cluster.nodeSize = function(x) {
	      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
	    };
	
	    return cluster;
	  }
	
	  function node_each(callback) {
	    var node = this, current, next = [node], children, i, n;
	    do {
	      current = next.reverse(), next = [];
	      while (node = current.pop()) {
	        callback(node), children = node.children;
	        if (children) for (i = 0, n = children.length; i < n; ++i) {
	          next.push(children[i]);
	        }
	      }
	    } while (next.length);
	    return this;
	  }
	
	  function node_eachBefore(callback) {
	    var node = this, nodes = [node], children, i;
	    while (node = nodes.pop()) {
	      callback(node), children = node.children;
	      if (children) for (i = children.length - 1; i >= 0; --i) {
	        nodes.push(children[i]);
	      }
	    }
	    return this;
	  }
	
	  function node_eachAfter(callback) {
	    var node = this, nodes = [node], next = [], children, i, n;
	    while (node = nodes.pop()) {
	      next.push(node), children = node.children;
	      if (children) for (i = 0, n = children.length; i < n; ++i) {
	        nodes.push(children[i]);
	      }
	    }
	    while (node = next.pop()) {
	      callback(node);
	    }
	    return this;
	  }
	
	  function node_sum(value) {
	    return this.eachAfter(function(node) {
	      var sum = +value(node.data) || 0,
	          children = node.children,
	          i = children && children.length;
	      while (--i >= 0) sum += children[i].value;
	      node.value = sum;
	    });
	  }
	
	  function node_sort(compare) {
	    return this.eachBefore(function(node) {
	      if (node.children) {
	        node.children.sort(compare);
	      }
	    });
	  }
	
	  function node_path(end) {
	    var start = this,
	        ancestor = leastCommonAncestor(start, end),
	        nodes = [start];
	    while (start !== ancestor) {
	      start = start.parent;
	      nodes.push(start);
	    }
	    var k = nodes.length;
	    while (end !== ancestor) {
	      nodes.splice(k, 0, end);
	      end = end.parent;
	    }
	    return nodes;
	  }
	
	  function leastCommonAncestor(a, b) {
	    if (a === b) return a;
	    var aNodes = a.ancestors(),
	        bNodes = b.ancestors(),
	        c = null;
	    a = aNodes.pop();
	    b = bNodes.pop();
	    while (a === b) {
	      c = a;
	      a = aNodes.pop();
	      b = bNodes.pop();
	    }
	    return c;
	  }
	
	  function node_ancestors() {
	    var node = this, nodes = [node];
	    while (node = node.parent) {
	      nodes.push(node);
	    }
	    return nodes;
	  }
	
	  function node_descendants() {
	    var nodes = [];
	    this.each(function(node) {
	      nodes.push(node);
	    });
	    return nodes;
	  }
	
	  function node_leaves() {
	    var leaves = [];
	    this.eachBefore(function(node) {
	      if (!node.children) {
	        leaves.push(node);
	      }
	    });
	    return leaves;
	  }
	
	  function node_links() {
	    var root = this, links = [];
	    root.each(function(node) {
	      if (node !== root) { 
	        links.push({source: node.parent, target: node});
	      }
	    });
	    return links;
	  }
	
	  function hierarchy(data, children) {
	    var root = new Node(data),
	        valued = +data.value && (root.value = data.value),
	        node,
	        nodes = [root],
	        child,
	        childs,
	        i,
	        n;
	
	    if (children == null) children = defaultChildren;
	
	    while (node = nodes.pop()) {
	      if (valued) node.value = +node.data.value;
	      if ((childs = children(node.data)) && (n = childs.length)) {
	        node.children = new Array(n);
	        for (i = n - 1; i >= 0; --i) {
	          nodes.push(child = node.children[i] = new Node(childs[i]));
	          child.parent = node;
	          child.depth = node.depth + 1;
	        }
	      }
	    }
	
	    return root.eachBefore(computeHeight);
	  }
	
	  function node_copy() {
	    return hierarchy(this).eachBefore(copyData);
	  }
	
	  function defaultChildren(d) {
	    return d.children;
	  }
	
	  function copyData(node) {
	    node.data = node.data.data;
	  }
	
	  function computeHeight(node) {
	    var height = 0;
	    do node.height = height;
	    while ((node = node.parent) && (node.height < ++height));
	  }
	
	  function Node(data) {
	    this.data = data;
	    this.depth =
	    this.height = 0;
	    this.parent = null;
	  }
	
	  Node.prototype = hierarchy.prototype = {
	    constructor: Node,
	    each: node_each,
	    eachAfter: node_eachAfter,
	    eachBefore: node_eachBefore,
	    sum: node_sum,
	    sort: node_sort,
	    path: node_path,
	    ancestors: node_ancestors,
	    descendants: node_descendants,
	    leaves: node_leaves,
	    links: node_links,
	    copy: node_copy
	  };
	
	  function Node$2(value) {
	    this._ = value;
	    this.next = null;
	  }
	
	  function shuffle$1(array) {
	    var i,
	        n = (array = array.slice()).length,
	        head = null,
	        node = head;
	
	    while (n) {
	      var next = new Node$2(array[n - 1]);
	      if (node) node = node.next = next;
	      else node = head = next;
	      array[i] = array[--n];
	    }
	
	    return {
	      head: head,
	      tail: node
	    };
	  }
	
	  function enclose(circles) {
	    return encloseN(shuffle$1(circles), []);
	  }
	
	  function encloses(a, b) {
	    var dx = b.x - a.x,
	        dy = b.y - a.y,
	        dr = a.r - b.r;
	    return dr * dr + 1e-6 > dx * dx + dy * dy;
	  }
	
	  
	  function encloseN(L, B) {
	    var circle,
	        l0 = null,
	        l1 = L.head,
	        l2,
	        p1;
	
	    switch (B.length) {
	      case 1: circle = enclose1(B[0]); break;
	      case 2: circle = enclose2(B[0], B[1]); break;
	      case 3: circle = enclose3(B[0], B[1], B[2]); break;
	    }
	
	    while (l1) {
	      p1 = l1._, l2 = l1.next;
	      if (!circle || !encloses(circle, p1)) {
	
	        
	        if (l0) L.tail = l0, l0.next = null;
	        else L.head = L.tail = null;
	
	        B.push(p1);
	        circle = encloseN(L, B); 
	        B.pop();
	
	        
	        if (L.head) l1.next = L.head, L.head = l1;
	        else l1.next = null, L.head = L.tail = l1;
	        l0 = L.tail, l0.next = l2;
	
	      } else {
	        l0 = l1;
	      }
	      l1 = l2;
	    }
	
	    L.tail = l0;
	    return circle;
	  }
	
	  function enclose1(a) {
	    return {
	      x: a.x,
	      y: a.y,
	      r: a.r
	    };
	  }
	
	  function enclose2(a, b) {
	    var x1 = a.x, y1 = a.y, r1 = a.r,
	        x2 = b.x, y2 = b.y, r2 = b.r,
	        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,
	        l = Math.sqrt(x21 * x21 + y21 * y21);
	    return {
	      x: (x1 + x2 + x21 / l * r21) / 2,
	      y: (y1 + y2 + y21 / l * r21) / 2,
	      r: (l + r1 + r2) / 2
	    };
	  }
	
	  function enclose3(a, b, c) {
	    var x1 = a.x, y1 = a.y, r1 = a.r,
	        x2 = b.x, y2 = b.y, r2 = b.r,
	        x3 = c.x, y3 = c.y, r3 = c.r,
	        a2 = 2 * (x1 - x2),
	        b2 = 2 * (y1 - y2),
	        c2 = 2 * (r2 - r1),
	        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,
	        a3 = 2 * (x1 - x3),
	        b3 = 2 * (y1 - y3),
	        c3 = 2 * (r3 - r1),
	        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,
	        ab = a3 * b2 - a2 * b3,
	        xa = (b2 * d3 - b3 * d2) / ab - x1,
	        xb = (b3 * c2 - b2 * c3) / ab,
	        ya = (a3 * d2 - a2 * d3) / ab - y1,
	        yb = (a2 * c3 - a3 * c2) / ab,
	        A = xb * xb + yb * yb - 1,
	        B = 2 * (xa * xb + ya * yb + r1),
	        C = xa * xa + ya * ya - r1 * r1,
	        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);
	    return {
	      x: xa + xb * r + x1,
	      y: ya + yb * r + y1,
	      r: r
	    };
	  }
	
	  function place(a, b, c) {
	    var ax = a.x,
	        ay = a.y,
	        da = b.r + c.r,
	        db = a.r + c.r,
	        dx = b.x - ax,
	        dy = b.y - ay,
	        dc = dx * dx + dy * dy;
	    if (dc) {
	      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),
	          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
	      c.x = ax + x * dx + y * dy;
	      c.y = ay + x * dy - y * dx;
	    } else {
	      c.x = ax + db;
	      c.y = ay;
	    }
	  }
	
	  function intersects(a, b) {
	    var dx = b.x - a.x,
	        dy = b.y - a.y,
	        dr = a.r + b.r;
	    return dr * dr > dx * dx + dy * dy;
	  }
	
	  function distance2(circle, x, y) {
	    var dx = circle.x - x,
	        dy = circle.y - y;
	    return dx * dx + dy * dy;
	  }
	
	  function Node$1(circle) {
	    this._ = circle;
	    this.next = null;
	    this.previous = null;
	  }
	
	  function packEnclose(circles) {
	    if (!(n = circles.length)) return 0;
	
	    var a, b, c, n;
	
	    
	    a = circles[0], a.x = 0, a.y = 0;
	    if (!(n > 1)) return a.r;
	
	    
	    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
	    if (!(n > 2)) return a.r + b.r;
	
	    
	    place(b, a, c = circles[2]);
	
	    
	    var aa = a.r * a.r,
	        ba = b.r * b.r,
	        ca = c.r * c.r,
	        oa = aa + ba + ca,
	        ox = aa * a.x + ba * b.x + ca * c.x,
	        oy = aa * a.y + ba * b.y + ca * c.y,
	        cx, cy, i, j, k, sj, sk;
	
	    
	    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);
	    a.next = c.previous = b;
	    b.next = a.previous = c;
	    c.next = b.previous = a;
	
	    
	    pack: for (i = 3; i < n; ++i) {
	      place(a._, b._, c = circles[i]), c = new Node$1(c);
	
	      
	      if ((k = a.previous) === (j = b.next)) {
	        
	        
	        if (intersects(j._, c._)) {
	          a = b, b = j, --i;
	          continue pack;
	        }
	      }
	
	      
	      else {
	        sj = j._.r, sk = k._.r;
	        do {
	          if (sj <= sk) {
	            if (intersects(j._, c._)) {
	              b = j, a.next = b, b.previous = a, --i;
	              continue pack;
	            }
	            j = j.next, sj += j._.r;
	          } else {
	            if (intersects(k._, c._)) {
	              a = k, a.next = b, b.previous = a, --i;
	              continue pack;
	            }
	            k = k.previous, sk += k._.r;
	          }
	        } while (j !== k.next);
	      }
	
	      
	      c.previous = a, c.next = b, a.next = b.previous = b = c;
	
	      
	      oa += ca = c._.r * c._.r;
	      ox += ca * c._.x;
	      oy += ca * c._.y;
	
	      
	      aa = distance2(a._, cx = ox / oa, cy = oy / oa);
	      while ((c = c.next) !== b) {
	        if ((ca = distance2(c._, cx, cy)) < aa) {
	          a = c, aa = ca;
	        }
	      }
	      b = a.next;
	    }
	
	    
	    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);
	
	    
	    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;
	
	    return c.r;
	  }
	
	  function siblings(circles) {
	    packEnclose(circles);
	    return circles;
	  }
	
	  function optional(f) {
	    return f == null ? null : required(f);
	  }
	
	  function required(f) {
	    if (typeof f !== "function") throw new Error;
	    return f;
	  }
	
	  function constantZero() {
	    return 0;
	  }
	
	  function constant$5(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function defaultRadius(d) {
	    return Math.sqrt(d.value);
	  }
	
	  function index() {
	    var radius = null,
	        dx = 1,
	        dy = 1,
	        padding = constantZero;
	
	    function pack(root) {
	      root.x = dx / 2, root.y = dy / 2;
	      if (radius) {
	        root.eachBefore(radiusLeaf(radius))
	            .eachAfter(packChildren(padding, 0.5))
	            .eachBefore(translateChild(1));
	      } else {
	        root.eachBefore(radiusLeaf(defaultRadius))
	            .eachAfter(packChildren(constantZero, 1))
	            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))
	            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
	      }
	      return root;
	    }
	
	    pack.radius = function(x) {
	      return arguments.length ? (radius = optional(x), pack) : radius;
	    };
	
	    pack.size = function(x) {
	      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
	    };
	
	    pack.padding = function(x) {
	      return arguments.length ? (padding = typeof x === "function" ? x : constant$5(+x), pack) : padding;
	    };
	
	    return pack;
	  }
	
	  function radiusLeaf(radius) {
	    return function(node) {
	      if (!node.children) {
	        node.r = Math.max(0, +radius(node) || 0);
	      }
	    };
	  }
	
	  function packChildren(padding, k) {
	    return function(node) {
	      if (children = node.children) {
	        var children,
	            i,
	            n = children.length,
	            r = padding(node) * k || 0,
	            e;
	
	        if (r) for (i = 0; i < n; ++i) children[i].r += r;
	        e = packEnclose(children);
	        if (r) for (i = 0; i < n; ++i) children[i].r -= r;
	        node.r = e + r;
	      }
	    };
	  }
	
	  function translateChild(k) {
	    return function(node) {
	      var parent = node.parent;
	      node.r *= k;
	      if (parent) {
	        node.x = parent.x + k * node.x;
	        node.y = parent.y + k * node.y;
	      }
	    };
	  }
	
	  function roundNode(node) {
	    node.x0 = Math.round(node.x0);
	    node.y0 = Math.round(node.y0);
	    node.x1 = Math.round(node.x1);
	    node.y1 = Math.round(node.y1);
	  }
	
	  function treemapDice(parent, x0, y0, x1, y1) {
	    var nodes = parent.children,
	        node,
	        i = -1,
	        n = nodes.length,
	        k = parent.value && (x1 - x0) / parent.value;
	
	    while (++i < n) {
	      node = nodes[i], node.y0 = y0, node.y1 = y1;
	      node.x0 = x0, node.x1 = x0 += node.value * k;
	    }
	  }
	
	  function partition() {
	    var dx = 1,
	        dy = 1,
	        padding = 0,
	        round = false;
	
	    function partition(root) {
	      var n = root.height + 1;
	      root.x0 =
	      root.y0 = padding;
	      root.x1 = dx;
	      root.y1 = dy / n;
	      root.eachBefore(positionNode(dy, n));
	      if (round) root.eachBefore(roundNode);
	      return root;
	    }
	
	    function positionNode(dy, n) {
	      return function(node) {
	        if (node.children) {
	          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
	        }
	        var x0 = node.x0,
	            y0 = node.y0,
	            x1 = node.x1 - padding,
	            y1 = node.y1 - padding;
	        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
	        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
	        node.x0 = x0;
	        node.y0 = y0;
	        node.x1 = x1;
	        node.y1 = y1;
	      };
	    }
	
	    partition.round = function(x) {
	      return arguments.length ? (round = !!x, partition) : round;
	    };
	
	    partition.size = function(x) {
	      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
	    };
	
	    partition.padding = function(x) {
	      return arguments.length ? (padding = +x, partition) : padding;
	    };
	
	    return partition;
	  }
	
	var   keyPrefix$1 = "$";
	  var preroot = {depth: -1};
	  var ambiguous = {};
	  function defaultId(d) {
	    return d.id;
	  }
	
	  function defaultParentId(d) {
	    return d.parentId;
	  }
	
	  function stratify() {
	    var id = defaultId,
	        parentId = defaultParentId;
	
	    function stratify(data) {
	      var d,
	          i,
	          n = data.length,
	          root,
	          parent,
	          node,
	          nodes = new Array(n),
	          nodeId,
	          nodeKey,
	          nodeByKey = {};
	
	      for (i = 0; i < n; ++i) {
	        d = data[i], node = nodes[i] = new Node(d);
	        if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
	          nodeKey = keyPrefix$1 + (node.id = nodeId);
	          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
	        }
	      }
	
	      for (i = 0; i < n; ++i) {
	        node = nodes[i], nodeId = parentId(data[i], i, data);
	        if (nodeId == null || !(nodeId += "")) {
	          if (root) throw new Error("multiple roots");
	          root = node;
	        } else {
	          parent = nodeByKey[keyPrefix$1 + nodeId];
	          if (!parent) throw new Error("missing: " + nodeId);
	          if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
	          if (parent.children) parent.children.push(node);
	          else parent.children = [node];
	          node.parent = parent;
	        }
	      }
	
	      if (!root) throw new Error("no root");
	      root.parent = preroot;
	      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);
	      root.parent = null;
	      if (n > 0) throw new Error("cycle");
	
	      return root;
	    }
	
	    stratify.id = function(x) {
	      return arguments.length ? (id = required(x), stratify) : id;
	    };
	
	    stratify.parentId = function(x) {
	      return arguments.length ? (parentId = required(x), stratify) : parentId;
	    };
	
	    return stratify;
	  }
	
	  function defaultSeparation$1(a, b) {
	    return a.parent === b.parent ? 1 : 2;
	  }
	
	  
	  
	  
	
	  
	  
	  
	  
	  function nextLeft(v) {
	    var children = v.children;
	    return children ? children[0] : v.t;
	  }
	
	  
	  function nextRight(v) {
	    var children = v.children;
	    return children ? children[children.length - 1] : v.t;
	  }
	
	  
	  
	  function moveSubtree(wm, wp, shift) {
	    var change = shift / (wp.i - wm.i);
	    wp.c -= change;
	    wp.s += shift;
	    wm.c += change;
	    wp.z += shift;
	    wp.m += shift;
	  }
	
	  
	  
	  
	  function executeShifts(v) {
	    var shift = 0,
	        change = 0,
	        children = v.children,
	        i = children.length,
	        w;
	    while (--i >= 0) {
	      w = children[i];
	      w.z += shift;
	      w.m += shift;
	      shift += w.s + (change += w.c);
	    }
	  }
	
	  
	  
	  function nextAncestor(vim, v, ancestor) {
	    return vim.a.parent === v.parent ? vim.a : ancestor;
	  }
	
	  function TreeNode(node, i) {
	    this._ = node;
	    this.parent = null;
	    this.children = null;
	    this.A = null; 
	    this.a = this; 
	    this.z = 0; 
	    this.m = 0; 
	    this.c = 0; 
	    this.s = 0; 
	    this.t = null; 
	    this.i = i; 
	  }
	
	  TreeNode.prototype = Object.create(Node.prototype);
	
	  function treeRoot(root) {
	    var tree = new TreeNode(root, 0),
	        node,
	        nodes = [tree],
	        child,
	        children,
	        i,
	        n;
	
	    while (node = nodes.pop()) {
	      if (children = node._.children) {
	        node.children = new Array(n = children.length);
	        for (i = n - 1; i >= 0; --i) {
	          nodes.push(child = node.children[i] = new TreeNode(children[i], i));
	          child.parent = node;
	        }
	      }
	    }
	
	    (tree.parent = new TreeNode(null, 0)).children = [tree];
	    return tree;
	  }
	
	  
	  function tree() {
	    var separation = defaultSeparation$1,
	        dx = 1,
	        dy = 1,
	        nodeSize = null;
	
	    function tree(root) {
	      var t = treeRoot(root);
	
	      
	      t.eachAfter(firstWalk), t.parent.m = -t.z;
	      t.eachBefore(secondWalk);
	
	      
	      if (nodeSize) root.eachBefore(sizeNode);
	
	      
	      
	      else {
	        var left = root,
	            right = root,
	            bottom = root;
	        root.eachBefore(function(node) {
	          if (node.x < left.x) left = node;
	          if (node.x > right.x) right = node;
	          if (node.depth > bottom.depth) bottom = node;
	        });
	        var s = left === right ? 1 : separation(left, right) / 2,
	            tx = s - left.x,
	            kx = dx / (right.x + s + tx),
	            ky = dy / (bottom.depth || 1);
	        root.eachBefore(function(node) {
	          node.x = (node.x + tx) * kx;
	          node.y = node.depth * ky;
	        });
	      }
	
	      return root;
	    }
	
	    
	    
	    
	    
	    function firstWalk(v) {
	      var children = v.children,
	          siblings = v.parent.children,
	          w = v.i ? siblings[v.i - 1] : null;
	      if (children) {
	        executeShifts(v);
	        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
	        if (w) {
	          v.z = w.z + separation(v._, w._);
	          v.m = v.z - midpoint;
	        } else {
	          v.z = midpoint;
	        }
	      } else if (w) {
	        v.z = w.z + separation(v._, w._);
	      }
	      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
	    }
	
	    
	    function secondWalk(v) {
	      v._.x = v.z + v.parent.m;
	      v.m += v.parent.m;
	    }
	
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    function apportion(v, w, ancestor) {
	      if (w) {
	        var vip = v,
	            vop = v,
	            vim = w,
	            vom = vip.parent.children[0],
	            sip = vip.m,
	            sop = vop.m,
	            sim = vim.m,
	            som = vom.m,
	            shift;
	        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
	          vom = nextLeft(vom);
	          vop = nextRight(vop);
	          vop.a = v;
	          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
	          if (shift > 0) {
	            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
	            sip += shift;
	            sop += shift;
	          }
	          sim += vim.m;
	          sip += vip.m;
	          som += vom.m;
	          sop += vop.m;
	        }
	        if (vim && !nextRight(vop)) {
	          vop.t = vim;
	          vop.m += sim - sop;
	        }
	        if (vip && !nextLeft(vom)) {
	          vom.t = vip;
	          vom.m += sip - som;
	          ancestor = v;
	        }
	      }
	      return ancestor;
	    }
	
	    function sizeNode(node) {
	      node.x *= dx;
	      node.y = node.depth * dy;
	    }
	
	    tree.separation = function(x) {
	      return arguments.length ? (separation = x, tree) : separation;
	    };
	
	    tree.size = function(x) {
	      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
	    };
	
	    tree.nodeSize = function(x) {
	      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
	    };
	
	    return tree;
	  }
	
	  function treemapSlice(parent, x0, y0, x1, y1) {
	    var nodes = parent.children,
	        node,
	        i = -1,
	        n = nodes.length,
	        k = parent.value && (y1 - y0) / parent.value;
	
	    while (++i < n) {
	      node = nodes[i], node.x0 = x0, node.x1 = x1;
	      node.y0 = y0, node.y1 = y0 += node.value * k;
	    }
	  }
	
	  var phi = (1 + Math.sqrt(5)) / 2;
	
	  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
	    var rows = [],
	        nodes = parent.children,
	        row,
	        nodeValue,
	        i0 = 0,
	        i1,
	        n = nodes.length,
	        dx, dy,
	        value = parent.value,
	        sumValue,
	        minValue,
	        maxValue,
	        newRatio,
	        minRatio,
	        alpha,
	        beta;
	
	    while (i0 < n) {
	      dx = x1 - x0, dy = y1 - y0;
	      minValue = maxValue = sumValue = nodes[i0].value;
	      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
	      beta = sumValue * sumValue * alpha;
	      minRatio = Math.max(maxValue / beta, beta / minValue);
	
	      
	      for (i1 = i0 + 1; i1 < n; ++i1) {
	        sumValue += nodeValue = nodes[i1].value;
	        if (nodeValue < minValue) minValue = nodeValue;
	        if (nodeValue > maxValue) maxValue = nodeValue;
	        beta = sumValue * sumValue * alpha;
	        newRatio = Math.max(maxValue / beta, beta / minValue);
	        if (newRatio > minRatio) { sumValue -= nodeValue; break; }
	        minRatio = newRatio;
	      }
	
	      
	      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
	      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
	      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
	      value -= sumValue, i0 = i1;
	    }
	
	    return rows;
	  }
	
	  var squarify = (function custom(ratio) {
	
	    function squarify(parent, x0, y0, x1, y1) {
	      squarifyRatio(ratio, parent, x0, y0, x1, y1);
	    }
	
	    squarify.ratio = function(x) {
	      return custom((x = +x) > 1 ? x : 1);
	    };
	
	    return squarify;
	  })(phi);
	
	  function index$1() {
	    var tile = squarify,
	        round = false,
	        dx = 1,
	        dy = 1,
	        paddingStack = [0],
	        paddingInner = constantZero,
	        paddingTop = constantZero,
	        paddingRight = constantZero,
	        paddingBottom = constantZero,
	        paddingLeft = constantZero;
	
	    function treemap(root) {
	      root.x0 =
	      root.y0 = 0;
	      root.x1 = dx;
	      root.y1 = dy;
	      root.eachBefore(positionNode);
	      paddingStack = [0];
	      if (round) root.eachBefore(roundNode);
	      return root;
	    }
	
	    function positionNode(node) {
	      var p = paddingStack[node.depth],
	          x0 = node.x0 + p,
	          y0 = node.y0 + p,
	          x1 = node.x1 - p,
	          y1 = node.y1 - p;
	      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
	      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
	      node.x0 = x0;
	      node.y0 = y0;
	      node.x1 = x1;
	      node.y1 = y1;
	      if (node.children) {
	        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
	        x0 += paddingLeft(node) - p;
	        y0 += paddingTop(node) - p;
	        x1 -= paddingRight(node) - p;
	        y1 -= paddingBottom(node) - p;
	        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
	        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
	        tile(node, x0, y0, x1, y1);
	      }
	    }
	
	    treemap.round = function(x) {
	      return arguments.length ? (round = !!x, treemap) : round;
	    };
	
	    treemap.size = function(x) {
	      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
	    };
	
	    treemap.tile = function(x) {
	      return arguments.length ? (tile = required(x), treemap) : tile;
	    };
	
	    treemap.padding = function(x) {
	      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
	    };
	
	    treemap.paddingInner = function(x) {
	      return arguments.length ? (paddingInner = typeof x === "function" ? x : constant$5(+x), treemap) : paddingInner;
	    };
	
	    treemap.paddingOuter = function(x) {
	      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
	    };
	
	    treemap.paddingTop = function(x) {
	      return arguments.length ? (paddingTop = typeof x === "function" ? x : constant$5(+x), treemap) : paddingTop;
	    };
	
	    treemap.paddingRight = function(x) {
	      return arguments.length ? (paddingRight = typeof x === "function" ? x : constant$5(+x), treemap) : paddingRight;
	    };
	
	    treemap.paddingBottom = function(x) {
	      return arguments.length ? (paddingBottom = typeof x === "function" ? x : constant$5(+x), treemap) : paddingBottom;
	    };
	
	    treemap.paddingLeft = function(x) {
	      return arguments.length ? (paddingLeft = typeof x === "function" ? x : constant$5(+x), treemap) : paddingLeft;
	    };
	
	    return treemap;
	  }
	
	  function binary(parent, x0, y0, x1, y1) {
	    var nodes = parent.children,
	        i, n = nodes.length,
	        sum, sums = new Array(n + 1);
	
	    for (sums[0] = sum = i = 0; i < n; ++i) {
	      sums[i + 1] = sum += nodes[i].value;
	    }
	
	    partition(0, n, parent.value, x0, y0, x1, y1);
	
	    function partition(i, j, value, x0, y0, x1, y1) {
	      if (i >= j - 1) {
	        var node = nodes[i];
	        node.x0 = x0, node.y0 = y0;
	        node.x1 = x1, node.y1 = y1;
	        return;
	      }
	
	      var valueOffset = sums[i],
	          valueTarget = (value / 2) + valueOffset,
	          k = i + 1,
	          hi = j - 1;
	
	      while (k < hi) {
	        var mid = k + hi >>> 1;
	        if (sums[mid] < valueTarget) k = mid + 1;
	        else hi = mid;
	      }
	
	      var valueLeft = sums[k] - valueOffset,
	          valueRight = value - valueLeft;
	
	      if ((y1 - y0) > (x1 - x0)) {
	        var yk = (y0 * valueRight + y1 * valueLeft) / value;
	        partition(i, k, valueLeft, x0, y0, x1, yk);
	        partition(k, j, valueRight, x0, yk, x1, y1);
	      } else {
	        var xk = (x0 * valueRight + x1 * valueLeft) / value;
	        partition(i, k, valueLeft, x0, y0, xk, y1);
	        partition(k, j, valueRight, xk, y0, x1, y1);
	      }
	    }
	  }
	
	  function sliceDice(parent, x0, y0, x1, y1) {
	    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);
	  }
	
	  var resquarify = (function custom(ratio) {
	
	    function resquarify(parent, x0, y0, x1, y1) {
	      if ((rows = parent._squarify) && (rows.ratio === ratio)) {
	        var rows,
	            row,
	            nodes,
	            i,
	            j = -1,
	            n,
	            m = rows.length,
	            value = parent.value;
	
	        while (++j < m) {
	          row = rows[j], nodes = row.children;
	          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;
	          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);
	          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
	          value -= row.value;
	        }
	      } else {
	        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);
	        rows.ratio = ratio;
	      }
	    }
	
	    resquarify.ratio = function(x) {
	      return custom((x = +x) > 1 ? x : 1);
	    };
	
	    return resquarify;
	  })(phi);
	
	  function center$1(x, y) {
	    var nodes;
	
	    if (x == null) x = 0;
	    if (y == null) y = 0;
	
	    function force() {
	      var i,
	          n = nodes.length,
	          node,
	          sx = 0,
	          sy = 0;
	
	      for (i = 0; i < n; ++i) {
	        node = nodes[i], sx += node.x, sy += node.y;
	      }
	
	      for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
	        node = nodes[i], node.x -= sx, node.y -= sy;
	      }
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	    };
	
	    force.x = function(_) {
	      return arguments.length ? (x = +_, force) : x;
	    };
	
	    force.y = function(_) {
	      return arguments.length ? (y = +_, force) : y;
	    };
	
	    return force;
	  }
	
	  function constant$6(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function jiggle() {
	    return (Math.random() - 0.5) * 1e-6;
	  }
	
	  function x$1(d) {
	    return d.x + d.vx;
	  }
	
	  function y$1(d) {
	    return d.y + d.vy;
	  }
	
	  function collide(radius) {
	    var nodes,
	        radii,
	        strength = 1,
	        iterations = 1;
	
	    if (typeof radius !== "function") radius = constant$6(radius == null ? 1 : +radius);
	
	    function force() {
	      var i, n = nodes.length,
	          tree,
	          node,
	          xi,
	          yi,
	          ri,
	          ri2;
	
	      for (var k = 0; k < iterations; ++k) {
	        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);
	        for (i = 0; i < n; ++i) {
	          node = nodes[i];
	          ri = radii[i], ri2 = ri * ri;
	          xi = node.x + node.vx;
	          yi = node.y + node.vy;
	          tree.visit(apply);
	        }
	      }
	
	      function apply(quad, x0, y0, x1, y1) {
	        var data = quad.data, rj = quad.r, r = ri + rj;
	        if (data) {
	          if (data.index > i) {
	            var x = xi - data.x - data.vx,
	                y = yi - data.y - data.vy,
	                l = x * x + y * y;
	            if (l < r * r) {
	              if (x === 0) x = jiggle(), l += x * x;
	              if (y === 0) y = jiggle(), l += y * y;
	              l = (r - (l = Math.sqrt(l))) / l * strength;
	              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
	              node.vy += (y *= l) * r;
	              data.vx -= x * (r = 1 - r);
	              data.vy -= y * r;
	            }
	          }
	          return;
	        }
	        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
	      }
	    }
	
	    function prepare(quad) {
	      if (quad.data) return quad.r = radii[quad.data.index];
	      for (var i = quad.r = 0; i < 4; ++i) {
	        if (quad[i] && quad[i].r > quad.r) {
	          quad.r = quad[i].r;
	        }
	      }
	    }
	
	    force.initialize = function(_) {
	      var i, n = (nodes = _).length; radii = new Array(n);
	      for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);
	    };
	
	    force.iterations = function(_) {
	      return arguments.length ? (iterations = +_, force) : iterations;
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = +_, force) : strength;
	    };
	
	    force.radius = function(_) {
	      return arguments.length ? (radius = typeof _ === "function" ? _ : constant$6(+_), force) : radius;
	    };
	
	    return force;
	  }
	
	  function index$2(d, i) {
	    return i;
	  }
	
	  function link(links) {
	    var id = index$2,
	        strength = defaultStrength,
	        strengths,
	        distance = constant$6(30),
	        distances,
	        nodes,
	        count,
	        bias,
	        iterations = 1;
	
	    if (links == null) links = [];
	
	    function defaultStrength(link) {
	      return 1 / Math.min(count[link.source.index], count[link.target.index]);
	    }
	
	    function force(alpha) {
	      for (var k = 0, n = links.length; k < iterations; ++k) {
	        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
	          link = links[i], source = link.source, target = link.target;
	          x = target.x + target.vx - source.x - source.vx || jiggle();
	          y = target.y + target.vy - source.y - source.vy || jiggle();
	          l = Math.sqrt(x * x + y * y);
	          l = (l - distances[i]) / l * alpha * strengths[i];
	          x *= l, y *= l;
	          target.vx -= x * (b = bias[i]);
	          target.vy -= y * b;
	          source.vx += x * (b = 1 - b);
	          source.vy += y * b;
	        }
	      }
	    }
	
	    function initialize() {
	      if (!nodes) return;
	
	      var i,
	          n = nodes.length,
	          m = links.length,
	          nodeById = map$1(nodes, id),
	          link;
	
	      for (i = 0, count = new Array(n); i < n; ++i) {
	        count[i] = 0;
	      }
	
	      for (i = 0; i < m; ++i) {
	        link = links[i], link.index = i;
	        if (typeof link.source !== "object") link.source = nodeById.get(link.source);
	        if (typeof link.target !== "object") link.target = nodeById.get(link.target);
	        ++count[link.source.index], ++count[link.target.index];
	      }
	
	      for (i = 0, bias = new Array(m); i < m; ++i) {
	        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
	      }
	
	      strengths = new Array(m), initializeStrength();
	      distances = new Array(m), initializeDistance();
	    }
	
	    function initializeStrength() {
	      if (!nodes) return;
	
	      for (var i = 0, n = links.length; i < n; ++i) {
	        strengths[i] = +strength(links[i], i, links);
	      }
	    }
	
	    function initializeDistance() {
	      if (!nodes) return;
	
	      for (var i = 0, n = links.length; i < n; ++i) {
	        distances[i] = +distance(links[i], i, links);
	      }
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	      initialize();
	    };
	
	    force.links = function(_) {
	      return arguments.length ? (links = _, initialize(), force) : links;
	    };
	
	    force.id = function(_) {
	      return arguments.length ? (id = _, force) : id;
	    };
	
	    force.iterations = function(_) {
	      return arguments.length ? (iterations = +_, force) : iterations;
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initializeStrength(), force) : strength;
	    };
	
	    force.distance = function(_) {
	      return arguments.length ? (distance = typeof _ === "function" ? _ : constant$6(+_), initializeDistance(), force) : distance;
	    };
	
	    return force;
	  }
	
	  function x$2(d) {
	    return d.x;
	  }
	
	  function y$2(d) {
	    return d.y;
	  }
	
	  var initialRadius = 10;
	  var initialAngle = Math.PI * (3 - Math.sqrt(5));
	  function simulation(nodes) {
	    var simulation,
	        alpha = 1,
	        alphaMin = 0.001,
	        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
	        alphaTarget = 0,
	        velocityDecay = 0.6,
	        forces = map$1(),
	        stepper = timer(step),
	        event = dispatch("tick", "end");
	
	    if (nodes == null) nodes = [];
	
	    function step() {
	      tick();
	      event.call("tick", simulation);
	      if (alpha < alphaMin) {
	        stepper.stop();
	        event.call("end", simulation);
	      }
	    }
	
	    function tick() {
	      var i, n = nodes.length, node;
	
	      alpha += (alphaTarget - alpha) * alphaDecay;
	
	      forces.each(function(force) {
	        force(alpha);
	      });
	
	      for (i = 0; i < n; ++i) {
	        node = nodes[i];
	        if (node.fx == null) node.x += node.vx *= velocityDecay;
	        else node.x = node.fx, node.vx = 0;
	        if (node.fy == null) node.y += node.vy *= velocityDecay;
	        else node.y = node.fy, node.vy = 0;
	      }
	    }
	
	    function initializeNodes() {
	      for (var i = 0, n = nodes.length, node; i < n; ++i) {
	        node = nodes[i], node.index = i;
	        if (isNaN(node.x) || isNaN(node.y)) {
	          var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;
	          node.x = radius * Math.cos(angle);
	          node.y = radius * Math.sin(angle);
	        }
	        if (isNaN(node.vx) || isNaN(node.vy)) {
	          node.vx = node.vy = 0;
	        }
	      }
	    }
	
	    function initializeForce(force) {
	      if (force.initialize) force.initialize(nodes);
	      return force;
	    }
	
	    initializeNodes();
	
	    return simulation = {
	      tick: tick,
	
	      restart: function() {
	        return stepper.restart(step), simulation;
	      },
	
	      stop: function() {
	        return stepper.stop(), simulation;
	      },
	
	      nodes: function(_) {
	        return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
	      },
	
	      alpha: function(_) {
	        return arguments.length ? (alpha = +_, simulation) : alpha;
	      },
	
	      alphaMin: function(_) {
	        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
	      },
	
	      alphaDecay: function(_) {
	        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
	      },
	
	      alphaTarget: function(_) {
	        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
	      },
	
	      velocityDecay: function(_) {
	        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
	      },
	
	      force: function(name, _) {
	        return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);
	      },
	
	      find: function(x, y, radius) {
	        var i = 0,
	            n = nodes.length,
	            dx,
	            dy,
	            d2,
	            node,
	            closest;
	
	        if (radius == null) radius = Infinity;
	        else radius *= radius;
	
	        for (i = 0; i < n; ++i) {
	          node = nodes[i];
	          dx = x - node.x;
	          dy = y - node.y;
	          d2 = dx * dx + dy * dy;
	          if (d2 < radius) closest = node, radius = d2;
	        }
	
	        return closest;
	      },
	
	      on: function(name, _) {
	        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
	      }
	    };
	  }
	
	  function manyBody() {
	    var nodes,
	        node,
	        alpha,
	        strength = constant$6(-30),
	        strengths,
	        distanceMin2 = 1,
	        distanceMax2 = Infinity,
	        theta2 = 0.81;
	
	    function force(_) {
	      var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);
	      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
	    }
	
	    function initialize() {
	      if (!nodes) return;
	      var i, n = nodes.length;
	      strengths = new Array(n);
	      for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);
	    }
	
	    function accumulate(quad) {
	      var strength = 0, q, c, x, y, i;
	
	      
	      if (quad.length) {
	        for (x = y = i = 0; i < 4; ++i) {
	          if ((q = quad[i]) && (c = q.value)) {
	            strength += c, x += c * q.x, y += c * q.y;
	          }
	        }
	        quad.x = x / strength;
	        quad.y = y / strength;
	      }
	
	      
	      else {
	        q = quad;
	        q.x = q.data.x;
	        q.y = q.data.y;
	        do strength += strengths[q.data.index];
	        while (q = q.next);
	      }
	
	      quad.value = strength;
	    }
	
	    function apply(quad, x1, _, x2) {
	      if (!quad.value) return true;
	
	      var x = quad.x - node.x,
	          y = quad.y - node.y,
	          w = x2 - x1,
	          l = x * x + y * y;
	
	      
	      
	      if (w * w / theta2 < l) {
	        if (l < distanceMax2) {
	          if (x === 0) x = jiggle(), l += x * x;
	          if (y === 0) y = jiggle(), l += y * y;
	          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
	          node.vx += x * quad.value * alpha / l;
	          node.vy += y * quad.value * alpha / l;
	        }
	        return true;
	      }
	
	      
	      else if (quad.length || l >= distanceMax2) return;
	
	      
	      if (quad.data !== node || quad.next) {
	        if (x === 0) x = jiggle(), l += x * x;
	        if (y === 0) y = jiggle(), l += y * y;
	        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
	      }
	
	      do if (quad.data !== node) {
	        w = strengths[quad.data.index] * alpha / l;
	        node.vx += x * w;
	        node.vy += y * w;
	      } while (quad = quad.next);
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	      initialize();
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;
	    };
	
	    force.distanceMin = function(_) {
	      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
	    };
	
	    force.distanceMax = function(_) {
	      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
	    };
	
	    force.theta = function(_) {
	      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
	    };
	
	    return force;
	  }
	
	  function x$3(x) {
	    var strength = constant$6(0.1),
	        nodes,
	        strengths,
	        xz;
	
	    if (typeof x !== "function") x = constant$6(x == null ? 0 : +x);
	
	    function force(alpha) {
	      for (var i = 0, n = nodes.length, node; i < n; ++i) {
	        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
	      }
	    }
	
	    function initialize() {
	      if (!nodes) return;
	      var i, n = nodes.length;
	      strengths = new Array(n);
	      xz = new Array(n);
	      for (i = 0; i < n; ++i) {
	        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
	      }
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	      initialize();
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;
	    };
	
	    force.x = function(_) {
	      return arguments.length ? (x = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : x;
	    };
	
	    return force;
	  }
	
	  function y$3(y) {
	    var strength = constant$6(0.1),
	        nodes,
	        strengths,
	        yz;
	
	    if (typeof y !== "function") y = constant$6(y == null ? 0 : +y);
	
	    function force(alpha) {
	      for (var i = 0, n = nodes.length, node; i < n; ++i) {
	        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
	      }
	    }
	
	    function initialize() {
	      if (!nodes) return;
	      var i, n = nodes.length;
	      strengths = new Array(n);
	      yz = new Array(n);
	      for (i = 0; i < n; ++i) {
	        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
	      }
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	      initialize();
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;
	    };
	
	    force.y = function(_) {
	      return arguments.length ? (y = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : y;
	    };
	
	    return force;
	  }
	
	  function nopropagation() {
	    exports.event.stopImmediatePropagation();
	  }
	
	  function noevent() {
	    exports.event.preventDefault();
	    exports.event.stopImmediatePropagation();
	  }
	
	  function dragDisable(view) {
	    var root = view.document.documentElement,
	        selection = select(view).on("dragstart.drag", noevent, true);
	    if ("onselectstart" in root) {
	      selection.on("selectstart.drag", noevent, true);
	    } else {
	      root.__noselect = root.style.MozUserSelect;
	      root.style.MozUserSelect = "none";
	    }
	  }
	
	  function dragEnable(view, noclick) {
	    var root = view.document.documentElement,
	        selection = select(view).on("dragstart.drag", null);
	    if (noclick) {
	      selection.on("click.drag", noevent, true);
	      setTimeout(function() { selection.on("click.drag", null); }, 0);
	    }
	    if ("onselectstart" in root) {
	      selection.on("selectstart.drag", null);
	    } else {
	      root.style.MozUserSelect = root.__noselect;
	      delete root.__noselect;
	    }
	  }
	
	  function constant$7(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
	    this.target = target;
	    this.type = type;
	    this.subject = subject;
	    this.identifier = id;
	    this.active = active;
	    this.x = x;
	    this.y = y;
	    this.dx = dx;
	    this.dy = dy;
	    this._ = dispatch;
	  }
	
	  DragEvent.prototype.on = function() {
	    var value = this._.on.apply(this._, arguments);
	    return value === this._ ? this : value;
	  };
	
	  
	  function defaultFilter() {
	    return !exports.event.button;
	  }
	
	  function defaultContainer() {
	    return this.parentNode;
	  }
	
	  function defaultSubject(d) {
	    return d == null ? {x: exports.event.x, y: exports.event.y} : d;
	  }
	
	  function drag() {
	    var filter = defaultFilter,
	        container = defaultContainer,
	        subject = defaultSubject,
	        gestures = {},
	        listeners = dispatch("start", "drag", "end"),
	        active = 0,
	        mousemoving,
	        touchending;
	
	    function drag(selection) {
	      selection
	          .on("mousedown.drag", mousedowned)
	          .on("touchstart.drag", touchstarted)
	          .on("touchmove.drag", touchmoved)
	          .on("touchend.drag touchcancel.drag", touchended)
	          .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
	    }
	
	    function mousedowned() {
	      if (touchending || !filter.apply(this, arguments)) return;
	      var gesture = beforestart("mouse", container.apply(this, arguments), mouse, this, arguments);
	      if (!gesture) return;
	      select(exports.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
	      dragDisable(exports.event.view);
	      nopropagation();
	      mousemoving = false;
	      gesture("start");
	    }
	
	    function mousemoved() {
	      noevent();
	      mousemoving = true;
	      gestures.mouse("drag");
	    }
	
	    function mouseupped() {
	      select(exports.event.view).on("mousemove.drag mouseup.drag", null);
	      dragEnable(exports.event.view, mousemoving);
	      noevent();
	      gestures.mouse("end");
	    }
	
	    function touchstarted() {
	      if (!filter.apply(this, arguments)) return;
	      var touches = exports.event.changedTouches,
	          c = container.apply(this, arguments),
	          n = touches.length, i, gesture;
	
	      for (i = 0; i < n; ++i) {
	        if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {
	          nopropagation();
	          gesture("start");
	        }
	      }
	    }
	
	    function touchmoved() {
	      var touches = exports.event.changedTouches,
	          n = touches.length, i, gesture;
	
	      for (i = 0; i < n; ++i) {
	        if (gesture = gestures[touches[i].identifier]) {
	          noevent();
	          gesture("drag");
	        }
	      }
	    }
	
	    function touchended() {
	      var touches = exports.event.changedTouches,
	          n = touches.length, i, gesture;
	
	      if (touchending) clearTimeout(touchending);
	      touchending = setTimeout(function() { touchending = null; }, 500); 
	      for (i = 0; i < n; ++i) {
	        if (gesture = gestures[touches[i].identifier]) {
	          nopropagation();
	          gesture("end");
	        }
	      }
	    }
	
	    function beforestart(id, container, point, that, args) {
	      var p = point(container, id), s, dx, dy,
	          sublisteners = listeners.copy();
	
	      if (!customEvent(new DragEvent(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {
	        if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;
	        dx = s.x - p[0] || 0;
	        dy = s.y - p[1] || 0;
	        return true;
	      })) return;
	
	      return function gesture(type) {
	        var p0 = p, n;
	        switch (type) {
	          case "start": gestures[id] = gesture, n = active++; break;
	          case "end": delete gestures[id], --active; 
	          case "drag": p = point(container, id), n = active; break;
	        }
	        customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
	      };
	    }
	
	    drag.filter = function(_) {
	      return arguments.length ? (filter = typeof _ === "function" ? _ : constant$7(!!_), drag) : filter;
	    };
	
	    drag.container = function(_) {
	      return arguments.length ? (container = typeof _ === "function" ? _ : constant$7(_), drag) : container;
	    };
	
	    drag.subject = function(_) {
	      return arguments.length ? (subject = typeof _ === "function" ? _ : constant$7(_), drag) : subject;
	    };
	
	    drag.on = function() {
	      var value = listeners.on.apply(listeners, arguments);
	      return value === listeners ? drag : value;
	    };
	
	    return drag;
	  }
	
	  function constant$8(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function x$4(d) {
	    return d[0];
	  }
	
	  function y$4(d) {
	    return d[1];
	  }
	
	  function RedBlackTree() {
	    this._ = null; 
	  }
	
	  function RedBlackNode(node) {
	    node.U = 
	    node.C = 
	    node.L = 
	    node.R = 
	    node.P = 
	    node.N = null; 
	  }
	
	  RedBlackTree.prototype = {
	    constructor: RedBlackTree,
	
	    insert: function(after, node) {
	      var parent, grandpa, uncle;
	
	      if (after) {
	        node.P = after;
	        node.N = after.N;
	        if (after.N) after.N.P = node;
	        after.N = node;
	        if (after.R) {
	          after = after.R;
	          while (after.L) after = after.L;
	          after.L = node;
	        } else {
	          after.R = node;
	        }
	        parent = after;
	      } else if (this._) {
	        after = RedBlackFirst(this._);
	        node.P = null;
	        node.N = after;
	        after.P = after.L = node;
	        parent = after;
	      } else {
	        node.P = node.N = null;
	        this._ = node;
	        parent = null;
	      }
	      node.L = node.R = null;
	      node.U = parent;
	      node.C = true;
	
	      after = node;
	      while (parent && parent.C) {
	        grandpa = parent.U;
	        if (parent === grandpa.L) {
	          uncle = grandpa.R;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.R) {
	              RedBlackRotateLeft(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            RedBlackRotateRight(this, grandpa);
	          }
	        } else {
	          uncle = grandpa.L;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.L) {
	              RedBlackRotateRight(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            RedBlackRotateLeft(this, grandpa);
	          }
	        }
	        parent = after.U;
	      }
	      this._.C = false;
	    },
	
	    remove: function(node) {
	      if (node.N) node.N.P = node.P;
	      if (node.P) node.P.N = node.N;
	      node.N = node.P = null;
	
	      var parent = node.U,
	          sibling,
	          left = node.L,
	          right = node.R,
	          next,
	          red;
	
	      if (!left) next = right;
	      else if (!right) next = left;
	      else next = RedBlackFirst(right);
	
	      if (parent) {
	        if (parent.L === node) parent.L = next;
	        else parent.R = next;
	      } else {
	        this._ = next;
	      }
	
	      if (left && right) {
	        red = next.C;
	        next.C = node.C;
	        next.L = left;
	        left.U = next;
	        if (next !== right) {
	          parent = next.U;
	          next.U = node.U;
	          node = next.R;
	          parent.L = node;
	          next.R = right;
	          right.U = next;
	        } else {
	          next.U = parent;
	          parent = next;
	          node = next.R;
	        }
	      } else {
	        red = node.C;
	        node = next;
	      }
	
	      if (node) node.U = parent;
	      if (red) return;
	      if (node && node.C) { node.C = false; return; }
	
	      do {
	        if (node === this._) break;
	        if (node === parent.L) {
	          sibling = parent.R;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            RedBlackRotateLeft(this, parent);
	            sibling = parent.R;
	          }
	          if ((sibling.L && sibling.L.C)
	              || (sibling.R && sibling.R.C)) {
	            if (!sibling.R || !sibling.R.C) {
	              sibling.L.C = false;
	              sibling.C = true;
	              RedBlackRotateRight(this, sibling);
	              sibling = parent.R;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.R.C = false;
	            RedBlackRotateLeft(this, parent);
	            node = this._;
	            break;
	          }
	        } else {
	          sibling = parent.L;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            RedBlackRotateRight(this, parent);
	            sibling = parent.L;
	          }
	          if ((sibling.L && sibling.L.C)
	            || (sibling.R && sibling.R.C)) {
	            if (!sibling.L || !sibling.L.C) {
	              sibling.R.C = false;
	              sibling.C = true;
	              RedBlackRotateLeft(this, sibling);
	              sibling = parent.L;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.L.C = false;
	            RedBlackRotateRight(this, parent);
	            node = this._;
	            break;
	          }
	        }
	        sibling.C = true;
	        node = parent;
	        parent = parent.U;
	      } while (!node.C);
	
	      if (node) node.C = false;
	    }
	  };
	
	  function RedBlackRotateLeft(tree, node) {
	    var p = node,
	        q = node.R,
	        parent = p.U;
	
	    if (parent) {
	      if (parent.L === p) parent.L = q;
	      else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	
	    q.U = parent;
	    p.U = q;
	    p.R = q.L;
	    if (p.R) p.R.U = p;
	    q.L = p;
	  }
	
	  function RedBlackRotateRight(tree, node) {
	    var p = node,
	        q = node.L,
	        parent = p.U;
	
	    if (parent) {
	      if (parent.L === p) parent.L = q;
	      else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	
	    q.U = parent;
	    p.U = q;
	    p.L = q.R;
	    if (p.L) p.L.U = p;
	    q.R = p;
	  }
	
	  function RedBlackFirst(node) {
	    while (node.L) node = node.L;
	    return node;
	  }
	
	  function createEdge(left, right, v0, v1) {
	    var edge = [null, null],
	        index = edges.push(edge) - 1;
	    edge.left = left;
	    edge.right = right;
	    if (v0) setEdgeEnd(edge, left, right, v0);
	    if (v1) setEdgeEnd(edge, right, left, v1);
	    cells[left.index].halfedges.push(index);
	    cells[right.index].halfedges.push(index);
	    return edge;
	  }
	
	  function createBorderEdge(left, v0, v1) {
	    var edge = [v0, v1];
	    edge.left = left;
	    return edge;
	  }
	
	  function setEdgeEnd(edge, left, right, vertex) {
	    if (!edge[0] && !edge[1]) {
	      edge[0] = vertex;
	      edge.left = left;
	      edge.right = right;
	    } else if (edge.left === right) {
	      edge[1] = vertex;
	    } else {
	      edge[0] = vertex;
	    }
	  }
	
	  
	  function clipEdge(edge, x0, y0, x1, y1) {
	    var a = edge[0],
	        b = edge[1],
	        ax = a[0],
	        ay = a[1],
	        bx = b[0],
	        by = b[1],
	        t0 = 0,
	        t1 = 1,
	        dx = bx - ax,
	        dy = by - ay,
	        r;
	
	    r = x0 - ax;
	    if (!dx && r > 0) return;
	    r /= dx;
	    if (dx < 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    } else if (dx > 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    }
	
	    r = x1 - ax;
	    if (!dx && r < 0) return;
	    r /= dx;
	    if (dx < 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    } else if (dx > 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    }
	
	    r = y0 - ay;
	    if (!dy && r > 0) return;
	    r /= dy;
	    if (dy < 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    } else if (dy > 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    }
	
	    r = y1 - ay;
	    if (!dy && r < 0) return;
	    r /= dy;
	    if (dy < 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    } else if (dy > 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    }
	
	    if (!(t0 > 0) && !(t1 < 1)) return true; 
	
	    if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
	    if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
	    return true;
	  }
	
	  function connectEdge(edge, x0, y0, x1, y1) {
	    var v1 = edge[1];
	    if (v1) return true;
	
	    var v0 = edge[0],
	        left = edge.left,
	        right = edge.right,
	        lx = left[0],
	        ly = left[1],
	        rx = right[0],
	        ry = right[1],
	        fx = (lx + rx) / 2,
	        fy = (ly + ry) / 2,
	        fm,
	        fb;
	
	    if (ry === ly) {
	      if (fx < x0 || fx >= x1) return;
	      if (lx > rx) {
	        if (!v0) v0 = [fx, y0];
	        else if (v0[1] >= y1) return;
	        v1 = [fx, y1];
	      } else {
	        if (!v0) v0 = [fx, y1];
	        else if (v0[1] < y0) return;
	        v1 = [fx, y0];
	      }
	    } else {
	      fm = (lx - rx) / (ry - ly);
	      fb = fy - fm * fx;
	      if (fm < -1 || fm > 1) {
	        if (lx > rx) {
	          if (!v0) v0 = [(y0 - fb) / fm, y0];
	          else if (v0[1] >= y1) return;
	          v1 = [(y1 - fb) / fm, y1];
	        } else {
	          if (!v0) v0 = [(y1 - fb) / fm, y1];
	          else if (v0[1] < y0) return;
	          v1 = [(y0 - fb) / fm, y0];
	        }
	      } else {
	        if (ly < ry) {
	          if (!v0) v0 = [x0, fm * x0 + fb];
	          else if (v0[0] >= x1) return;
	          v1 = [x1, fm * x1 + fb];
	        } else {
	          if (!v0) v0 = [x1, fm * x1 + fb];
	          else if (v0[0] < x0) return;
	          v1 = [x0, fm * x0 + fb];
	        }
	      }
	    }
	
	    edge[0] = v0;
	    edge[1] = v1;
	    return true;
	  }
	
	  function clipEdges(x0, y0, x1, y1) {
	    var i = edges.length,
	        edge;
	
	    while (i--) {
	      if (!connectEdge(edge = edges[i], x0, y0, x1, y1)
	          || !clipEdge(edge, x0, y0, x1, y1)
	          || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3
	              || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {
	        delete edges[i];
	      }
	    }
	  }
	
	  function createCell(site) {
	    return cells[site.index] = {
	      site: site,
	      halfedges: []
	    };
	  }
	
	  function cellHalfedgeAngle(cell, edge) {
	    var site = cell.site,
	        va = edge.left,
	        vb = edge.right;
	    if (site === vb) vb = va, va = site;
	    if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
	    if (site === va) va = edge[1], vb = edge[0];
	    else va = edge[0], vb = edge[1];
	    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
	  }
	
	  function cellHalfedgeStart(cell, edge) {
	    return edge[+(edge.left !== cell.site)];
	  }
	
	  function cellHalfedgeEnd(cell, edge) {
	    return edge[+(edge.left === cell.site)];
	  }
	
	  function sortCellHalfedges() {
	    for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {
	      if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {
	        var index = new Array(m),
	            array = new Array(m);
	        for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);
	        index.sort(function(i, j) { return array[j] - array[i]; });
	        for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];
	        for (j = 0; j < m; ++j) halfedges[j] = array[j];
	      }
	    }
	  }
	
	  function clipCells(x0, y0, x1, y1) {
	    var nCells = cells.length,
	        iCell,
	        cell,
	        site,
	        iHalfedge,
	        halfedges,
	        nHalfedges,
	        start,
	        startX,
	        startY,
	        end,
	        endX,
	        endY,
	        cover = true;
	
	    for (iCell = 0; iCell < nCells; ++iCell) {
	      if (cell = cells[iCell]) {
	        site = cell.site;
	        halfedges = cell.halfedges;
	        iHalfedge = halfedges.length;
	
	        
	        while (iHalfedge--) {
	          if (!edges[halfedges[iHalfedge]]) {
	            halfedges.splice(iHalfedge, 1);
	          }
	        }
	
	        
	        iHalfedge = 0, nHalfedges = halfedges.length;
	        while (iHalfedge < nHalfedges) {
	          end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
	          start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];
	          if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {
	            halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,
	                Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]
	                : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]
	                : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]
	                : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]
	                : null)) - 1);
	            ++nHalfedges;
	          }
	        }
	
	        if (nHalfedges) cover = false;
	      }
	    }
	
	    
	    
	    if (cover) {
	      var dx, dy, d2, dc = Infinity;
	
	      for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
	        if (cell = cells[iCell]) {
	          site = cell.site;
	          dx = site[0] - x0;
	          dy = site[1] - y0;
	          d2 = dx * dx + dy * dy;
	          if (d2 < dc) dc = d2, cover = cell;
	        }
	      }
	
	      if (cover) {
	        var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];
	        cover.halfedges.push(
	          edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,
	          edges.push(createBorderEdge(site, v01, v11)) - 1,
	          edges.push(createBorderEdge(site, v11, v10)) - 1,
	          edges.push(createBorderEdge(site, v10, v00)) - 1
	        );
	      }
	    }
	
	    
	    for (iCell = 0; iCell < nCells; ++iCell) {
	      if (cell = cells[iCell]) {
	        if (!cell.halfedges.length) {
	          delete cells[iCell];
	        }
	      }
	    }
	  }
	
	  var circlePool = [];
	
	  var firstCircle;
	
	  function Circle() {
	    RedBlackNode(this);
	    this.x =
	    this.y =
	    this.arc =
	    this.site =
	    this.cy = null;
	  }
	
	  function attachCircle(arc) {
	    var lArc = arc.P,
	        rArc = arc.N;
	
	    if (!lArc || !rArc) return;
	
	    var lSite = lArc.site,
	        cSite = arc.site,
	        rSite = rArc.site;
	
	    if (lSite === rSite) return;
	
	    var bx = cSite[0],
	        by = cSite[1],
	        ax = lSite[0] - bx,
	        ay = lSite[1] - by,
	        cx = rSite[0] - bx,
	        cy = rSite[1] - by;
	
	    var d = 2 * (ax * cy - ay * cx);
	    if (d >= -epsilon2$1) return;
	
	    var ha = ax * ax + ay * ay,
	        hc = cx * cx + cy * cy,
	        x = (cy * ha - ay * hc) / d,
	        y = (ax * hc - cx * ha) / d;
	
	    var circle = circlePool.pop() || new Circle;
	    circle.arc = arc;
	    circle.site = cSite;
	    circle.x = x + bx;
	    circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); 
	
	    arc.circle = circle;
	
	    var before = null,
	        node = circles._;
	
	    while (node) {
	      if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {
	        if (node.L) node = node.L;
	        else { before = node.P; break; }
	      } else {
	        if (node.R) node = node.R;
	        else { before = node; break; }
	      }
	    }
	
	    circles.insert(before, circle);
	    if (!before) firstCircle = circle;
	  }
	
	  function detachCircle(arc) {
	    var circle = arc.circle;
	    if (circle) {
	      if (!circle.P) firstCircle = circle.N;
	      circles.remove(circle);
	      circlePool.push(circle);
	      RedBlackNode(circle);
	      arc.circle = null;
	    }
	  }
	
	  var beachPool = [];
	
	  function Beach() {
	    RedBlackNode(this);
	    this.edge =
	    this.site =
	    this.circle = null;
	  }
	
	  function createBeach(site) {
	    var beach = beachPool.pop() || new Beach;
	    beach.site = site;
	    return beach;
	  }
	
	  function detachBeach(beach) {
	    detachCircle(beach);
	    beaches.remove(beach);
	    beachPool.push(beach);
	    RedBlackNode(beach);
	  }
	
	  function removeBeach(beach) {
	    var circle = beach.circle,
	        x = circle.x,
	        y = circle.cy,
	        vertex = [x, y],
	        previous = beach.P,
	        next = beach.N,
	        disappearing = [beach];
	
	    detachBeach(beach);
	
	    var lArc = previous;
	    while (lArc.circle
	        && Math.abs(x - lArc.circle.x) < epsilon$3
	        && Math.abs(y - lArc.circle.cy) < epsilon$3) {
	      previous = lArc.P;
	      disappearing.unshift(lArc);
	      detachBeach(lArc);
	      lArc = previous;
	    }
	
	    disappearing.unshift(lArc);
	    detachCircle(lArc);
	
	    var rArc = next;
	    while (rArc.circle
	        && Math.abs(x - rArc.circle.x) < epsilon$3
	        && Math.abs(y - rArc.circle.cy) < epsilon$3) {
	      next = rArc.N;
	      disappearing.push(rArc);
	      detachBeach(rArc);
	      rArc = next;
	    }
	
	    disappearing.push(rArc);
	    detachCircle(rArc);
	
	    var nArcs = disappearing.length,
	        iArc;
	    for (iArc = 1; iArc < nArcs; ++iArc) {
	      rArc = disappearing[iArc];
	      lArc = disappearing[iArc - 1];
	      setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
	    }
	
	    lArc = disappearing[0];
	    rArc = disappearing[nArcs - 1];
	    rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);
	
	    attachCircle(lArc);
	    attachCircle(rArc);
	  }
	
	  function addBeach(site) {
	    var x = site[0],
	        directrix = site[1],
	        lArc,
	        rArc,
	        dxl,
	        dxr,
	        node = beaches._;
	
	    while (node) {
	      dxl = leftBreakPoint(node, directrix) - x;
	      if (dxl > epsilon$3) node = node.L; else {
	        dxr = x - rightBreakPoint(node, directrix);
	        if (dxr > epsilon$3) {
	          if (!node.R) {
	            lArc = node;
	            break;
	          }
	          node = node.R;
	        } else {
	          if (dxl > -epsilon$3) {
	            lArc = node.P;
	            rArc = node;
	          } else if (dxr > -epsilon$3) {
	            lArc = node;
	            rArc = node.N;
	          } else {
	            lArc = rArc = node;
	          }
	          break;
	        }
	      }
	    }
	
	    createCell(site);
	    var newArc = createBeach(site);
	    beaches.insert(lArc, newArc);
	
	    if (!lArc && !rArc) return;
	
	    if (lArc === rArc) {
	      detachCircle(lArc);
	      rArc = createBeach(lArc.site);
	      beaches.insert(newArc, rArc);
	      newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);
	      attachCircle(lArc);
	      attachCircle(rArc);
	      return;
	    }
	
	    if (!rArc) { 
	      newArc.edge = createEdge(lArc.site, newArc.site);
	      return;
	    }
	
	    
	    detachCircle(lArc);
	    detachCircle(rArc);
	
	    var lSite = lArc.site,
	        ax = lSite[0],
	        ay = lSite[1],
	        bx = site[0] - ax,
	        by = site[1] - ay,
	        rSite = rArc.site,
	        cx = rSite[0] - ax,
	        cy = rSite[1] - ay,
	        d = 2 * (bx * cy - by * cx),
	        hb = bx * bx + by * by,
	        hc = cx * cx + cy * cy,
	        vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
	
	    setEdgeEnd(rArc.edge, lSite, rSite, vertex);
	    newArc.edge = createEdge(lSite, site, null, vertex);
	    rArc.edge = createEdge(site, rSite, null, vertex);
	    attachCircle(lArc);
	    attachCircle(rArc);
	  }
	
	  function leftBreakPoint(arc, directrix) {
	    var site = arc.site,
	        rfocx = site[0],
	        rfocy = site[1],
	        pby2 = rfocy - directrix;
	
	    if (!pby2) return rfocx;
	
	    var lArc = arc.P;
	    if (!lArc) return -Infinity;
	
	    site = lArc.site;
	    var lfocx = site[0],
	        lfocy = site[1],
	        plby2 = lfocy - directrix;
	
	    if (!plby2) return lfocx;
	
	    var hl = lfocx - rfocx,
	        aby2 = 1 / pby2 - 1 / plby2,
	        b = hl / plby2;
	
	    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
	
	    return (rfocx + lfocx) / 2;
	  }
	
	  function rightBreakPoint(arc, directrix) {
	    var rArc = arc.N;
	    if (rArc) return leftBreakPoint(rArc, directrix);
	    var site = arc.site;
	    return site[1] === directrix ? site[0] : Infinity;
	  }
	
	  var epsilon$3 = 1e-6;
	  var epsilon2$1 = 1e-12;
	  var beaches;
	  var cells;
	  var circles;
	  var edges;
	
	  function triangleArea(a, b, c) {
	    return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
	  }
	
	  function lexicographic(a, b) {
	    return b[1] - a[1]
	        || b[0] - a[0];
	  }
	
	  function Diagram(sites, extent) {
	    var site = sites.sort(lexicographic).pop(),
	        x,
	        y,
	        circle;
	
	    edges = [];
	    cells = new Array(sites.length);
	    beaches = new RedBlackTree;
	    circles = new RedBlackTree;
	
	    while (true) {
	      circle = firstCircle;
	      if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {
	        if (site[0] !== x || site[1] !== y) {
	          addBeach(site);
	          x = site[0], y = site[1];
	        }
	        site = sites.pop();
	      } else if (circle) {
	        removeBeach(circle.arc);
	      } else {
	        break;
	      }
	    }
	
	    sortCellHalfedges();
	
	    if (extent) {
	      var x0 = +extent[0][0],
	          y0 = +extent[0][1],
	          x1 = +extent[1][0],
	          y1 = +extent[1][1];
	      clipEdges(x0, y0, x1, y1);
	      clipCells(x0, y0, x1, y1);
	    }
	
	    this.edges = edges;
	    this.cells = cells;
	
	    beaches =
	    circles =
	    edges =
	    cells = null;
	  }
	
	  Diagram.prototype = {
	    constructor: Diagram,
	
	    polygons: function() {
	      var edges = this.edges;
	
	      return this.cells.map(function(cell) {
	        var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });
	        polygon.data = cell.site.data;
	        return polygon;
	      });
	    },
	
	    triangles: function() {
	      var triangles = [],
	          edges = this.edges;
	
	      this.cells.forEach(function(cell, i) {
	        var site = cell.site,
	            halfedges = cell.halfedges,
	            j = -1,
	            m = halfedges.length,
	            s0,
	            e1 = edges[halfedges[m - 1]],
	            s1 = e1.left === site ? e1.right : e1.left;
	
	        while (++j < m) {
	          s0 = s1;
	          e1 = edges[halfedges[j]];
	          s1 = e1.left === site ? e1.right : e1.left;
	          if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
	            triangles.push([site.data, s0.data, s1.data]);
	          }
	        }
	      });
	
	      return triangles;
	    },
	
	    links: function() {
	      return this.edges.filter(function(edge) {
	        return edge.right;
	      }).map(function(edge) {
	        return {
	          source: edge.left.data,
	          target: edge.right.data
	        };
	      });
	    }
	  }
	
	  function voronoi() {
	    var x = x$4,
	        y = y$4,
	        extent = null;
	
	    function voronoi(data) {
	      return new Diagram(data.map(function(d, i) {
	        var s = [Math.round(x(d, i, data) / epsilon$3) * epsilon$3, Math.round(y(d, i, data) / epsilon$3) * epsilon$3];
	        s.index = i;
	        s.data = d;
	        return s;
	      }), extent);
	    }
	
	    voronoi.polygons = function(data) {
	      return voronoi(data).polygons();
	    };
	
	    voronoi.links = function(data) {
	      return voronoi(data).links();
	    };
	
	    voronoi.triangles = function(data) {
	      return voronoi(data).triangles();
	    };
	
	    voronoi.x = function(_) {
	      return arguments.length ? (x = typeof _ === "function" ? _ : constant$8(+_), voronoi) : x;
	    };
	
	    voronoi.y = function(_) {
	      return arguments.length ? (y = typeof _ === "function" ? _ : constant$8(+_), voronoi) : y;
	    };
	
	    voronoi.extent = function(_) {
	      return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
	    };
	
	    voronoi.size = function(_) {
	      return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0], extent[1][1]];
	    };
	
	    return voronoi;
	  }
	
	  function constant$9(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function ZoomEvent(target, type, transform) {
	    this.target = target;
	    this.type = type;
	    this.transform = transform;
	  }
	
	  function Transform(k, x, y) {
	    this.k = k;
	    this.x = x;
	    this.y = y;
	  }
	
	  Transform.prototype = {
	    constructor: Transform,
	    scale: function(k) {
	      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
	    },
	    translate: function(x, y) {
	      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
	    },
	    apply: function(point) {
	      return [point[0] * this.k + this.x, point[1] * this.k + this.y];
	    },
	    applyX: function(x) {
	      return x * this.k + this.x;
	    },
	    applyY: function(y) {
	      return y * this.k + this.y;
	    },
	    invert: function(location) {
	      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
	    },
	    invertX: function(x) {
	      return (x - this.x) / this.k;
	    },
	    invertY: function(y) {
	      return (y - this.y) / this.k;
	    },
	    rescaleX: function(x) {
	      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
	    },
	    rescaleY: function(y) {
	      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
	    },
	    toString: function() {
	      return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
	    }
	  };
	
	  var identity$6 = new Transform(1, 0, 0);
	
	  transform.prototype = Transform.prototype;
	
	  function transform(node) {
	    return node.__zoom || identity$6;
	  }
	
	  function nopropagation$1() {
	    exports.event.stopImmediatePropagation();
	  }
	
	  function noevent$1() {
	    exports.event.preventDefault();
	    exports.event.stopImmediatePropagation();
	  }
	
	  
	  function defaultFilter$1() {
	    return !exports.event.button;
	  }
	
	  function defaultExtent() {
	    var e = this, w, h;
	    if (e instanceof SVGElement) {
	      e = e.ownerSVGElement || e;
	      w = e.width.baseVal.value;
	      h = e.height.baseVal.value;
	    } else {
	      w = e.clientWidth;
	      h = e.clientHeight;
	    }
	    return [[0, 0], [w, h]];
	  }
	
	  function defaultTransform() {
	    return this.__zoom || identity$6;
	  }
	
	  function zoom() {
	    var filter = defaultFilter$1,
	        extent = defaultExtent,
	        k0 = 0,
	        k1 = Infinity,
	        x0 = -k1,
	        x1 = k1,
	        y0 = x0,
	        y1 = x1,
	        duration = 250,
	        gestures = [],
	        listeners = dispatch("start", "zoom", "end"),
	        mousemoving,
	        mousePoint,
	        mouseLocation,
	        touchstarting,
	        touchending,
	        touchDelay = 500,
	        wheelTimer,
	        wheelDelay = 150;
	
	    function zoom(selection) {
	      selection
	          .on("wheel.zoom", wheeled)
	          .on("mousedown.zoom", mousedowned)
	          .on("dblclick.zoom", dblclicked)
	          .on("touchstart.zoom", touchstarted)
	          .on("touchmove.zoom", touchmoved)
	          .on("touchend.zoom touchcancel.zoom", touchended)
	          .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)")
	          .property("__zoom", defaultTransform);
	    }
	
	    zoom.transform = function(collection, transform) {
	      var selection = collection.selection ? collection.selection() : collection;
	      selection.property("__zoom", defaultTransform);
	      if (collection !== selection) {
	        schedule(collection, transform);
	      } else {
	        selection.interrupt().each(function() {
	          gesture(this, arguments)
	              .start()
	              .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)
	              .end();
	        });
	      }
	    };
	
	    zoom.scaleBy = function(selection, k) {
	      zoom.scaleTo(selection, function() {
	        var k0 = this.__zoom.k,
	            k1 = typeof k === "function" ? k.apply(this, arguments) : k;
	        return k0 * k1;
	      });
	    };
	
	    zoom.scaleTo = function(selection, k) {
	      zoom.transform(selection, function() {
	        var e = extent.apply(this, arguments),
	            t0 = this.__zoom,
	            p0 = centroid(e),
	            p1 = t0.invert(p0),
	            k1 = typeof k === "function" ? k.apply(this, arguments) : k;
	        return constrain(translate(scale(t0, k1), p0, p1), e);
	      });
	    };
	
	    zoom.translateBy = function(selection, x, y) {
	      zoom.transform(selection, function() {
	        return constrain(this.__zoom.translate(
	          typeof x === "function" ? x.apply(this, arguments) : x,
	          typeof y === "function" ? y.apply(this, arguments) : y
	        ), extent.apply(this, arguments));
	      });
	    };
	
	    function scale(transform, k) {
	      k = Math.max(k0, Math.min(k1, k));
	      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
	    }
	
	    function translate(transform, p0, p1) {
	      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
	      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
	    }
	
	    function constrain(transform, extent) {
	      var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),
	          dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);
	      return dx || dy ? transform.translate(dx, dy) : transform;
	    }
	
	    function centroid(extent) {
	      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
	    }
	
	    function schedule(transition, transform, center) {
	      transition
	          .on("start.zoom", function() { gesture(this, arguments).start(); })
	          .on("interrupt.zoom end.zoom", function() { gesture(this, arguments).end(); })
	          .tween("zoom", function() {
	            var that = this,
	                args = arguments,
	                g = gesture(that, args),
	                e = extent.apply(that, args),
	                p = center || centroid(e),
	                w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
	                a = that.__zoom,
	                b = typeof transform === "function" ? transform.apply(that, args) : transform,
	                i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
	            return function(t) {
	              if (t === 1) t = b; 
	              else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }
	              g.zoom(null, t);
	            };
	          });
	    }
	
	    function gesture(that, args) {
	      for (var i = 0, n = gestures.length, g; i < n; ++i) {
	        if ((g = gestures[i]).that === that) {
	          return g;
	        }
	      }
	      return new Gesture(that, args);
	    }
	
	    function Gesture(that, args) {
	      this.that = that;
	      this.args = args;
	      this.index = -1;
	      this.active = 0;
	    }
	
	    Gesture.prototype = {
	      start: function() {
	        if (++this.active === 1) {
	          this.index = gestures.push(this) - 1;
	          this.emit("start");
	        }
	        return this;
	      },
	      zoom: function(key, transform) {
	        if (mousePoint && key !== "mouse") mouseLocation = transform.invert(mousePoint);
	        if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
	        if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
	        this.that.__zoom = transform;
	        this.emit("zoom");
	        return this;
	      },
	      end: function() {
	        if (--this.active === 0) {
	          gestures.splice(this.index, 1);
	          mousePoint = mouseLocation = null;
	          this.index = -1;
	          this.emit("end");
	        }
	        return this;
	      },
	      emit: function(type) {
	        customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
	      }
	    };
	
	    function wheeled() {
	      if (!filter.apply(this, arguments)) return;
	      var g = gesture(this, arguments),
	          t = this.__zoom,
	          k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500)));
	
	      
	      
	      if (wheelTimer) {
	        var point = mouse(this);
	        if (mousePoint[0] !== point[0] || mousePoint[1] !== point[1]) {
	          mouseLocation = t.invert(mousePoint = point);
	        }
	        clearTimeout(wheelTimer);
	      }
	
	      
	      else if (t.k === k) return;
	
	      
	      else {
	        g.extent = extent.apply(this, arguments);
	        mouseLocation = t.invert(mousePoint = mouse(this));
	        interrupt(this);
	        g.start();
	      }
	
	      noevent$1();
	      wheelTimer = setTimeout(wheelidled, wheelDelay);
	      g.zoom("mouse", constrain(translate(scale(t, k), mousePoint, mouseLocation), g.extent));
	
	      function wheelidled() {
	        wheelTimer = null;
	        g.end();
	      }
	    }
	
	    function mousedowned() {
	      if (touchending || !filter.apply(this, arguments)) return;
	      var g = gesture(this, arguments),
	          v = select(exports.event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true);
	
	      dragDisable(exports.event.view);
	      nopropagation$1();
	      mousemoving = false;
	      g.extent = extent.apply(this, arguments);
	      mouseLocation = this.__zoom.invert(mousePoint = mouse(this));
	      interrupt(this);
	      g.start();
	
	      function mousemoved() {
	        noevent$1();
	        mousemoving = true;
	        g.zoom("mouse", constrain(translate(g.that.__zoom, mousePoint = mouse(g.that), mouseLocation), g.extent));
	      }
	
	      function mouseupped() {
	        v.on("mousemove.zoom mouseup.zoom", null);
	        dragEnable(exports.event.view, mousemoving);
	        noevent$1();
	        g.end();
	      }
	    }
	
	    function dblclicked() {
	      if (!filter.apply(this, arguments)) return;
	      var t0 = this.__zoom,
	          p0 = mouse(this),
	          p1 = t0.invert(p0),
	          k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),
	          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));
	
	      noevent$1();
	      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);
	      else select(this).call(zoom.transform, t1);
	    }
	
	    function touchstarted() {
	      if (!filter.apply(this, arguments)) return;
	      var g = gesture(this, arguments),
	          touches = exports.event.changedTouches,
	          n = touches.length, i, t, p;
	
	      nopropagation$1();
	      for (i = 0; i < n; ++i) {
	        t = touches[i], p = touch(this, touches, t.identifier);
	        p = [p, this.__zoom.invert(p), t.identifier];
	        if (!g.touch0) g.touch0 = p;
	        else if (!g.touch1) g.touch1 = p;
	      }
	      if (touchstarting) {
	        touchstarting = clearTimeout(touchstarting);
	        if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);
	      }
	      if (exports.event.touches.length === n) {
	        touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);
	        interrupt(this);
	        g.extent = extent.apply(this, arguments);
	        g.start();
	      }
	    }
	
	    function touchmoved() {
	      var g = gesture(this, arguments),
	          touches = exports.event.changedTouches,
	          n = touches.length, i, t, p, l;
	
	      noevent$1();
	      if (touchstarting) touchstarting = clearTimeout(touchstarting);
	      for (i = 0; i < n; ++i) {
	        t = touches[i], p = touch(this, touches, t.identifier);
	        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
	        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
	      }
	      t = g.that.__zoom;
	      if (g.touch1) {
	        var p0 = g.touch0[0], l0 = g.touch0[1],
	            p1 = g.touch1[0], l1 = g.touch1[1],
	            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
	            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
	        t = scale(t, Math.sqrt(dp / dl));
	        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
	        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
	      }
	      else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
	      else return;
	      g.zoom("touch", constrain(translate(t, p, l), g.extent));
	    }
	
	    function touchended() {
	      var g = gesture(this, arguments),
	          touches = exports.event.changedTouches,
	          n = touches.length, i, t;
	
	      nopropagation$1();
	      if (touchending) clearTimeout(touchending);
	      touchending = setTimeout(function() { touchending = null; }, touchDelay);
	      for (i = 0; i < n; ++i) {
	        t = touches[i];
	        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
	        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
	      }
	      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
	      if (!g.touch0) g.end();
	    }
	
	    zoom.filter = function(_) {
	      return arguments.length ? (filter = typeof _ === "function" ? _ : constant$9(!!_), zoom) : filter;
	    };
	
	    zoom.extent = function(_) {
	      return arguments.length ? (extent = typeof _ === "function" ? _ : constant$9([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
	    };
	
	    zoom.scaleExtent = function(_) {
	      return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];
	    };
	
	    zoom.translateExtent = function(_) {
	      return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];
	    };
	
	    zoom.duration = function(_) {
	      return arguments.length ? (duration = +_, zoom) : duration;
	    };
	
	    zoom.on = function() {
	      var value = listeners.on.apply(listeners, arguments);
	      return value === listeners ? zoom : value;
	    };
	
	    return zoom;
	  }
	
	  function constant$10(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function BrushEvent(target, type, selection) {
	    this.target = target;
	    this.type = type;
	    this.selection = selection;
	  }
	
	  function nopropagation$2() {
	    exports.event.stopImmediatePropagation();
	  }
	
	  function noevent$2() {
	    exports.event.preventDefault();
	    exports.event.stopImmediatePropagation();
	  }
	
	  var MODE_DRAG = {name: "drag"};
	  var MODE_SPACE = {name: "space"};
	  var MODE_HANDLE = {name: "handle"};
	  var MODE_CENTER = {name: "center"};
	  var X = {
	    name: "x",
	    handles: ["e", "w"].map(type$1),
	    input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },
	    output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }
	  };
	
	  var Y = {
	    name: "y",
	    handles: ["n", "s"].map(type$1),
	    input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },
	    output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }
	  };
	
	  var XY = {
	    name: "xy",
	    handles: ["n", "e", "s", "w", "nw", "ne", "se", "sw"].map(type$1),
	    input: function(xy) { return xy; },
	    output: function(xy) { return xy; }
	  };
	
	  var cursors = {
	    overlay: "crosshair",
	    selection: "move",
	    n: "ns-resize",
	    e: "ew-resize",
	    s: "ns-resize",
	    w: "ew-resize",
	    nw: "nwse-resize",
	    ne: "nesw-resize",
	    se: "nwse-resize",
	    sw: "nesw-resize"
	  };
	
	  var flipX = {
	    e: "w",
	    w: "e",
	    nw: "ne",
	    ne: "nw",
	    se: "sw",
	    sw: "se"
	  };
	
	  var flipY = {
	    n: "s",
	    s: "n",
	    nw: "sw",
	    ne: "se",
	    se: "ne",
	    sw: "nw"
	  };
	
	  var signsX = {
	    overlay: +1,
	    selection: +1,
	    n: null,
	    e: +1,
	    s: null,
	    w: -1,
	    nw: -1,
	    ne: +1,
	    se: +1,
	    sw: -1
	  };
	
	  var signsY = {
	    overlay: +1,
	    selection: +1,
	    n: -1,
	    e: null,
	    s: +1,
	    w: null,
	    nw: -1,
	    ne: -1,
	    se: +1,
	    sw: +1
	  };
	
	  function type$1(t) {
	    return {type: t};
	  }
	
	  
	  function defaultFilter$2() {
	    return !exports.event.button;
	  }
	
	  function defaultExtent$1() {
	    var svg = this.ownerSVGElement || this;
	    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
	  }
	
	  
	  function local$1(node) {
	    while (!node.__brush) if (!(node = node.parentNode)) return;
	    return node.__brush;
	  }
	
	  function empty$1(extent) {
	    return extent[0][0] === extent[1][0]
	        || extent[0][1] === extent[1][1];
	  }
	
	  function brushSelection(node) {
	    var state = node.__brush;
	    return state ? state.dim.output(state.selection) : null;
	  }
	
	  function brushX() {
	    return brush$1(X);
	  }
	
	  function brushY() {
	    return brush$1(Y);
	  }
	
	  function brush() {
	    return brush$1(XY);
	  }
	
	  function brush$1(dim) {
	    var extent = defaultExtent$1,
	        filter = defaultFilter$2,
	        listeners = dispatch(brush, "start", "brush", "end"),
	        handleSize = 6,
	        touchending;
	
	    function brush(group) {
	      var overlay = group
	          .property("__brush", initialize)
	        .selectAll(".overlay")
	        .data([type$1("overlay")]);
	
	      overlay.enter().append("rect")
	          .attr("class", "overlay")
	          .attr("pointer-events", "all")
	          .attr("cursor", cursors.overlay)
	        .merge(overlay)
	          .each(function() {
	            var extent = local$1(this).extent;
	            select(this)
	                .attr("x", extent[0][0])
	                .attr("y", extent[0][1])
	                .attr("width", extent[1][0] - extent[0][0])
	                .attr("height", extent[1][1] - extent[0][1]);
	          });
	
	      group.selectAll(".selection")
	        .data([type$1("selection")])
	        .enter().append("rect")
	          .attr("class", "selection")
	          .attr("cursor", cursors.selection)
	          .attr("fill", "#777")
	          .attr("fill-opacity", 0.3)
	          .attr("stroke", "#fff")
	          .attr("shape-rendering", "crispEdges");
	
	      var handle = group.selectAll(".handle")
	        .data(dim.handles, function(d) { return d.type; });
	
	      handle.exit().remove();
	
	      handle.enter().append("rect")
	          .attr("class", function(d) { return "handle handle--" + d.type; })
	          .attr("cursor", function(d) { return cursors[d.type]; });
	
	      group
	          .each(redraw)
	          .attr("fill", "none")
	          .attr("pointer-events", "all")
	          .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)")
	          .on("mousedown.brush touchstart.brush", started);
	    }
	
	    brush.move = function(group, selection) {
	      if (group.selection) {
	        group
	            .on("start.brush", function() { emitter(this, arguments).beforestart().start(); })
	            .on("interrupt.brush end.brush", function() { emitter(this, arguments).end(); })
	            .tween("brush", function() {
	              var that = this,
	                  state = that.__brush,
	                  emit = emitter(that, arguments),
	                  selection0 = state.selection,
	                  selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
	                  i = interpolate(selection0, selection1);
	
	              function tween(t) {
	                state.selection = t === 1 && empty$1(selection1) ? null : i(t);
	                redraw.call(that);
	                emit.brush();
	              }
	
	              return selection0 && selection1 ? tween : tween(1);
	            });
	      } else {
	        group
	            .each(function() {
	              var that = this,
	                  args = arguments,
	                  state = that.__brush,
	                  selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
	                  emit = emitter(that, args).beforestart();
	
	              interrupt(that);
	              state.selection = selection1 == null || empty$1(selection1) ? null : selection1;
	              redraw.call(that);
	              emit.start().brush().end();
	            });
	      }
	    };
	
	    function redraw() {
	      var group = select(this),
	          selection = local$1(this).selection;
	
	      if (selection) {
	        group.selectAll(".selection")
	            .style("display", null)
	            .attr("x", selection[0][0])
	            .attr("y", selection[0][1])
	            .attr("width", selection[1][0] - selection[0][0])
	            .attr("height", selection[1][1] - selection[0][1]);
	
	        group.selectAll(".handle")
	            .style("display", null)
	            .attr("x", function(d) { return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })
	            .attr("y", function(d) { return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })
	            .attr("width", function(d) { return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })
	            .attr("height", function(d) { return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });
	      }
	
	      else {
	        group.selectAll(".selection,.handle")
	            .style("display", "none")
	            .attr("x", null)
	            .attr("y", null)
	            .attr("width", null)
	            .attr("height", null);
	      }
	    }
	
	    function emitter(that, args) {
	      return that.__brush.emitter || new Emitter(that, args);
	    }
	
	    function Emitter(that, args) {
	      this.that = that;
	      this.args = args;
	      this.state = that.__brush;
	      this.active = 0;
	    }
	
	    Emitter.prototype = {
	      beforestart: function() {
	        if (++this.active === 1) this.state.emitter = this, this.starting = true;
	        return this;
	      },
	      start: function() {
	        if (this.starting) this.starting = false, this.emit("start");
	        return this;
	      },
	      brush: function() {
	        this.emit("brush");
	        return this;
	      },
	      end: function() {
	        if (--this.active === 0) delete this.state.emitter, this.emit("end");
	        return this;
	      },
	      emit: function(type) {
	        customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
	      }
	    };
	
	    function started() {
	      if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }
	      else if (touchending) return;
	      if (!filter.apply(this, arguments)) return;
	
	      var that = this,
	          type = exports.event.target.__data__.type,
	          mode = (exports.event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),
	          signX = dim === Y ? null : signsX[type],
	          signY = dim === X ? null : signsY[type],
	          state = local$1(that),
	          extent = state.extent,
	          selection = state.selection,
	          W = extent[0][0], w0, w1,
	          N = extent[0][1], n0, n1,
	          E = extent[1][0], e0, e1,
	          S = extent[1][1], s0, s1,
	          dx,
	          dy,
	          moving,
	          shifting = signX && signY && exports.event.shiftKey,
	          lockX,
	          lockY,
	          point0 = mouse(that),
	          point = point0,
	          emit = emitter(that, arguments).beforestart();
	
	      if (type === "overlay") {
	        state.selection = selection = [
	          [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],
	          [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]
	        ];
	      } else {
	        w0 = selection[0][0];
	        n0 = selection[0][1];
	        e0 = selection[1][0];
	        s0 = selection[1][1];
	      }
	
	      w1 = w0;
	      n1 = n0;
	      e1 = e0;
	      s1 = s0;
	
	      var group = select(that)
	          .attr("pointer-events", "none");
	
	      var overlay = group.selectAll(".overlay")
	          .attr("cursor", cursors[type]);
	
	      if (exports.event.touches) {
	        group
	            .on("touchmove.brush", moved, true)
	            .on("touchend.brush touchcancel.brush", ended, true);
	      } else {
	        var view = select(exports.event.view)
	            .on("keydown.brush", keydowned, true)
	            .on("keyup.brush", keyupped, true)
	            .on("mousemove.brush", moved, true)
	            .on("mouseup.brush", ended, true);
	
	        dragDisable(exports.event.view);
	      }
	
	      nopropagation$2();
	      interrupt(that);
	      redraw.call(that);
	      emit.start();
	
	      function moved() {
	        var point1 = mouse(that);
	        if (shifting && !lockX && !lockY) {
	          if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;
	          else lockX = true;
	        }
	        point = point1;
	        moving = true;
	        noevent$2();
	        move();
	      }
	
	      function move() {
	        var t;
	
	        dx = point[0] - point0[0];
	        dy = point[1] - point0[1];
	
	        switch (mode) {
	          case MODE_SPACE:
	          case MODE_DRAG: {
	            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
	            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
	            break;
	          }
	          case MODE_HANDLE: {
	            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;
	            else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
	            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;
	            else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
	            break;
	          }
	          case MODE_CENTER: {
	            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
	            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
	            break;
	          }
	        }
	
	        if (e1 < w1) {
	          signX *= -1;
	          t = w0, w0 = e0, e0 = t;
	          t = w1, w1 = e1, e1 = t;
	          if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
	        }
	
	        if (s1 < n1) {
	          signY *= -1;
	          t = n0, n0 = s0, s0 = t;
	          t = n1, n1 = s1, s1 = t;
	          if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
	        }
	
	        selection = state.selection; 
	
	        if (lockX) w1 = selection[0][0], e1 = selection[1][0];
	        if (lockY) n1 = selection[0][1], s1 = selection[1][1];
	
	        if (selection[0][0] !== w1
	            || selection[0][1] !== n1
	            || selection[1][0] !== e1
	            || selection[1][1] !== s1) {
	          state.selection = [[w1, n1], [e1, s1]];
	          redraw.call(that);
	          emit.brush();
	        }
	      }
	
	      function ended() {
	        nopropagation$2();
	        if (exports.event.touches) {
	          if (exports.event.touches.length) return;
	          if (touchending) clearTimeout(touchending);
	          touchending = setTimeout(function() { touchending = null; }, 500); 
	          group.on("touchmove.brush touchend.brush touchcancel.brush", null);
	        } else {
	          dragEnable(exports.event.view, moving);
	          view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
	        }
	        group.attr("pointer-events", "all");
	        overlay.attr("cursor", cursors.overlay);
	        if (empty$1(selection)) state.selection = null, redraw.call(that);
	        emit.end();
	      }
	
	      function keydowned() {
	        switch (exports.event.keyCode) {
	          case 16: { 
	            shifting = signX && signY;
	            break;
	          }
	          case 18: { 
	            if (mode === MODE_HANDLE) {
	              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
	              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
	              mode = MODE_CENTER;
	              move();
	            }
	            break;
	          }
	          case 32: { 
	            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
	              if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;
	              if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;
	              mode = MODE_SPACE;
	              overlay.attr("cursor", cursors.selection);
	              move();
	            }
	            break;
	          }
	          default: return;
	        }
	        noevent$2();
	      }
	
	      function keyupped() {
	        switch (exports.event.keyCode) {
	          case 16: { 
	            if (shifting) {
	              lockX = lockY = shifting = false;
	              move();
	            }
	            break;
	          }
	          case 18: { 
	            if (mode === MODE_CENTER) {
	              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
	              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
	              mode = MODE_HANDLE;
	              move();
	            }
	            break;
	          }
	          case 32: { 
	            if (mode === MODE_SPACE) {
	              if (exports.event.altKey) {
	                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
	                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
	                mode = MODE_CENTER;
	              } else {
	                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
	                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
	                mode = MODE_HANDLE;
	              }
	              overlay.attr("cursor", cursors[type]);
	              move();
	            }
	            break;
	          }
	          default: return;
	        }
	        noevent$2();
	      }
	    }
	
	    function initialize() {
	      var state = this.__brush || {selection: null};
	      state.extent = extent.apply(this, arguments);
	      state.dim = dim;
	      return state;
	    }
	
	    brush.extent = function(_) {
	      return arguments.length ? (extent = typeof _ === "function" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;
	    };
	
	    brush.filter = function(_) {
	      return arguments.length ? (filter = typeof _ === "function" ? _ : constant$10(!!_), brush) : filter;
	    };
	
	    brush.handleSize = function(_) {
	      return arguments.length ? (handleSize = +_, brush) : handleSize;
	    };
	
	    brush.on = function() {
	      var value = listeners.on.apply(listeners, arguments);
	      return value === listeners ? brush : value;
	    };
	
	    return brush;
	  }
	
	  var cos = Math.cos;
	  var sin = Math.sin;
	  var pi$3 = Math.PI;
	  var halfPi$2 = pi$3 / 2;
	  var tau$3 = pi$3 * 2;
	  var max$1 = Math.max;
	
	  function compareValue(compare) {
	    return function(a, b) {
	      return compare(
	        a.source.value + a.target.value,
	        b.source.value + b.target.value
	      );
	    };
	  }
	
	  function chord() {
	    var padAngle = 0,
	        sortGroups = null,
	        sortSubgroups = null,
	        sortChords = null;
	
	    function chord(matrix) {
	      var n = matrix.length,
	          groupSums = [],
	          groupIndex = range(n),
	          subgroupIndex = [],
	          chords = [],
	          groups = chords.groups = new Array(n),
	          subgroups = new Array(n * n),
	          k,
	          x,
	          x0,
	          dx,
	          i,
	          j;
	
	      
	      k = 0, i = -1; while (++i < n) {
	        x = 0, j = -1; while (++j < n) {
	          x += matrix[i][j];
	        }
	        groupSums.push(x);
	        subgroupIndex.push(range(n));
	        k += x;
	      }
	
	      
	      if (sortGroups) groupIndex.sort(function(a, b) {
	        return sortGroups(groupSums[a], groupSums[b]);
	      });
	
	      
	      if (sortSubgroups) subgroupIndex.forEach(function(d, i) {
	        d.sort(function(a, b) {
	          return sortSubgroups(matrix[i][a], matrix[i][b]);
	        });
	      });
	
	      
	      
	      
	      k = max$1(0, tau$3 - padAngle * n) / k;
	      dx = k ? padAngle : tau$3 / n;
	
	      
	      
	      x = 0, i = -1; while (++i < n) {
	        x0 = x, j = -1; while (++j < n) {
	          var di = groupIndex[i],
	              dj = subgroupIndex[di][j],
	              v = matrix[di][dj],
	              a0 = x,
	              a1 = x += v * k;
	          subgroups[dj * n + di] = {
	            index: di,
	            subindex: dj,
	            startAngle: a0,
	            endAngle: a1,
	            value: v
	          };
	        }
	        groups[di] = {
	          index: di,
	          startAngle: x0,
	          endAngle: x,
	          value: groupSums[di]
	        };
	        x += dx;
	      }
	
	      
	      i = -1; while (++i < n) {
	        j = i - 1; while (++j < n) {
	          var source = subgroups[j * n + i],
	              target = subgroups[i * n + j];
	          if (source.value || target.value) {
	            chords.push(source.value < target.value
	                ? {source: target, target: source}
	                : {source: source, target: target});
	          }
	        }
	      }
	
	      return sortChords ? chords.sort(sortChords) : chords;
	    }
	
	    chord.padAngle = function(_) {
	      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;
	    };
	
	    chord.sortGroups = function(_) {
	      return arguments.length ? (sortGroups = _, chord) : sortGroups;
	    };
	
	    chord.sortSubgroups = function(_) {
	      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
	    };
	
	    chord.sortChords = function(_) {
	      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
	    };
	
	    return chord;
	  }
	
	  var slice$5 = Array.prototype.slice;
	
	  function constant$11(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function defaultSource(d) {
	    return d.source;
	  }
	
	  function defaultTarget(d) {
	    return d.target;
	  }
	
	  function defaultRadius$1(d) {
	    return d.radius;
	  }
	
	  function defaultStartAngle(d) {
	    return d.startAngle;
	  }
	
	  function defaultEndAngle(d) {
	    return d.endAngle;
	  }
	
	  function ribbon() {
	    var source = defaultSource,
	        target = defaultTarget,
	        radius = defaultRadius$1,
	        startAngle = defaultStartAngle,
	        endAngle = defaultEndAngle,
	        context = null;
	
	    function ribbon() {
	      var buffer,
	          argv = slice$5.call(arguments),
	          s = source.apply(this, argv),
	          t = target.apply(this, argv),
	          sr = +radius.apply(this, (argv[0] = s, argv)),
	          sa0 = startAngle.apply(this, argv) - halfPi$2,
	          sa1 = endAngle.apply(this, argv) - halfPi$2,
	          sx0 = sr * cos(sa0),
	          sy0 = sr * sin(sa0),
	          tr = +radius.apply(this, (argv[0] = t, argv)),
	          ta0 = startAngle.apply(this, argv) - halfPi$2,
	          ta1 = endAngle.apply(this, argv) - halfPi$2;
	
	      if (!context) context = buffer = path();
	
	      context.moveTo(sx0, sy0);
	      context.arc(0, 0, sr, sa0, sa1);
	      if (sa0 !== ta0 || sa1 !== ta1) { 
	        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));
	        context.arc(0, 0, tr, ta0, ta1);
	      }
	      context.quadraticCurveTo(0, 0, sx0, sy0);
	      context.closePath();
	
	      if (buffer) return context = null, buffer + "" || null;
	    }
	
	    ribbon.radius = function(_) {
	      return arguments.length ? (radius = typeof _ === "function" ? _ : constant$11(+_), ribbon) : radius;
	    };
	
	    ribbon.startAngle = function(_) {
	      return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$11(+_), ribbon) : startAngle;
	    };
	
	    ribbon.endAngle = function(_) {
	      return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$11(+_), ribbon) : endAngle;
	    };
	
	    ribbon.source = function(_) {
	      return arguments.length ? (source = _, ribbon) : source;
	    };
	
	    ribbon.target = function(_) {
	      return arguments.length ? (target = _, ribbon) : target;
	    };
	
	    ribbon.context = function(_) {
	      return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;
	    };
	
	    return ribbon;
	  }
	
	  
	  
	  
	  
	  
	  
	
	  function adder() {
	    return new Adder;
	  }
	
	  function Adder() {
	    this.reset();
	  }
	
	  Adder.prototype = {
	    constructor: Adder,
	    reset: function() {
	      this.s = 
	      this.t = 0; 
	    },
	    add: function(y) {
	      add$1(temp, y, this.t);
	      add$1(this, temp.s, this.s);
	      if (this.s) this.t += temp.t;
	      else this.s = temp.t;
	    },
	    valueOf: function() {
	      return this.s;
	    }
	  };
	
	  var temp = new Adder;
	
	  function add$1(adder, a, b) {
	    var x = adder.s = a + b,
	        bv = x - a,
	        av = x - bv;
	    adder.t = (a - av) + (b - bv);
	  }
	
	  var epsilon$4 = 1e-6;
	  var epsilon2$2 = 1e-12;
	  var pi$4 = Math.PI;
	  var halfPi$3 = pi$4 / 2;
	  var quarterPi = pi$4 / 4;
	  var tau$4 = pi$4 * 2;
	
	  var degrees$1 = 180 / pi$4;
	  var radians = pi$4 / 180;
	
	  var abs = Math.abs;
	  var atan = Math.atan;
	  var atan2 = Math.atan2;
	  var cos$1 = Math.cos;
	  var ceil = Math.ceil;
	  var exp = Math.exp;
	  var log$1 = Math.log;
	  var pow$1 = Math.pow;
	  var sin$1 = Math.sin;
	  var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
	  var sqrt$1 = Math.sqrt;
	  var tan = Math.tan;
	
	  function acos(x) {
	    return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);
	  }
	
	  function asin$1(x) {
	    return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);
	  }
	
	  function haversin(x) {
	    return (x = sin$1(x / 2)) * x;
	  }
	
	  function noop$2() {}
	
	  function streamGeometry(geometry, stream) {
	    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
	      streamGeometryType[geometry.type](geometry, stream);
	    }
	  }
	
	  var streamObjectType = {
	    Feature: function(feature, stream) {
	      streamGeometry(feature.geometry, stream);
	    },
	    FeatureCollection: function(object, stream) {
	      var features = object.features, i = -1, n = features.length;
	      while (++i < n) streamGeometry(features[i].geometry, stream);
	    }
	  };
	
	  var streamGeometryType = {
	    Sphere: function(object, stream) {
	      stream.sphere();
	    },
	    Point: function(object, stream) {
	      object = object.coordinates;
	      stream.point(object[0], object[1], object[2]);
	    },
	    MultiPoint: function(object, stream) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
	    },
	    LineString: function(object, stream) {
	      streamLine(object.coordinates, stream, 0);
	    },
	    MultiLineString: function(object, stream) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) streamLine(coordinates[i], stream, 0);
	    },
	    Polygon: function(object, stream) {
	      streamPolygon(object.coordinates, stream);
	    },
	    MultiPolygon: function(object, stream) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) streamPolygon(coordinates[i], stream);
	    },
	    GeometryCollection: function(object, stream) {
	      var geometries = object.geometries, i = -1, n = geometries.length;
	      while (++i < n) streamGeometry(geometries[i], stream);
	    }
	  };
	
	  function streamLine(coordinates, stream, closed) {
	    var i = -1, n = coordinates.length - closed, coordinate;
	    stream.lineStart();
	    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
	    stream.lineEnd();
	  }
	
	  function streamPolygon(coordinates, stream) {
	    var i = -1, n = coordinates.length;
	    stream.polygonStart();
	    while (++i < n) streamLine(coordinates[i], stream, 1);
	    stream.polygonEnd();
	  }
	
	  function stream(object, stream) {
	    if (object && streamObjectType.hasOwnProperty(object.type)) {
	      streamObjectType[object.type](object, stream);
	    } else {
	      streamGeometry(object, stream);
	    }
	  }
	
	  var areaRingSum;
	
	  var areaSum;
	  var lambda00;
	  var phi00;
	  var lambda0;
	  var cosPhi0;
	  var sinPhi0;
	  var areaStream = {
	    point: noop$2,
	    lineStart: noop$2,
	    lineEnd: noop$2,
	    polygonStart: function() {
	      areaRingSum.reset();
	      areaStream.lineStart = areaRingStart;
	      areaStream.lineEnd = areaRingEnd;
	    },
	    polygonEnd: function() {
	      var areaRing = +areaRingSum;
	      areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);
	      this.lineStart = this.lineEnd = this.point = noop$2;
	    },
	    sphere: function() {
	      areaSum.add(tau$4);
	    }
	  };
	
	  function areaRingStart() {
	    areaStream.point = areaPointFirst;
	  }
	
	  function areaRingEnd() {
	    areaPoint(lambda00, phi00);
	  }
	
	  function areaPointFirst(lambda, phi) {
	    areaStream.point = areaPoint;
	    lambda00 = lambda, phi00 = phi;
	    lambda *= radians, phi *= radians;
	    lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);
	  }
	
	  function areaPoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    phi = phi / 2 + quarterPi; 
	
	    
	    
	    
	    var dLambda = lambda - lambda0,
	        sdLambda = dLambda >= 0 ? 1 : -1,
	        adLambda = sdLambda * dLambda,
	        cosPhi = cos$1(phi),
	        sinPhi = sin$1(phi),
	        k = sinPhi0 * sinPhi,
	        u = cosPhi0 * cosPhi + k * cos$1(adLambda),
	        v = k * sdLambda * sin$1(adLambda);
	    areaRingSum.add(atan2(v, u));
	
	    
	    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
	  }
	
	  function area$2(object) {
	    if (areaSum) areaSum.reset();
	    else areaSum = adder(), areaRingSum = adder();
	    stream(object, areaStream);
	    return areaSum * 2;
	  }
	
	  function spherical(cartesian) {
	    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];
	  }
	
	  function cartesian(spherical) {
	    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);
	    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];
	  }
	
	  function cartesianDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	  }
	
	  function cartesianCross(a, b) {
	    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
	  }
	
	  
	  function cartesianAddInPlace(a, b) {
	    a[0] += b[0], a[1] += b[1], a[2] += b[2];
	  }
	
	  function cartesianScale(vector, k) {
	    return [vector[0] * k, vector[1] * k, vector[2] * k];
	  }
	
	  
	  function cartesianNormalizeInPlace(d) {
	    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
	    d[0] /= l, d[1] /= l, d[2] /= l;
	  }
	
	var   lambda0$1;
	  var phi0;
	  var lambda1;
	  var phi1;
	  var lambda2;
	var   lambda00$1;
	var   phi00$1;
	  var p0;
	  var deltaSum;
	  var ranges;
	var   range$1;
	  var boundsStream = {
	    point: boundsPoint,
	    lineStart: boundsLineStart,
	    lineEnd: boundsLineEnd,
	    polygonStart: function() {
	      boundsStream.point = boundsRingPoint;
	      boundsStream.lineStart = boundsRingStart;
	      boundsStream.lineEnd = boundsRingEnd;
	      deltaSum.reset();
	      areaStream.polygonStart();
	    },
	    polygonEnd: function() {
	      areaStream.polygonEnd();
	      boundsStream.point = boundsPoint;
	      boundsStream.lineStart = boundsLineStart;
	      boundsStream.lineEnd = boundsLineEnd;
	      if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);
	      else if (deltaSum > epsilon$4) phi1 = 90;
	      else if (deltaSum < -epsilon$4) phi0 = -90;
	      range$1[0] = lambda0$1, range$1[1] = lambda1;
	    }
	  };
	
	  function boundsPoint(lambda, phi) {
	    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);
	    if (phi < phi0) phi0 = phi;
	    if (phi > phi1) phi1 = phi;
	  }
	
	  function linePoint(lambda, phi) {
	    var p = cartesian([lambda * radians, phi * radians]);
	    if (p0) {
	      var normal = cartesianCross(p0, p),
	          equatorial = [normal[1], -normal[0], 0],
	          inflection = cartesianCross(equatorial, normal);
	      cartesianNormalizeInPlace(inflection);
	      inflection = spherical(inflection);
	      var delta = lambda - lambda2,
	          sign = delta > 0 ? 1 : -1,
	          lambdai = inflection[0] * degrees$1 * sign,
	          phii,
	          antimeridian = abs(delta) > 180;
	      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
	        phii = inflection[1] * degrees$1;
	        if (phii > phi1) phi1 = phii;
	      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
	        phii = -inflection[1] * degrees$1;
	        if (phii < phi0) phi0 = phii;
	      } else {
	        if (phi < phi0) phi0 = phi;
	        if (phi > phi1) phi1 = phi;
	      }
	      if (antimeridian) {
	        if (lambda < lambda2) {
	          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;
	        } else {
	          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;
	        }
	      } else {
	        if (lambda1 >= lambda0$1) {
	          if (lambda < lambda0$1) lambda0$1 = lambda;
	          if (lambda > lambda1) lambda1 = lambda;
	        } else {
	          if (lambda > lambda2) {
	            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;
	          } else {
	            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;
	          }
	        }
	      }
	    } else {
	      boundsPoint(lambda, phi);
	    }
	    p0 = p, lambda2 = lambda;
	  }
	
	  function boundsLineStart() {
	    boundsStream.point = linePoint;
	  }
	
	  function boundsLineEnd() {
	    range$1[0] = lambda0$1, range$1[1] = lambda1;
	    boundsStream.point = boundsPoint;
	    p0 = null;
	  }
	
	  function boundsRingPoint(lambda, phi) {
	    if (p0) {
	      var delta = lambda - lambda2;
	      deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
	    } else {
	      lambda00$1 = lambda, phi00$1 = phi;
	    }
	    areaStream.point(lambda, phi);
	    linePoint(lambda, phi);
	  }
	
	  function boundsRingStart() {
	    areaStream.lineStart();
	  }
	
	  function boundsRingEnd() {
	    boundsRingPoint(lambda00$1, phi00$1);
	    areaStream.lineEnd();
	    if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);
	    range$1[0] = lambda0$1, range$1[1] = lambda1;
	    p0 = null;
	  }
	
	  
	  
	  
	  function angle(lambda0, lambda1) {
	    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
	  }
	
	  function rangeCompare(a, b) {
	    return a[0] - b[0];
	  }
	
	  function rangeContains(range, x) {
	    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
	  }
	
	  function bounds(feature) {
	    var i, n, a, b, merged, deltaMax, delta;
	
	    if (deltaSum) deltaSum.reset();
	    else deltaSum = adder();
	    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);
	    ranges = [];
	    stream(feature, boundsStream);
	
	    
	    if (n = ranges.length) {
	      ranges.sort(rangeCompare);
	
	      
	      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
	        b = ranges[i];
	        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
	          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
	          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
	        } else {
	          merged.push(a = b);
	        }
	      }
	
	      
	      
	      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
	        b = merged[i];
	        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];
	      }
	    }
	
	    ranges = range$1 = null;
	
	    return lambda0$1 === Infinity || phi0 === Infinity
	        ? [[NaN, NaN], [NaN, NaN]]
	        : [[lambda0$1, phi0], [lambda1, phi1]];
	  }
	
	  var W0;
	  var W1;
	  var X0;
	  var Y0;
	  var Z0;
	  var X1;
	  var Y1;
	  var Z1;
	  var X2;
	  var Y2;
	  var Z2;
	var   lambda00$2;
	var   phi00$2;
	  var x0;
	  var y0;
	  var z0;
	  
	
	  var centroidStream = {
	    sphere: noop$2,
	    point: centroidPoint,
	    lineStart: centroidLineStart,
	    lineEnd: centroidLineEnd,
	    polygonStart: function() {
	      centroidStream.lineStart = centroidRingStart;
	      centroidStream.lineEnd = centroidRingEnd;
	    },
	    polygonEnd: function() {
	      centroidStream.lineStart = centroidLineStart;
	      centroidStream.lineEnd = centroidLineEnd;
	    }
	  };
	
	  
	  function centroidPoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var cosPhi = cos$1(phi);
	    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));
	  }
	
	  function centroidPointCartesian(x, y, z) {
	    ++W0;
	    X0 += (x - X0) / W0;
	    Y0 += (y - Y0) / W0;
	    Z0 += (z - Z0) / W0;
	  }
	
	  function centroidLineStart() {
	    centroidStream.point = centroidLinePointFirst;
	  }
	
	  function centroidLinePointFirst(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var cosPhi = cos$1(phi);
	    x0 = cosPhi * cos$1(lambda);
	    y0 = cosPhi * sin$1(lambda);
	    z0 = sin$1(phi);
	    centroidStream.point = centroidLinePoint;
	    centroidPointCartesian(x0, y0, z0);
	  }
	
	  function centroidLinePoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var cosPhi = cos$1(phi),
	        x = cosPhi * cos$1(lambda),
	        y = cosPhi * sin$1(lambda),
	        z = sin$1(phi),
	        w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
	    W1 += w;
	    X1 += w * (x0 + (x0 = x));
	    Y1 += w * (y0 + (y0 = y));
	    Z1 += w * (z0 + (z0 = z));
	    centroidPointCartesian(x0, y0, z0);
	  }
	
	  function centroidLineEnd() {
	    centroidStream.point = centroidPoint;
	  }
	
	  
	  
	  function centroidRingStart() {
	    centroidStream.point = centroidRingPointFirst;
	  }
	
	  function centroidRingEnd() {
	    centroidRingPoint(lambda00$2, phi00$2);
	    centroidStream.point = centroidPoint;
	  }
	
	  function centroidRingPointFirst(lambda, phi) {
	    lambda00$2 = lambda, phi00$2 = phi;
	    lambda *= radians, phi *= radians;
	    centroidStream.point = centroidRingPoint;
	    var cosPhi = cos$1(phi);
	    x0 = cosPhi * cos$1(lambda);
	    y0 = cosPhi * sin$1(lambda);
	    z0 = sin$1(phi);
	    centroidPointCartesian(x0, y0, z0);
	  }
	
	  function centroidRingPoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var cosPhi = cos$1(phi),
	        x = cosPhi * cos$1(lambda),
	        y = cosPhi * sin$1(lambda),
	        z = sin$1(phi),
	        cx = y0 * z - z0 * y,
	        cy = z0 * x - x0 * z,
	        cz = x0 * y - y0 * x,
	        m = sqrt$1(cx * cx + cy * cy + cz * cz),
	        u = x0 * x + y0 * y + z0 * z,
	        v = m && -acos(u) / m, 
	        w = atan2(m, u); 
	    X2 += v * cx;
	    Y2 += v * cy;
	    Z2 += v * cz;
	    W1 += w;
	    X1 += w * (x0 + (x0 = x));
	    Y1 += w * (y0 + (y0 = y));
	    Z1 += w * (z0 + (z0 = z));
	    centroidPointCartesian(x0, y0, z0);
	  }
	
	  function centroid$1(object) {
	    W0 = W1 =
	    X0 = Y0 = Z0 =
	    X1 = Y1 = Z1 =
	    X2 = Y2 = Z2 = 0;
	    stream(object, centroidStream);
	
	    var x = X2,
	        y = Y2,
	        z = Z2,
	        m = x * x + y * y + z * z;
	
	    
	    if (m < epsilon2$2) {
	      x = X1, y = Y1, z = Z1;
	      
	      if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;
	      m = x * x + y * y + z * z;
	      
	      if (m < epsilon2$2) return [NaN, NaN];
	    }
	
	    return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];
	  }
	
	  function constant$12(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function compose(a, b) {
	
	    function compose(x, y) {
	      return x = a(x, y), b(x[0], x[1]);
	    }
	
	    if (a.invert && b.invert) compose.invert = function(x, y) {
	      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
	    };
	
	    return compose;
	  }
	
	  function rotationIdentity(lambda, phi) {
	    return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];
	  }
	
	  rotationIdentity.invert = rotationIdentity;
	
	  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
	    return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
	      : rotationLambda(deltaLambda))
	      : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
	      : rotationIdentity);
	  }
	
	  function forwardRotationLambda(deltaLambda) {
	    return function(lambda, phi) {
	      return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];
	    };
	  }
	
	  function rotationLambda(deltaLambda) {
	    var rotation = forwardRotationLambda(deltaLambda);
	    rotation.invert = forwardRotationLambda(-deltaLambda);
	    return rotation;
	  }
	
	  function rotationPhiGamma(deltaPhi, deltaGamma) {
	    var cosDeltaPhi = cos$1(deltaPhi),
	        sinDeltaPhi = sin$1(deltaPhi),
	        cosDeltaGamma = cos$1(deltaGamma),
	        sinDeltaGamma = sin$1(deltaGamma);
	
	    function rotation(lambda, phi) {
	      var cosPhi = cos$1(phi),
	          x = cos$1(lambda) * cosPhi,
	          y = sin$1(lambda) * cosPhi,
	          z = sin$1(phi),
	          k = z * cosDeltaPhi + x * sinDeltaPhi;
	      return [
	        atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
	        asin$1(k * cosDeltaGamma + y * sinDeltaGamma)
	      ];
	    }
	
	    rotation.invert = function(lambda, phi) {
	      var cosPhi = cos$1(phi),
	          x = cos$1(lambda) * cosPhi,
	          y = sin$1(lambda) * cosPhi,
	          z = sin$1(phi),
	          k = z * cosDeltaGamma - y * sinDeltaGamma;
	      return [
	        atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
	        asin$1(k * cosDeltaPhi - x * sinDeltaPhi)
	      ];
	    };
	
	    return rotation;
	  }
	
	  function rotation(rotate) {
	    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);
	
	    function forward(coordinates) {
	      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);
	      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
	    }
	
	    forward.invert = function(coordinates) {
	      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);
	      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
	    };
	
	    return forward;
	  }
	
	  
	  function circleStream(stream, radius, delta, direction, t0, t1) {
	    if (!delta) return;
	    var cosRadius = cos$1(radius),
	        sinRadius = sin$1(radius),
	        step = direction * delta;
	    if (t0 == null) {
	      t0 = radius + direction * tau$4;
	      t1 = radius - step / 2;
	    } else {
	      t0 = circleRadius(cosRadius, t0);
	      t1 = circleRadius(cosRadius, t1);
	      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;
	    }
	    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
	      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);
	      stream.point(point[0], point[1]);
	    }
	  }
	
	  
	  function circleRadius(cosRadius, point) {
	    point = cartesian(point), point[0] -= cosRadius;
	    cartesianNormalizeInPlace(point);
	    var radius = acos(-point[1]);
	    return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;
	  }
	
	  function circle$1() {
	    var center = constant$12([0, 0]),
	        radius = constant$12(90),
	        precision = constant$12(6),
	        ring,
	        rotate,
	        stream = {point: point};
	
	    function point(x, y) {
	      ring.push(x = rotate(x, y));
	      x[0] *= degrees$1, x[1] *= degrees$1;
	    }
	
	    function circle() {
	      var c = center.apply(this, arguments),
	          r = radius.apply(this, arguments) * radians,
	          p = precision.apply(this, arguments) * radians;
	      ring = [];
	      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;
	      circleStream(stream, r, p, 1);
	      c = {type: "Polygon", coordinates: [ring]};
	      ring = rotate = null;
	      return c;
	    }
	
	    circle.center = function(_) {
	      return arguments.length ? (center = typeof _ === "function" ? _ : constant$12([+_[0], +_[1]]), circle) : center;
	    };
	
	    circle.radius = function(_) {
	      return arguments.length ? (radius = typeof _ === "function" ? _ : constant$12(+_), circle) : radius;
	    };
	
	    circle.precision = function(_) {
	      return arguments.length ? (precision = typeof _ === "function" ? _ : constant$12(+_), circle) : precision;
	    };
	
	    return circle;
	  }
	
	  function clipBuffer() {
	    var lines = [],
	        line;
	    return {
	      point: function(x, y) {
	        line.push([x, y]);
	      },
	      lineStart: function() {
	        lines.push(line = []);
	      },
	      lineEnd: noop$2,
	      rejoin: function() {
	        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
	      },
	      result: function() {
	        var result = lines;
	        lines = [];
	        line = null;
	        return result;
	      }
	    };
	  }
	
	  function clipLine(a, b, x0, y0, x1, y1) {
	    var ax = a[0],
	        ay = a[1],
	        bx = b[0],
	        by = b[1],
	        t0 = 0,
	        t1 = 1,
	        dx = bx - ax,
	        dy = by - ay,
	        r;
	
	    r = x0 - ax;
	    if (!dx && r > 0) return;
	    r /= dx;
	    if (dx < 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    } else if (dx > 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    }
	
	    r = x1 - ax;
	    if (!dx && r < 0) return;
	    r /= dx;
	    if (dx < 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    } else if (dx > 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    }
	
	    r = y0 - ay;
	    if (!dy && r > 0) return;
	    r /= dy;
	    if (dy < 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    } else if (dy > 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    }
	
	    r = y1 - ay;
	    if (!dy && r < 0) return;
	    r /= dy;
	    if (dy < 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    } else if (dy > 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    }
	
	    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
	    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
	    return true;
	  }
	
	  function pointEqual(a, b) {
	    return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;
	  }
	
	  function Intersection(point, points, other, entry) {
	    this.x = point;
	    this.z = points;
	    this.o = other; 
	    this.e = entry; 
	    this.v = false; 
	    this.n = this.p = null; 
	  }
	
	  
	  
	  
	  function clipPolygon(segments, compareIntersection, startInside, interpolate, stream) {
	    var subject = [],
	        clip = [],
	        i,
	        n;
	
	    segments.forEach(function(segment) {
	      if ((n = segment.length - 1) <= 0) return;
	      var n, p0 = segment[0], p1 = segment[n], x;
	
	      
	      
	      
	      if (pointEqual(p0, p1)) {
	        stream.lineStart();
	        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
	        stream.lineEnd();
	        return;
	      }
	
	      subject.push(x = new Intersection(p0, segment, null, true));
	      clip.push(x.o = new Intersection(p0, null, x, false));
	      subject.push(x = new Intersection(p1, segment, null, false));
	      clip.push(x.o = new Intersection(p1, null, x, true));
	    });
	
	    if (!subject.length) return;
	
	    clip.sort(compareIntersection);
	    link$1(subject);
	    link$1(clip);
	
	    for (i = 0, n = clip.length; i < n; ++i) {
	      clip[i].e = startInside = !startInside;
	    }
	
	    var start = subject[0],
	        points,
	        point;
	
	    while (1) {
	      
	      var current = start,
	          isSubject = true;
	      while (current.v) if ((current = current.n) === start) return;
	      points = current.z;
	      stream.lineStart();
	      do {
	        current.v = current.o.v = true;
	        if (current.e) {
	          if (isSubject) {
	            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.n.x, 1, stream);
	          }
	          current = current.n;
	        } else {
	          if (isSubject) {
	            points = current.p.z;
	            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.p.x, -1, stream);
	          }
	          current = current.p;
	        }
	        current = current.o;
	        points = current.z;
	        isSubject = !isSubject;
	      } while (!current.v);
	      stream.lineEnd();
	    }
	  }
	
	  function link$1(array) {
	    if (!(n = array.length)) return;
	    var n,
	        i = 0,
	        a = array[0],
	        b;
	    while (++i < n) {
	      a.n = b = array[i];
	      b.p = a;
	      a = b;
	    }
	    a.n = b = array[0];
	    b.p = a;
	  }
	
	  var clipMax = 1e9;
	  var clipMin = -clipMax;
	  
	  
	
	  function clipExtent(x0, y0, x1, y1) {
	
	    function visible(x, y) {
	      return x0 <= x && x <= x1 && y0 <= y && y <= y1;
	    }
	
	    function interpolate(from, to, direction, stream) {
	      var a = 0, a1 = 0;
	      if (from == null
	          || (a = corner(from, direction)) !== (a1 = corner(to, direction))
	          || comparePoint(from, to) < 0 ^ direction > 0) {
	        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
	        while ((a = (a + direction + 4) % 4) !== a1);
	      } else {
	        stream.point(to[0], to[1]);
	      }
	    }
	
	    function corner(p, direction) {
	      return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3
	          : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1
	          : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0
	          : direction > 0 ? 3 : 2; 
	    }
	
	    function compareIntersection(a, b) {
	      return comparePoint(a.x, b.x);
	    }
	
	    function comparePoint(a, b) {
	      var ca = corner(a, 1),
	          cb = corner(b, 1);
	      return ca !== cb ? ca - cb
	          : ca === 0 ? b[1] - a[1]
	          : ca === 1 ? a[0] - b[0]
	          : ca === 2 ? a[1] - b[1]
	          : b[0] - a[0];
	    }
	
	    return function(stream) {
	      var activeStream = stream,
	          bufferStream = clipBuffer(),
	          segments,
	          polygon,
	          ring,
	          x__, y__, v__, 
	          x_, y_, v_, 
	          first,
	          clean;
	
	      var clipStream = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: polygonStart,
	        polygonEnd: polygonEnd
	      };
	
	      function point(x, y) {
	        if (visible(x, y)) activeStream.point(x, y);
	      }
	
	      function polygonInside() {
	        var winding = 0;
	
	        for (var i = 0, n = polygon.length; i < n; ++i) {
	          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
	            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
	            if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
	            else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
	          }
	        }
	
	        return winding;
	      }
	
	      
	      function polygonStart() {
	        activeStream = bufferStream, segments = [], polygon = [], clean = true;
	      }
	
	      function polygonEnd() {
	        var startInside = polygonInside(),
	            cleanInside = clean && startInside,
	            visible = (segments = merge(segments)).length;
	        if (cleanInside || visible) {
	          stream.polygonStart();
	          if (cleanInside) {
	            stream.lineStart();
	            interpolate(null, null, 1, stream);
	            stream.lineEnd();
	          }
	          if (visible) {
	            clipPolygon(segments, compareIntersection, startInside, interpolate, stream);
	          }
	          stream.polygonEnd();
	        }
	        activeStream = stream, segments = polygon = ring = null;
	      }
	
	      function lineStart() {
	        clipStream.point = linePoint;
	        if (polygon) polygon.push(ring = []);
	        first = true;
	        v_ = false;
	        x_ = y_ = NaN;
	      }
	
	      
	      
	      
	      function lineEnd() {
	        if (segments) {
	          linePoint(x__, y__);
	          if (v__ && v_) bufferStream.rejoin();
	          segments.push(bufferStream.result());
	        }
	        clipStream.point = point;
	        if (v_) activeStream.lineEnd();
	      }
	
	      function linePoint(x, y) {
	        var v = visible(x, y);
	        if (polygon) ring.push([x, y]);
	        if (first) {
	          x__ = x, y__ = y, v__ = v;
	          first = false;
	          if (v) {
	            activeStream.lineStart();
	            activeStream.point(x, y);
	          }
	        } else {
	          if (v && v_) activeStream.point(x, y);
	          else {
	            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
	                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
	            if (clipLine(a, b, x0, y0, x1, y1)) {
	              if (!v_) {
	                activeStream.lineStart();
	                activeStream.point(a[0], a[1]);
	              }
	              activeStream.point(b[0], b[1]);
	              if (!v) activeStream.lineEnd();
	              clean = false;
	            } else if (v) {
	              activeStream.lineStart();
	              activeStream.point(x, y);
	              clean = false;
	            }
	          }
	        }
	        x_ = x, y_ = y, v_ = v;
	      }
	
	      return clipStream;
	    };
	  }
	
	  function extent$1() {
	    var x0 = 0,
	        y0 = 0,
	        x1 = 960,
	        y1 = 500,
	        cache,
	        cacheStream,
	        clip;
	
	    return clip = {
	      stream: function(stream) {
	        return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);
	      },
	      extent: function(_) {
	        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
	      }
	    };
	  }
	
	  var lengthSum;
	var   lambda0$2;
	var   sinPhi0$1;
	var   cosPhi0$1;
	  var lengthStream = {
	    sphere: noop$2,
	    point: noop$2,
	    lineStart: lengthLineStart,
	    lineEnd: noop$2,
	    polygonStart: noop$2,
	    polygonEnd: noop$2
	  };
	
	  function lengthLineStart() {
	    lengthStream.point = lengthPointFirst;
	    lengthStream.lineEnd = lengthLineEnd;
	  }
	
	  function lengthLineEnd() {
	    lengthStream.point = lengthStream.lineEnd = noop$2;
	  }
	
	  function lengthPointFirst(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);
	    lengthStream.point = lengthPoint;
	  }
	
	  function lengthPoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var sinPhi = sin$1(phi),
	        cosPhi = cos$1(phi),
	        delta = abs(lambda - lambda0$2),
	        cosDelta = cos$1(delta),
	        sinDelta = sin$1(delta),
	        x = cosPhi * sinDelta,
	        y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,
	        z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;
	    lengthSum.add(atan2(sqrt$1(x * x + y * y), z));
	    lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;
	  }
	
	  function length$2(object) {
	    if (lengthSum) lengthSum.reset();
	    else lengthSum = adder();
	    stream(object, lengthStream);
	    return +lengthSum;
	  }
	
	  var coordinates = [null, null];
	var   object$1 = {type: "LineString", coordinates: coordinates};
	  function distance(a, b) {
	    coordinates[0] = a;
	    coordinates[1] = b;
	    return length$2(object$1);
	  }
	
	  function graticuleX(y0, y1, dy) {
	    var y = range(y0, y1 - epsilon$4, dy).concat(y1);
	    return function(x) { return y.map(function(y) { return [x, y]; }); };
	  }
	
	  function graticuleY(x0, x1, dx) {
	    var x = range(x0, x1 - epsilon$4, dx).concat(x1);
	    return function(y) { return x.map(function(x) { return [x, y]; }); };
	  }
	
	  function graticule() {
	    var x1, x0, X1, X0,
	        y1, y0, Y1, Y0,
	        dx = 10, dy = dx, DX = 90, DY = 360,
	        x, y, X, Y,
	        precision = 2.5;
	
	    function graticule() {
	      return {type: "MultiLineString", coordinates: lines()};
	    }
	
	    function lines() {
	      return range(ceil(X0 / DX) * DX, X1, DX).map(X)
	          .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))
	          .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))
	          .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));
	    }
	
	    graticule.lines = function() {
	      return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
	    };
	
	    graticule.outline = function() {
	      return {
	        type: "Polygon",
	        coordinates: [
	          X(X0).concat(
	          Y(Y1).slice(1),
	          X(X1).reverse().slice(1),
	          Y(Y0).reverse().slice(1))
	        ]
	      };
	    };
	
	    graticule.extent = function(_) {
	      if (!arguments.length) return graticule.extentMinor();
	      return graticule.extentMajor(_).extentMinor(_);
	    };
	
	    graticule.extentMajor = function(_) {
	      if (!arguments.length) return [[X0, Y0], [X1, Y1]];
	      X0 = +_[0][0], X1 = +_[1][0];
	      Y0 = +_[0][1], Y1 = +_[1][1];
	      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
	      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
	      return graticule.precision(precision);
	    };
	
	    graticule.extentMinor = function(_) {
	      if (!arguments.length) return [[x0, y0], [x1, y1]];
	      x0 = +_[0][0], x1 = +_[1][0];
	      y0 = +_[0][1], y1 = +_[1][1];
	      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
	      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
	      return graticule.precision(precision);
	    };
	
	    graticule.step = function(_) {
	      if (!arguments.length) return graticule.stepMinor();
	      return graticule.stepMajor(_).stepMinor(_);
	    };
	
	    graticule.stepMajor = function(_) {
	      if (!arguments.length) return [DX, DY];
	      DX = +_[0], DY = +_[1];
	      return graticule;
	    };
	
	    graticule.stepMinor = function(_) {
	      if (!arguments.length) return [dx, dy];
	      dx = +_[0], dy = +_[1];
	      return graticule;
	    };
	
	    graticule.precision = function(_) {
	      if (!arguments.length) return precision;
	      precision = +_;
	      x = graticuleX(y0, y1, 90);
	      y = graticuleY(x0, x1, precision);
	      X = graticuleX(Y0, Y1, 90);
	      Y = graticuleY(X0, X1, precision);
	      return graticule;
	    };
	
	    return graticule
	        .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])
	        .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);
	  }
	
	  function interpolate$2(a, b) {
	    var x0 = a[0] * radians,
	        y0 = a[1] * radians,
	        x1 = b[0] * radians,
	        y1 = b[1] * radians,
	        cy0 = cos$1(y0),
	        sy0 = sin$1(y0),
	        cy1 = cos$1(y1),
	        sy1 = sin$1(y1),
	        kx0 = cy0 * cos$1(x0),
	        ky0 = cy0 * sin$1(x0),
	        kx1 = cy1 * cos$1(x1),
	        ky1 = cy1 * sin$1(x1),
	        d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),
	        k = sin$1(d);
	
	    var interpolate = d ? function(t) {
	      var B = sin$1(t *= d) / k,
	          A = sin$1(d - t) / k,
	          x = A * kx0 + B * kx1,
	          y = A * ky0 + B * ky1,
	          z = A * sy0 + B * sy1;
	      return [
	        atan2(y, x) * degrees$1,
	        atan2(z, sqrt$1(x * x + y * y)) * degrees$1
	      ];
	    } : function() {
	      return [x0 * degrees$1, y0 * degrees$1];
	    };
	
	    interpolate.distance = d;
	
	    return interpolate;
	  }
	
	  function identity$7(x) {
	    return x;
	  }
	
	var   areaSum$1 = adder();
	var   areaRingSum$1 = adder();
	  var x00;
	  var y00;
	var   x0$1;
	var   y0$1;
	  var areaStream$1 = {
	    point: noop$2,
	    lineStart: noop$2,
	    lineEnd: noop$2,
	    polygonStart: function() {
	      areaStream$1.lineStart = areaRingStart$1;
	      areaStream$1.lineEnd = areaRingEnd$1;
	    },
	    polygonEnd: function() {
	      areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;
	      areaSum$1.add(abs(areaRingSum$1));
	      areaRingSum$1.reset();
	    },
	    result: function() {
	      var area = areaSum$1 / 2;
	      areaSum$1.reset();
	      return area;
	    }
	  };
	
	  function areaRingStart$1() {
	    areaStream$1.point = areaPointFirst$1;
	  }
	
	  function areaPointFirst$1(x, y) {
	    areaStream$1.point = areaPoint$1;
	    x00 = x0$1 = x, y00 = y0$1 = y;
	  }
	
	  function areaPoint$1(x, y) {
	    areaRingSum$1.add(y0$1 * x - x0$1 * y);
	    x0$1 = x, y0$1 = y;
	  }
	
	  function areaRingEnd$1() {
	    areaPoint$1(x00, y00);
	  }
	
	var   x0$2 = Infinity;
	var   y0$2 = x0$2;
	  var x1 = -x0$2;
	  var y1 = x1;
	  var boundsStream$1 = {
	    point: boundsPoint$1,
	    lineStart: noop$2,
	    lineEnd: noop$2,
	    polygonStart: noop$2,
	    polygonEnd: noop$2,
	    result: function() {
	      var bounds = [[x0$2, y0$2], [x1, y1]];
	      x1 = y1 = -(y0$2 = x0$2 = Infinity);
	      return bounds;
	    }
	  };
	
	  function boundsPoint$1(x, y) {
	    if (x < x0$2) x0$2 = x;
	    if (x > x1) x1 = x;
	    if (y < y0$2) y0$2 = y;
	    if (y > y1) y1 = y;
	  }
	
	var   X0$1 = 0;
	var   Y0$1 = 0;
	var   Z0$1 = 0;
	var   X1$1 = 0;
	var   Y1$1 = 0;
	var   Z1$1 = 0;
	var   X2$1 = 0;
	var   Y2$1 = 0;
	var   Z2$1 = 0;
	var   x00$1;
	var   y00$1;
	var   x0$3;
	var   y0$3;
	  var centroidStream$1 = {
	    point: centroidPoint$1,
	    lineStart: centroidLineStart$1,
	    lineEnd: centroidLineEnd$1,
	    polygonStart: function() {
	      centroidStream$1.lineStart = centroidRingStart$1;
	      centroidStream$1.lineEnd = centroidRingEnd$1;
	    },
	    polygonEnd: function() {
	      centroidStream$1.point = centroidPoint$1;
	      centroidStream$1.lineStart = centroidLineStart$1;
	      centroidStream$1.lineEnd = centroidLineEnd$1;
	    },
	    result: function() {
	      var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]
	          : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]
	          : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]
	          : [NaN, NaN];
	      X0$1 = Y0$1 = Z0$1 =
	      X1$1 = Y1$1 = Z1$1 =
	      X2$1 = Y2$1 = Z2$1 = 0;
	      return centroid;
	    }
	  };
	
	  function centroidPoint$1(x, y) {
	    X0$1 += x;
	    Y0$1 += y;
	    ++Z0$1;
	  }
	
	  function centroidLineStart$1() {
	    centroidStream$1.point = centroidPointFirstLine;
	  }
	
	  function centroidPointFirstLine(x, y) {
	    centroidStream$1.point = centroidPointLine;
	    centroidPoint$1(x0$3 = x, y0$3 = y);
	  }
	
	  function centroidPointLine(x, y) {
	    var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);
	    X1$1 += z * (x0$3 + x) / 2;
	    Y1$1 += z * (y0$3 + y) / 2;
	    Z1$1 += z;
	    centroidPoint$1(x0$3 = x, y0$3 = y);
	  }
	
	  function centroidLineEnd$1() {
	    centroidStream$1.point = centroidPoint$1;
	  }
	
	  function centroidRingStart$1() {
	    centroidStream$1.point = centroidPointFirstRing;
	  }
	
	  function centroidRingEnd$1() {
	    centroidPointRing(x00$1, y00$1);
	  }
	
	  function centroidPointFirstRing(x, y) {
	    centroidStream$1.point = centroidPointRing;
	    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);
	  }
	
	  function centroidPointRing(x, y) {
	    var dx = x - x0$3,
	        dy = y - y0$3,
	        z = sqrt$1(dx * dx + dy * dy);
	
	    X1$1 += z * (x0$3 + x) / 2;
	    Y1$1 += z * (y0$3 + y) / 2;
	    Z1$1 += z;
	
	    z = y0$3 * x - x0$3 * y;
	    X2$1 += z * (x0$3 + x);
	    Y2$1 += z * (y0$3 + y);
	    Z2$1 += z * 3;
	    centroidPoint$1(x0$3 = x, y0$3 = y);
	  }
	
	  function PathContext(context) {
	    var pointRadius = 4.5;
	
	    var stream = {
	      point: point,
	
	      
	      lineStart: function() { stream.point = pointLineStart; },
	      lineEnd: lineEnd,
	
	      
	      polygonStart: function() { stream.lineEnd = lineEndPolygon; },
	      polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },
	
	      pointRadius: function(_) {
	        pointRadius = _;
	        return stream;
	      },
	
	      result: noop$2
	    };
	
	    function point(x, y) {
	      context.moveTo(x + pointRadius, y);
	      context.arc(x, y, pointRadius, 0, tau$4);
	    }
	
	    function pointLineStart(x, y) {
	      context.moveTo(x, y);
	      stream.point = pointLine;
	    }
	
	    function pointLine(x, y) {
	      context.lineTo(x, y);
	    }
	
	    function lineEnd() {
	      stream.point = point;
	    }
	
	    function lineEndPolygon() {
	      context.closePath();
	    }
	
	    return stream;
	  }
	
	  function PathString() {
	    var pointCircle = circle$2(4.5),
	        string = [];
	
	    var stream = {
	      point: point,
	      lineStart: lineStart,
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointCircle = circle$2(_);
	        return stream;
	      },
	      result: function() {
	        if (string.length) {
	          var result = string.join("");
	          string = [];
	          return result;
	        }
	      }
	    };
	
	    function point(x, y) {
	      string.push("M", x, ",", y, pointCircle);
	    }
	
	    function pointLineStart(x, y) {
	      string.push("M", x, ",", y);
	      stream.point = pointLine;
	    }
	
	    function pointLine(x, y) {
	      string.push("L", x, ",", y);
	    }
	
	    function lineStart() {
	      stream.point = pointLineStart;
	    }
	
	    function lineEnd() {
	      stream.point = point;
	    }
	
	    function lineEndPolygon() {
	      string.push("Z");
	    }
	
	    return stream;
	  }
	
	  function circle$2(radius) {
	    return "m0," + radius
	        + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
	        + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
	        + "z";
	  }
	
	  function index$3() {
	    var pointRadius = 4.5,
	        projection,
	        projectionStream,
	        context,
	        contextStream;
	
	    function path(object) {
	      if (object) {
	        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
	        stream(object, projectionStream(contextStream));
	      }
	      return contextStream.result();
	    }
	
	    path.area = function(object) {
	      stream(object, projectionStream(areaStream$1));
	      return areaStream$1.result();
	    };
	
	    path.bounds = function(object) {
	      stream(object, projectionStream(boundsStream$1));
	      return boundsStream$1.result();
	    };
	
	    path.centroid = function(object) {
	      stream(object, projectionStream(centroidStream$1));
	      return centroidStream$1.result();
	    };
	
	    path.projection = function(_) {
	      return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;
	    };
	
	    path.context = function(_) {
	      if (!arguments.length) return context;
	      contextStream = (context = _) == null ? new PathString : new PathContext(_);
	      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
	      return path;
	    };
	
	    path.pointRadius = function(_) {
	      if (!arguments.length) return pointRadius;
	      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
	      return path;
	    };
	
	    return path.projection(null).context(null);
	  }
	
	  var sum$2 = adder();
	
	  function polygonContains(polygon, point) {
	    var lambda = point[0],
	        phi = point[1],
	        normal = [sin$1(lambda), -cos$1(lambda), 0],
	        angle = 0,
	        winding = 0;
	
	    for (var i = 0, n = polygon.length; i < n; ++i) {
	      if (!(m = (ring = polygon[i]).length)) continue;
	      var ring,
	          m,
	          point0 = ring[m - 1],
	          lambda0 = point0[0],
	          phi0 = point0[1] / 2 + quarterPi,
	          sinPhi0 = sin$1(phi0),
	          cosPhi0 = cos$1(phi0);
	
	      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
	        var point1 = ring[j],
	            lambda1 = point1[0],
	            phi1 = point1[1] / 2 + quarterPi,
	            sinPhi1 = sin$1(phi1),
	            cosPhi1 = cos$1(phi1),
	            delta = lambda1 - lambda0,
	            sign = delta >= 0 ? 1 : -1,
	            absDelta = sign * delta,
	            antimeridian = absDelta > pi$4,
	            k = sinPhi0 * sinPhi1;
	
	        sum$2.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));
	        angle += antimeridian ? delta + sign * tau$4 : delta;
	
	        
	        
	        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
	          var arc = cartesianCross(cartesian(point0), cartesian(point1));
	          cartesianNormalizeInPlace(arc);
	          var intersection = cartesianCross(normal, arc);
	          cartesianNormalizeInPlace(intersection);
	          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);
	          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
	            winding += antimeridian ^ delta >= 0 ? 1 : -1;
	          }
	        }
	      }
	    }
	
	    
	    //
	    
	    
	    
	    
	    //
	    
	    
	    
	
	    var contains = (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);
	    sum$2.reset();
	    return contains;
	  }
	
	  function clip(pointVisible, clipLine, interpolate, start) {
	    return function(rotate, sink) {
	      var line = clipLine(sink),
	          rotatedStart = rotate.invert(start[0], start[1]),
	          ringBuffer = clipBuffer(),
	          ringSink = clipLine(ringBuffer),
	          polygonStarted = false,
	          polygon,
	          segments,
	          ring;
	
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          clip.point = pointRing;
	          clip.lineStart = ringStart;
	          clip.lineEnd = ringEnd;
	          segments = [];
	          polygon = [];
	        },
	        polygonEnd: function() {
	          clip.point = point;
	          clip.lineStart = lineStart;
	          clip.lineEnd = lineEnd;
	          segments = merge(segments);
	          var startInside = polygonContains(polygon, rotatedStart);
	          if (segments.length) {
	            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
	            clipPolygon(segments, compareIntersection, startInside, interpolate, sink);
	          } else if (startInside) {
	            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
	            sink.lineStart();
	            interpolate(null, null, 1, sink);
	            sink.lineEnd();
	          }
	          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
	          segments = polygon = null;
	        },
	        sphere: function() {
	          sink.polygonStart();
	          sink.lineStart();
	          interpolate(null, null, 1, sink);
	          sink.lineEnd();
	          sink.polygonEnd();
	        }
	      };
	
	      function point(lambda, phi) {
	        var point = rotate(lambda, phi);
	        if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);
	      }
	
	      function pointLine(lambda, phi) {
	        var point = rotate(lambda, phi);
	        line.point(point[0], point[1]);
	      }
	
	      function lineStart() {
	        clip.point = pointLine;
	        line.lineStart();
	      }
	
	      function lineEnd() {
	        clip.point = point;
	        line.lineEnd();
	      }
	
	      function pointRing(lambda, phi) {
	        ring.push([lambda, phi]);
	        var point = rotate(lambda, phi);
	        ringSink.point(point[0], point[1]);
	      }
	
	      function ringStart() {
	        ringSink.lineStart();
	        ring = [];
	      }
	
	      function ringEnd() {
	        pointRing(ring[0][0], ring[0][1]);
	        ringSink.lineEnd();
	
	        var clean = ringSink.clean(),
	            ringSegments = ringBuffer.result(),
	            i, n = ringSegments.length, m,
	            segment,
	            point;
	
	        ring.pop();
	        polygon.push(ring);
	        ring = null;
	
	        if (!n) return;
	
	        
	        if (clean & 1) {
	          segment = ringSegments[0];
	          if ((m = segment.length - 1) > 0) {
	            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
	            sink.lineStart();
	            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
	            sink.lineEnd();
	          }
	          return;
	        }
	
	        
	        
	        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
	
	        segments.push(ringSegments.filter(validSegment));
	      }
	
	      return clip;
	    };
	  }
	
	  function validSegment(segment) {
	    return segment.length > 1;
	  }
	
	  
	  
	  function compareIntersection(a, b) {
	    return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])
	         - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);
	  }
	
	  var clipAntimeridian = clip(
	    function() { return true; },
	    clipAntimeridianLine,
	    clipAntimeridianInterpolate,
	    [-pi$4, -halfPi$3]
	  );
	
	  
	  
	  
	  function clipAntimeridianLine(stream) {
	    var lambda0 = NaN,
	        phi0 = NaN,
	        sign0 = NaN,
	        clean; 
	
	    return {
	      lineStart: function() {
	        stream.lineStart();
	        clean = 1;
	      },
	      point: function(lambda1, phi1) {
	        var sign1 = lambda1 > 0 ? pi$4 : -pi$4,
	            delta = abs(lambda1 - lambda0);
	        if (abs(delta - pi$4) < epsilon$4) { 
	          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);
	          stream.point(sign0, phi0);
	          stream.lineEnd();
	          stream.lineStart();
	          stream.point(sign1, phi0);
	          stream.point(lambda1, phi0);
	          clean = 0;
	        } else if (sign0 !== sign1 && delta >= pi$4) { 
	          if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; 
	          if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;
	          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
	          stream.point(sign0, phi0);
	          stream.lineEnd();
	          stream.lineStart();
	          stream.point(sign1, phi0);
	          clean = 0;
	        }
	        stream.point(lambda0 = lambda1, phi0 = phi1);
	        sign0 = sign1;
	      },
	      lineEnd: function() {
	        stream.lineEnd();
	        lambda0 = phi0 = NaN;
	      },
	      clean: function() {
	        return 2 - clean; 
	      }
	    };
	  }
	
	  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
	    var cosPhi0,
	        cosPhi1,
	        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);
	    return abs(sinLambda0Lambda1) > epsilon$4
	        ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)
	            - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))
	            / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
	        : (phi0 + phi1) / 2;
	  }
	
	  function clipAntimeridianInterpolate(from, to, direction, stream) {
	    var phi;
	    if (from == null) {
	      phi = direction * halfPi$3;
	      stream.point(-pi$4, phi);
	      stream.point(0, phi);
	      stream.point(pi$4, phi);
	      stream.point(pi$4, 0);
	      stream.point(pi$4, -phi);
	      stream.point(0, -phi);
	      stream.point(-pi$4, -phi);
	      stream.point(-pi$4, 0);
	      stream.point(-pi$4, phi);
	    } else if (abs(from[0] - to[0]) > epsilon$4) {
	      var lambda = from[0] < to[0] ? pi$4 : -pi$4;
	      phi = direction * lambda / 2;
	      stream.point(-lambda, phi);
	      stream.point(0, phi);
	      stream.point(lambda, phi);
	    } else {
	      stream.point(to[0], to[1]);
	    }
	  }
	
	  function clipCircle(radius, delta) {
	    var cr = cos$1(radius),
	        smallRadius = cr > 0,
	        notHemisphere = abs(cr) > epsilon$4; 
	
	    function interpolate(from, to, direction, stream) {
	      circleStream(stream, radius, delta, direction, from, to);
	    }
	
	    function visible(lambda, phi) {
	      return cos$1(lambda) * cos$1(phi) > cr;
	    }
	
	    
	    
	    
	    
	    function clipLine(stream) {
	      var point0, 
	          c0, 
	          v0, 
	          v00, 
	          clean; 
	      return {
	        lineStart: function() {
	          v00 = v0 = false;
	          clean = 1;
	        },
	        point: function(lambda, phi) {
	          var point1 = [lambda, phi],
	              point2,
	              v = visible(lambda, phi),
	              c = smallRadius
	                ? v ? 0 : code(lambda, phi)
	                : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;
	          if (!point0 && (v00 = v0 = v)) stream.lineStart();
	          
	          
	          if (v !== v0) {
	            point2 = intersect(point0, point1);
	            if (pointEqual(point0, point2) || pointEqual(point1, point2)) {
	              point1[0] += epsilon$4;
	              point1[1] += epsilon$4;
	              v = visible(point1[0], point1[1]);
	            }
	          }
	          if (v !== v0) {
	            clean = 0;
	            if (v) {
	              
	              stream.lineStart();
	              point2 = intersect(point1, point0);
	              stream.point(point2[0], point2[1]);
	            } else {
	              
	              point2 = intersect(point0, point1);
	              stream.point(point2[0], point2[1]);
	              stream.lineEnd();
	            }
	            point0 = point2;
	          } else if (notHemisphere && point0 && smallRadius ^ v) {
	            var t;
	            
	            
	            if (!(c & c0) && (t = intersect(point1, point0, true))) {
	              clean = 0;
	              if (smallRadius) {
	                stream.lineStart();
	                stream.point(t[0][0], t[0][1]);
	                stream.point(t[1][0], t[1][1]);
	                stream.lineEnd();
	              } else {
	                stream.point(t[1][0], t[1][1]);
	                stream.lineEnd();
	                stream.lineStart();
	                stream.point(t[0][0], t[0][1]);
	              }
	            }
	          }
	          if (v && (!point0 || !pointEqual(point0, point1))) {
	            stream.point(point1[0], point1[1]);
	          }
	          point0 = point1, v0 = v, c0 = c;
	        },
	        lineEnd: function() {
	          if (v0) stream.lineEnd();
	          point0 = null;
	        },
	        
	        
	        clean: function() {
	          return clean | ((v00 && v0) << 1);
	        }
	      };
	    }
	
	    
	    function intersect(a, b, two) {
	      var pa = cartesian(a),
	          pb = cartesian(b);
	
	      
	      
	      var n1 = [1, 0, 0], 
	          n2 = cartesianCross(pa, pb),
	          n2n2 = cartesianDot(n2, n2),
	          n1n2 = n2[0], 
	          determinant = n2n2 - n1n2 * n1n2;
	
	      
	      if (!determinant) return !two && a;
	
	      var c1 =  cr * n2n2 / determinant,
	          c2 = -cr * n1n2 / determinant,
	          n1xn2 = cartesianCross(n1, n2),
	          A = cartesianScale(n1, c1),
	          B = cartesianScale(n2, c2);
	      cartesianAddInPlace(A, B);
	
	      
	      var u = n1xn2,
	          w = cartesianDot(A, u),
	          uu = cartesianDot(u, u),
	          t2 = w * w - uu * (cartesianDot(A, A) - 1);
	
	      if (t2 < 0) return;
	
	      var t = sqrt$1(t2),
	          q = cartesianScale(u, (-w - t) / uu);
	      cartesianAddInPlace(q, A);
	      q = spherical(q);
	
	      if (!two) return q;
	
	      
	      var lambda0 = a[0],
	          lambda1 = b[0],
	          phi0 = a[1],
	          phi1 = b[1],
	          z;
	
	      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;
	
	      var delta = lambda1 - lambda0,
	          polar = abs(delta - pi$4) < epsilon$4,
	          meridian = polar || delta < epsilon$4;
	
	      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;
	
	      
	      if (meridian
	          ? polar
	            ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)
	            : phi0 <= q[1] && q[1] <= phi1
	          : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
	        var q1 = cartesianScale(u, (-w + t) / uu);
	        cartesianAddInPlace(q1, A);
	        return [q, spherical(q1)];
	      }
	    }
	
	    
	    
	    function code(lambda, phi) {
	      var r = smallRadius ? radius : pi$4 - radius,
	          code = 0;
	      if (lambda < -r) code |= 1; 
	      else if (lambda > r) code |= 2; 
	      if (phi < -r) code |= 4; 
	      else if (phi > r) code |= 8; 
	      return code;
	    }
	
	    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);
	  }
	
	  function transform$1(prototype) {
	    return {
	      stream: transform$2(prototype)
	    };
	  }
	
	  function transform$2(prototype) {
	    function T() {}
	    var p = T.prototype = Object.create(Transform$1.prototype);
	    for (var k in prototype) p[k] = prototype[k];
	    return function(stream) {
	      var t = new T;
	      t.stream = stream;
	      return t;
	    };
	  }
	
	  function Transform$1() {}
	
	  Transform$1.prototype = {
	    point: function(x, y) { this.stream.point(x, y); },
	    sphere: function() { this.stream.sphere(); },
	    lineStart: function() { this.stream.lineStart(); },
	    lineEnd: function() { this.stream.lineEnd(); },
	    polygonStart: function() { this.stream.polygonStart(); },
	    polygonEnd: function() { this.stream.polygonEnd(); }
	  };
	
	  var maxDepth = 16;
	  var cosMinDistance = cos$1(30 * radians);
	  
	
	  function resample(project, delta2) {
	    return +delta2 ? resample$1(project, delta2) : resampleNone(project);
	  }
	
	  function resampleNone(project) {
	    return transform$2({
	      point: function(x, y) {
	        x = project(x, y);
	        this.stream.point(x[0], x[1]);
	      }
	    });
	  }
	
	  function resample$1(project, delta2) {
	
	    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
	      var dx = x1 - x0,
	          dy = y1 - y0,
	          d2 = dx * dx + dy * dy;
	      if (d2 > 4 * delta2 && depth--) {
	        var a = a0 + a1,
	            b = b0 + b1,
	            c = c0 + c1,
	            m = sqrt$1(a * a + b * b + c * c),
	            phi2 = asin$1(c /= m),
	            lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),
	            p = project(lambda2, phi2),
	            x2 = p[0],
	            y2 = p[1],
	            dx2 = x2 - x0,
	            dy2 = y2 - y0,
	            dz = dy * dx2 - dx * dy2;
	        if (dz * dz / d2 > delta2 
	            || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 
	            || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { 
	          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
	          stream.point(x2, y2);
	          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
	        }
	      }
	    }
	    return function(stream) {
	      var lambda00, x00, y00, a00, b00, c00, 
	          lambda0, x0, y0, a0, b0, c0; 
	
	      var resampleStream = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
	        polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
	      };
	
	      function point(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      }
	
	      function lineStart() {
	        x0 = NaN;
	        resampleStream.point = linePoint;
	        stream.lineStart();
	      }
	
	      function linePoint(lambda, phi) {
	        var c = cartesian([lambda, phi]), p = project(lambda, phi);
	        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
	        stream.point(x0, y0);
	      }
	
	      function lineEnd() {
	        resampleStream.point = point;
	        stream.lineEnd();
	      }
	
	      function ringStart() {
	        lineStart();
	        resampleStream.point = ringPoint;
	        resampleStream.lineEnd = ringEnd;
	      }
	
	      function ringPoint(lambda, phi) {
	        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
	        resampleStream.point = linePoint;
	      }
	
	      function ringEnd() {
	        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
	        resampleStream.lineEnd = lineEnd;
	        lineEnd();
	      }
	
	      return resampleStream;
	    };
	  }
	
	  var transformRadians = transform$2({
	    point: function(x, y) {
	      this.stream.point(x * radians, y * radians);
	    }
	  });
	
	  function projection(project) {
	    return projectionMutator(function() { return project; })();
	  }
	
	  function projectionMutator(projectAt) {
	    var project,
	        k = 150, 
	        x = 480, y = 250, 
	        dx, dy, lambda = 0, phi = 0, 
	        deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, 
	        theta = null, preclip = clipAntimeridian, 
	        x0 = null, y0, x1, y1, postclip = identity$7, 
	        delta2 = 0.5, projectResample = resample(projectTransform, delta2), 
	        cache,
	        cacheStream;
	
	    function projection(point) {
	      point = projectRotate(point[0] * radians, point[1] * radians);
	      return [point[0] * k + dx, dy - point[1] * k];
	    }
	
	    function invert(point) {
	      point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);
	      return point && [point[0] * degrees$1, point[1] * degrees$1];
	    }
	
	    function projectTransform(x, y) {
	      return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];
	    }
	
	    projection.stream = function(stream) {
	      return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));
	    };
	
	    projection.clipAngle = function(_) {
	      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;
	    };
	
	    projection.clipExtent = function(_) {
	      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
	    };
	
	    projection.scale = function(_) {
	      return arguments.length ? (k = +_, recenter()) : k;
	    };
	
	    projection.translate = function(_) {
	      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
	    };
	
	    projection.center = function(_) {
	      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];
	    };
	
	    projection.rotate = function(_) {
	      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];
	    };
	
	    projection.precision = function(_) {
	      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);
	    };
	
	    function recenter() {
	      projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);
	      var center = project(lambda, phi);
	      dx = x - center[0] * k;
	      dy = y + center[1] * k;
	      return reset();
	    }
	
	    function reset() {
	      cache = cacheStream = null;
	      return projection;
	    }
	
	    return function() {
	      project = projectAt.apply(this, arguments);
	      projection.invert = project.invert && invert;
	      return recenter();
	    };
	  }
	
	  function conicProjection(projectAt) {
	    var phi0 = 0,
	        phi1 = pi$4 / 3,
	        m = projectionMutator(projectAt),
	        p = m(phi0, phi1);
	
	    p.parallels = function(_) {
	      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];
	    };
	
	    return p;
	  }
	
	  function conicEqualAreaRaw(y0, y1) {
	    var sy0 = sin$1(y0),
	        n = (sy0 + sin$1(y1)) / 2,
	        c = 1 + sy0 * (2 * n - sy0),
	        r0 = sqrt$1(c) / n;
	
	    function project(x, y) {
	      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;
	      return [r * sin$1(x *= n), r0 - r * cos$1(x)];
	    }
	
	    project.invert = function(x, y) {
	      var r0y = r0 - y;
	      return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
	    };
	
	    return project;
	  }
	
	  function conicEqualArea() {
	    return conicProjection(conicEqualAreaRaw)
	        .scale(151)
	        .translate([480, 347]);
	  }
	
	  function albers() {
	    return conicEqualArea()
	        .parallels([29.5, 45.5])
	        .scale(1070)
	        .translate([480, 250])
	        .rotate([96, 0])
	        .center([-0.6, 38.7]);
	  }
	
	  
	  
	  function multiplex(streams) {
	    var n = streams.length;
	    return {
	      point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },
	      sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },
	      lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },
	      lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },
	      polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },
	      polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }
	    };
	  }
	
	  
	  
	  
	  
	  function albersUsa() {
	    var cache,
	        cacheStream,
	        lower48 = albers(), lower48Point,
	        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, 
	        hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, 
	        point, pointStream = {point: function(x, y) { point = [x, y]; }};
	
	    function albersUsa(coordinates) {
	      var x = coordinates[0], y = coordinates[1];
	      return point = null,
	          (lower48Point.point(x, y), point)
	          || (alaskaPoint.point(x, y), point)
	          || (hawaiiPoint.point(x, y), point);
	    }
	
	    albersUsa.invert = function(coordinates) {
	      var k = lower48.scale(),
	          t = lower48.translate(),
	          x = (coordinates[0] - t[0]) / k,
	          y = (coordinates[1] - t[1]) / k;
	      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska
	          : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii
	          : lower48).invert(coordinates);
	    };
	
	    albersUsa.stream = function(stream) {
	      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
	    };
	
	    albersUsa.precision = function(_) {
	      if (!arguments.length) return lower48.precision();
	      lower48.precision(_), alaska.precision(_), hawaii.precision(_);
	      return albersUsa;
	    };
	
	    albersUsa.scale = function(_) {
	      if (!arguments.length) return lower48.scale();
	      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
	      return albersUsa.translate(lower48.translate());
	    };
	
	    albersUsa.translate = function(_) {
	      if (!arguments.length) return lower48.translate();
	      var k = lower48.scale(), x = +_[0], y = +_[1];
	
	      lower48Point = lower48
	          .translate(_)
	          .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])
	          .stream(pointStream);
	
	      alaskaPoint = alaska
	          .translate([x - 0.307 * k, y + 0.201 * k])
	          .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])
	          .stream(pointStream);
	
	      hawaiiPoint = hawaii
	          .translate([x - 0.205 * k, y + 0.212 * k])
	          .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])
	          .stream(pointStream);
	
	      return albersUsa;
	    };
	
	    return albersUsa.scale(1070);
	  }
	
	  function azimuthalRaw(scale) {
	    return function(x, y) {
	      var cx = cos$1(x),
	          cy = cos$1(y),
	          k = scale(cx * cy);
	      return [
	        k * cy * sin$1(x),
	        k * sin$1(y)
	      ];
	    }
	  }
	
	  function azimuthalInvert(angle) {
	    return function(x, y) {
	      var z = sqrt$1(x * x + y * y),
	          c = angle(z),
	          sc = sin$1(c),
	          cc = cos$1(c);
	      return [
	        atan2(x * sc, z * cc),
	        asin$1(z && y * sc / z)
	      ];
	    }
	  }
	
	  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
	    return sqrt$1(2 / (1 + cxcy));
	  });
	
	  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {
	    return 2 * asin$1(z / 2);
	  });
	
	  function azimuthalEqualArea() {
	    return projection(azimuthalEqualAreaRaw)
	        .scale(120)
	        .clipAngle(180 - 1e-3);
	  }
	
	  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {
	    return (c = acos(c)) && c / sin$1(c);
	  });
	
	  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {
	    return z;
	  });
	
	  function azimuthalEquidistant() {
	    return projection(azimuthalEquidistantRaw)
	        .scale(480 / tau$4)
	        .clipAngle(180 - 1e-3);
	  }
	
	  function mercatorRaw(lambda, phi) {
	    return [lambda, log$1(tan((halfPi$3 + phi) / 2))];
	  }
	
	  mercatorRaw.invert = function(x, y) {
	    return [x, 2 * atan(exp(y)) - halfPi$3];
	  };
	
	  function mercator() {
	    return mercatorProjection(mercatorRaw);
	  }
	
	  function mercatorProjection(project) {
	    var m = projection(project),
	        scale = m.scale,
	        translate = m.translate,
	        clipExtent = m.clipExtent,
	        clipAuto;
	
	    m.scale = function(_) {
	      return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();
	    };
	
	    m.translate = function(_) {
	      return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();
	    };
	
	    m.clipExtent = function(_) {
	      if (!arguments.length) return clipAuto ? null : clipExtent();
	      if (clipAuto = _ == null) {
	        var k = pi$4 * scale(), t = translate();
	        _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];
	      }
	      clipExtent(_);
	      return m;
	    };
	
	    return m.clipExtent(null).scale(961 / tau$4);
	  }
	
	  function tany(y) {
	    return tan((halfPi$3 + y) / 2);
	  }
	
	  function conicConformalRaw(y0, y1) {
	    var cy0 = cos$1(y0),
	        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),
	        f = cy0 * pow$1(tany(y0), n) / n;
	
	    if (!n) return mercatorRaw;
	
	    function project(x, y) {
	      if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }
	      else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }
	      var r = f / pow$1(tany(y), n);
	      return [r * sin$1(n * x), f - r * cos$1(n * x)];
	    }
	
	    project.invert = function(x, y) {
	      var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);
	      return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];
	    };
	
	    return project;
	  }
	
	  function conicConformal() {
	    return conicProjection(conicConformalRaw);
	  }
	
	  function equirectangularRaw(lambda, phi) {
	    return [lambda, phi];
	  }
	
	  equirectangularRaw.invert = equirectangularRaw;
	
	  function equirectangular() {
	    return projection(equirectangularRaw).scale(480 / pi$4);
	  }
	
	  function conicEquidistantRaw(y0, y1) {
	    var cy0 = cos$1(y0),
	        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),
	        g = cy0 / n + y0;
	
	    if (abs(n) < epsilon$4) return equirectangularRaw;
	
	    function project(x, y) {
	      var gy = g - y, nx = n * x;
	      return [gy * sin$1(nx), g - gy * cos$1(nx)];
	    }
	
	    project.invert = function(x, y) {
	      var gy = g - y;
	      return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];
	    };
	
	    return project;
	  }
	
	  function conicEquidistant() {
	    return conicProjection(conicEquidistantRaw)
	        .scale(128)
	        .translate([480, 280]);
	  }
	
	  function gnomonicRaw(x, y) {
	    var cy = cos$1(y), k = cos$1(x) * cy;
	    return [cy * sin$1(x) / k, sin$1(y) / k];
	  }
	
	  gnomonicRaw.invert = azimuthalInvert(atan);
	
	  function gnomonic() {
	    return projection(gnomonicRaw)
	        .scale(139)
	        .clipAngle(60);
	  }
	
	  function orthographicRaw(x, y) {
	    return [cos$1(y) * sin$1(x), sin$1(y)];
	  }
	
	  orthographicRaw.invert = azimuthalInvert(asin$1);
	
	  function orthographic() {
	    return projection(orthographicRaw)
	        .scale(240)
	        .clipAngle(90 + epsilon$4);
	  }
	
	  function stereographicRaw(x, y) {
	    var cy = cos$1(y), k = 1 + cos$1(x) * cy;
	    return [cy * sin$1(x) / k, sin$1(y) / k];
	  }
	
	  stereographicRaw.invert = azimuthalInvert(function(z) {
	    return 2 + atan(z);
	  });
	
	  function stereographic() {
	    return projection(stereographicRaw)
	        .scale(240)
	        .clipAngle(142);
	  }
	
	  function transverseMercatorRaw(lambda, phi) {
	    return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];
	  }
	
	  transverseMercatorRaw.invert = function(x, y) {
	    return [-y, 2 * atan(exp(x)) - halfPi$3];
	  };
	
	  function transverseMercator() {
	    var m = mercatorProjection(transverseMercatorRaw),
	        center = m.center,
	        rotate = m.rotate;
	
	    m.center = function(_) {
	      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
	    };
	
	    m.rotate = function(_) {
	      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
	    };
	
	    return rotate([0, 0, 90]);
	  }
	
	  exports.version = version;
	  exports.bisect = bisectRight;
	  exports.bisectRight = bisectRight;
	  exports.bisectLeft = bisectLeft;
	  exports.ascending = ascending;
	  exports.bisector = bisector;
	  exports.descending = descending;
	  exports.deviation = deviation;
	  exports.extent = extent;
	  exports.histogram = histogram;
	  exports.thresholdFreedmanDiaconis = freedmanDiaconis;
	  exports.thresholdScott = scott;
	  exports.thresholdSturges = sturges;
	  exports.max = max;
	  exports.mean = mean;
	  exports.median = median;
	  exports.merge = merge;
	  exports.min = min;
	  exports.pairs = pairs;
	  exports.permute = permute;
	  exports.quantile = threshold;
	  exports.range = range;
	  exports.scan = scan;
	  exports.shuffle = shuffle;
	  exports.sum = sum;
	  exports.ticks = ticks;
	  exports.tickStep = tickStep;
	  exports.transpose = transpose;
	  exports.variance = variance;
	  exports.zip = zip;
	  exports.entries = entries;
	  exports.keys = keys;
	  exports.values = values;
	  exports.map = map$1;
	  exports.set = set;
	  exports.nest = nest;
	  exports.randomUniform = uniform;
	  exports.randomNormal = normal;
	  exports.randomLogNormal = logNormal;
	  exports.randomBates = bates;
	  exports.randomIrwinHall = irwinHall;
	  exports.randomExponential = exponential;
	  exports.easeLinear = linear;
	  exports.easeQuad = quadInOut;
	  exports.easeQuadIn = quadIn;
	  exports.easeQuadOut = quadOut;
	  exports.easeQuadInOut = quadInOut;
	  exports.easeCubic = easeCubicInOut;
	  exports.easeCubicIn = cubicIn;
	  exports.easeCubicOut = cubicOut;
	  exports.easeCubicInOut = easeCubicInOut;
	  exports.easePoly = polyInOut;
	  exports.easePolyIn = polyIn;
	  exports.easePolyOut = polyOut;
	  exports.easePolyInOut = polyInOut;
	  exports.easeSin = sinInOut;
	  exports.easeSinIn = sinIn;
	  exports.easeSinOut = sinOut;
	  exports.easeSinInOut = sinInOut;
	  exports.easeExp = expInOut;
	  exports.easeExpIn = expIn;
	  exports.easeExpOut = expOut;
	  exports.easeExpInOut = expInOut;
	  exports.easeCircle = circleInOut;
	  exports.easeCircleIn = circleIn;
	  exports.easeCircleOut = circleOut;
	  exports.easeCircleInOut = circleInOut;
	  exports.easeBounce = bounceOut;
	  exports.easeBounceIn = bounceIn;
	  exports.easeBounceOut = bounceOut;
	  exports.easeBounceInOut = bounceInOut;
	  exports.easeBack = backInOut;
	  exports.easeBackIn = backIn;
	  exports.easeBackOut = backOut;
	  exports.easeBackInOut = backInOut;
	  exports.easeElastic = elasticOut;
	  exports.easeElasticIn = elasticIn;
	  exports.easeElasticOut = elasticOut;
	  exports.easeElasticInOut = elasticInOut;
	  exports.polygonArea = area;
	  exports.polygonCentroid = centroid;
	  exports.polygonHull = hull;
	  exports.polygonContains = contains;
	  exports.polygonLength = length$1;
	  exports.path = path;
	  exports.quadtree = quadtree;
	  exports.queue = queue;
	  exports.arc = arc;
	  exports.area = area$1;
	  exports.line = line;
	  exports.pie = pie;
	  exports.radialArea = radialArea;
	  exports.radialLine = radialLine$1;
	  exports.symbol = symbol;
	  exports.symbols = symbols;
	  exports.symbolCircle = circle;
	  exports.symbolCross = cross$1;
	  exports.symbolDiamond = diamond;
	  exports.symbolSquare = square;
	  exports.symbolStar = star;
	  exports.symbolTriangle = triangle;
	  exports.symbolWye = wye;
	  exports.curveBasisClosed = basisClosed;
	  exports.curveBasisOpen = basisOpen;
	  exports.curveBasis = basis;
	  exports.curveBundle = bundle;
	  exports.curveCardinalClosed = cardinalClosed;
	  exports.curveCardinalOpen = cardinalOpen;
	  exports.curveCardinal = cardinal;
	  exports.curveCatmullRomClosed = catmullRomClosed;
	  exports.curveCatmullRomOpen = catmullRomOpen;
	  exports.curveCatmullRom = catmullRom;
	  exports.curveLinearClosed = linearClosed;
	  exports.curveLinear = curveLinear;
	  exports.curveMonotoneX = monotoneX;
	  exports.curveMonotoneY = monotoneY;
	  exports.curveNatural = natural;
	  exports.curveStep = step;
	  exports.curveStepAfter = stepAfter;
	  exports.curveStepBefore = stepBefore;
	  exports.stack = stack;
	  exports.stackOffsetExpand = expand;
	  exports.stackOffsetNone = none;
	  exports.stackOffsetSilhouette = silhouette;
	  exports.stackOffsetWiggle = wiggle;
	  exports.stackOrderAscending = ascending$1;
	  exports.stackOrderDescending = descending$2;
	  exports.stackOrderInsideOut = insideOut;
	  exports.stackOrderNone = none$1;
	  exports.stackOrderReverse = reverse;
	  exports.color = color;
	  exports.rgb = colorRgb;
	  exports.hsl = colorHsl;
	  exports.lab = lab;
	  exports.hcl = colorHcl;
	  exports.cubehelix = cubehelix;
	  exports.interpolate = interpolate;
	  exports.interpolateArray = array$1;
	  exports.interpolateDate = date;
	  exports.interpolateNumber = interpolateNumber;
	  exports.interpolateObject = object;
	  exports.interpolateRound = interpolateRound;
	  exports.interpolateString = interpolateString;
	  exports.interpolateTransformCss = interpolateTransform$1;
	  exports.interpolateTransformSvg = interpolateTransform$2;
	  exports.interpolateZoom = interpolateZoom;
	  exports.interpolateRgb = interpolateRgb;
	  exports.interpolateRgbBasis = rgbBasis;
	  exports.interpolateRgbBasisClosed = rgbBasisClosed;
	  exports.interpolateHsl = hsl$1;
	  exports.interpolateHslLong = hslLong;
	  exports.interpolateLab = lab$1;
	  exports.interpolateHcl = hcl$1;
	  exports.interpolateHclLong = hclLong;
	  exports.interpolateCubehelix = cubehelix$2;
	  exports.interpolateCubehelixLong = interpolateCubehelixLong;
	  exports.interpolateBasis = basis$2;
	  exports.interpolateBasisClosed = basisClosed$1;
	  exports.quantize = quantize;
	  exports.dispatch = dispatch;
	  exports.dsvFormat = dsv;
	  exports.csvParse = csvParse;
	  exports.csvParseRows = csvParseRows;
	  exports.csvFormat = csvFormat;
	  exports.csvFormatRows = csvFormatRows;
	  exports.tsvParse = tsvParse;
	  exports.tsvParseRows = tsvParseRows;
	  exports.tsvFormat = tsvFormat;
	  exports.tsvFormatRows = tsvFormatRows;
	  exports.request = request;
	  exports.html = html;
	  exports.json = json;
	  exports.text = text;
	  exports.xml = xml;
	  exports.csv = csv$1;
	  exports.tsv = tsv$1;
	  exports.now = now;
	  exports.timer = timer;
	  exports.timerFlush = timerFlush;
	  exports.timeout = timeout$1;
	  exports.interval = interval$1;
	  exports.timeInterval = newInterval;
	  exports.timeMillisecond = millisecond;
	  exports.timeMilliseconds = milliseconds;
	  exports.timeSecond = second;
	  exports.timeSeconds = seconds;
	  exports.timeMinute = minute;
	  exports.timeMinutes = minutes;
	  exports.timeHour = hour;
	  exports.timeHours = hours;
	  exports.timeDay = day;
	  exports.timeDays = days;
	  exports.timeWeek = timeWeek;
	  exports.timeWeeks = sundays;
	  exports.timeSunday = timeWeek;
	  exports.timeSundays = sundays;
	  exports.timeMonday = timeMonday;
	  exports.timeMondays = mondays;
	  exports.timeTuesday = tuesday;
	  exports.timeTuesdays = tuesdays;
	  exports.timeWednesday = wednesday;
	  exports.timeWednesdays = wednesdays;
	  exports.timeThursday = thursday;
	  exports.timeThursdays = thursdays;
	  exports.timeFriday = friday;
	  exports.timeFridays = fridays;
	  exports.timeSaturday = saturday;
	  exports.timeSaturdays = saturdays;
	  exports.timeMonth = month;
	  exports.timeMonths = months;
	  exports.timeYear = year;
	  exports.timeYears = years;
	  exports.utcMillisecond = millisecond;
	  exports.utcMilliseconds = milliseconds;
	  exports.utcSecond = second;
	  exports.utcSeconds = seconds;
	  exports.utcMinute = utcMinute;
	  exports.utcMinutes = utcMinutes;
	  exports.utcHour = utcHour;
	  exports.utcHours = utcHours;
	  exports.utcDay = utcDay;
	  exports.utcDays = utcDays;
	  exports.utcWeek = utcWeek;
	  exports.utcWeeks = utcSundays;
	  exports.utcSunday = utcWeek;
	  exports.utcSundays = utcSundays;
	  exports.utcMonday = utcMonday;
	  exports.utcMondays = utcMondays;
	  exports.utcTuesday = utcTuesday;
	  exports.utcTuesdays = utcTuesdays;
	  exports.utcWednesday = utcWednesday;
	  exports.utcWednesdays = utcWednesdays;
	  exports.utcThursday = utcThursday;
	  exports.utcThursdays = utcThursdays;
	  exports.utcFriday = utcFriday;
	  exports.utcFridays = utcFridays;
	  exports.utcSaturday = utcSaturday;
	  exports.utcSaturdays = utcSaturdays;
	  exports.utcMonth = utcMonth;
	  exports.utcMonths = utcMonths;
	  exports.utcYear = utcYear;
	  exports.utcYears = utcYears;
	  exports.formatLocale = formatLocale;
	  exports.formatDefaultLocale = defaultLocale;
	  exports.formatSpecifier = formatSpecifier;
	  exports.precisionFixed = precisionFixed;
	  exports.precisionPrefix = precisionPrefix;
	  exports.precisionRound = precisionRound;
	  exports.isoFormat = formatIso;
	  exports.isoParse = parseIso;
	  exports.timeFormatLocale = formatLocale$1;
	  exports.timeFormatDefaultLocale = defaultLocale$1;
	  exports.scaleBand = band;
	  exports.scalePoint = point$4;
	  exports.scaleIdentity = identity$4;
	  exports.scaleLinear = linear$2;
	  exports.scaleLog = log;
	  exports.scaleOrdinal = ordinal;
	  exports.scaleImplicit = implicit;
	  exports.scalePow = pow;
	  exports.scaleSqrt = sqrt;
	  exports.scaleQuantile = quantile;
	  exports.scaleQuantize = quantize$1;
	  exports.scaleThreshold = threshold$1;
	  exports.scaleTime = time;
	  exports.scaleUtc = utcTime;
	  exports.schemeCategory10 = category10;
	  exports.schemeCategory20b = category20b;
	  exports.schemeCategory20c = category20c;
	  exports.schemeCategory20 = category20;
	  exports.scaleSequential = sequential;
	  exports.interpolateCubehelixDefault = cubehelix$3;
	  exports.interpolateRainbow = rainbow$1;
	  exports.interpolateWarm = warm;
	  exports.interpolateCool = cool;
	  exports.interpolateViridis = viridis;
	  exports.interpolateMagma = magma;
	  exports.interpolateInferno = inferno;
	  exports.interpolatePlasma = plasma;
	  exports.creator = creator;
	  exports.customEvent = customEvent;
	  exports.local = local;
	  exports.matcher = matcher$1;
	  exports.mouse = mouse;
	  exports.namespace = namespace;
	  exports.namespaces = namespaces;
	  exports.select = select;
	  exports.selectAll = selectAll;
	  exports.selection = selection;
	  exports.selector = selector;
	  exports.selectorAll = selectorAll;
	  exports.touch = touch;
	  exports.touches = touches;
	  exports.window = window;
	  exports.active = active;
	  exports.interrupt = interrupt;
	  exports.transition = transition;
	  exports.axisTop = axisTop;
	  exports.axisRight = axisRight;
	  exports.axisBottom = axisBottom;
	  exports.axisLeft = axisLeft;
	  exports.cluster = cluster;
	  exports.hierarchy = hierarchy;
	  exports.pack = index;
	  exports.packSiblings = siblings;
	  exports.packEnclose = enclose;
	  exports.partition = partition;
	  exports.stratify = stratify;
	  exports.tree = tree;
	  exports.treemap = index$1;
	  exports.treemapBinary = binary;
	  exports.treemapDice = treemapDice;
	  exports.treemapSlice = treemapSlice;
	  exports.treemapSliceDice = sliceDice;
	  exports.treemapSquarify = squarify;
	  exports.treemapResquarify = resquarify;
	  exports.forceCenter = center$1;
	  exports.forceCollide = collide;
	  exports.forceLink = link;
	  exports.forceManyBody = manyBody;
	  exports.forceSimulation = simulation;
	  exports.forceX = x$3;
	  exports.forceY = y$3;
	  exports.drag = drag;
	  exports.dragDisable = dragDisable;
	  exports.dragEnable = dragEnable;
	  exports.voronoi = voronoi;
	  exports.zoom = zoom;
	  exports.zoomIdentity = identity$6;
	  exports.zoomTransform = transform;
	  exports.brush = brush;
	  exports.brushX = brushX;
	  exports.brushY = brushY;
	  exports.brushSelection = brushSelection;
	  exports.chord = chord;
	  exports.ribbon = ribbon;
	  exports.geoAlbers = albers;
	  exports.geoAlbersUsa = albersUsa;
	  exports.geoArea = area$2;
	  exports.geoAzimuthalEqualArea = azimuthalEqualArea;
	  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
	  exports.geoAzimuthalEquidistant = azimuthalEquidistant;
	  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;
	  exports.geoBounds = bounds;
	  exports.geoCentroid = centroid$1;
	  exports.geoCircle = circle$1;
	  exports.geoClipExtent = extent$1;
	  exports.geoConicConformal = conicConformal;
	  exports.geoConicConformalRaw = conicConformalRaw;
	  exports.geoConicEqualArea = conicEqualArea;
	  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;
	  exports.geoConicEquidistant = conicEquidistant;
	  exports.geoConicEquidistantRaw = conicEquidistantRaw;
	  exports.geoDistance = distance;
	  exports.geoEquirectangular = equirectangular;
	  exports.geoEquirectangularRaw = equirectangularRaw;
	  exports.geoGnomonic = gnomonic;
	  exports.geoGnomonicRaw = gnomonicRaw;
	  exports.geoGraticule = graticule;
	  exports.geoInterpolate = interpolate$2;
	  exports.geoLength = length$2;
	  exports.geoMercator = mercator;
	  exports.geoMercatorRaw = mercatorRaw;
	  exports.geoOrthographic = orthographic;
	  exports.geoOrthographicRaw = orthographicRaw;
	  exports.geoPath = index$3;
	  exports.geoProjection = projection;
	  exports.geoProjectionMutator = projectionMutator;
	  exports.geoRotation = rotation;
	  exports.geoStereographic = stereographic;
	  exports.geoStereographicRaw = stereographicRaw;
	  exports.geoStream = stream;
	  exports.geoTransform = transform$1;
	  exports.geoTransverseMercator = transverseMercator;
	  exports.geoTransverseMercatorRaw = transverseMercatorRaw;
	
	  Object.defineProperty(exports, '__esModule', { value: true });
	
	}));

 },

 function(module, exports, __webpack_require__) {

	 if (false) { (function () { var ReactHotAPI = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(172);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(198);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(199);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(203);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(250);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _rebass = __webpack_require__(261);
	
	var _reactPopover = __webpack_require__(360);
	
	var _reactPopover2 = _interopRequireDefault(_reactPopover);
	
	var _NodeUp = __webpack_require__(385);
	
	var _NodeUp2 = _interopRequireDefault(_NodeUp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Node = function (_React$Component) {
	  (0, _inherits3['default'])(Node, _React$Component);
	
	  function Node(props) {
	    (0, _classCallCheck3['default'])(this, Node);
	
	    var _this = (0, _possibleConstructorReturn3['default'])(this, (0, _getPrototypeOf2['default'])(Node).call(this, props));
	
	    _this.state = { isOpen: false }; 
	    _this.toggle = _this.toggle.bind(_this);
	    _this.close = _this.close.bind(_this);
	    return _this;
	  }
	
	  (0, _createClass3['default'])(Node, [{
	    key: 'toggle',
	    value: function () {
	      function toggle() {
	        
	        var bool = !this.state.isOpen;
	        return wrapper(this.setState)({ isOpen: bool }, 'Node');
	      }
	
	      return toggle;
	    }()
	  }, {
	    key: 'close',
	    value: function () {
	      function close() {
	        return wrapper(this.setState)({ isOpen: false }, 'Node');
	      }
	
	      return close;
	    }()
	  }, {
	    key: 'render',
	    value: function () {
	      function render() {
	        
	        var bgColor = '#FAFAFA';
	        if (this.props.state.length !== 0) bgColor = '#B3E5FC';
	        
	        var style = {
	          transform: 'translate(' + this.props.xtranslate + 'px,' + this.props.ytranslate + 'px)',
	          width: this.props.width,
	          height: this.props.height,
	          cursor: 'pointer',
	          backgroundColor: bgColor,
	          borderRadius: '5px',
	          boxShadow: '0 0 1em #90A4AE',
	          fontSize: '14px',
	          textDecoration: 'none'
	        };
	        var propsArr = [];
	        var methodsArr = [];
	        if (this.props.props.length !== 0) propsArr = this.props.props.map(function (ele) {
	          return ele.name;
	        });
	        if (this.props.methods.length !== 0) methodsArr = this.props.methods;
	
	        return _react2['default'].createElement(
	          'foreignObject',
	          { onMouseEnter: this.props.highlight, onMouseLeave: this.props.lowlight, onClick: this.toggle },
	          _react2['default'].createElement(
	            _reactPopover2['default'],
	            { isOpen: this.state.isOpen, preferPlace: 'row', onOuterAction: this.close, body: _react2['default'].createElement(_NodeUp2['default'], { state: this.props.state, props: this.props.props }) },
	            _react2['default'].createElement(
	              _rebass.Panel,
	              {
	                className: 'node',
	                style: style,
	                theme: 'secondary',
	                p: 0,
	                my: 0
	              },
	              _react2['default'].createElement(
	                _rebass.Block,
	                { borderLeft: true,
	                  borderColor: '#263238',
	                  backgroundColor: '#1976D2',
	                  color: '#FAFAFA',
	                  px: 2,
	                  py: 0,
	                  my: 0
	                },
	                _react2['default'].createElement(
	                  _rebass.Heading,
	                  { size: 3 },
	                  this.props.name.toUpperCase()
	                )
	              ),
	              _react2['default'].createElement(
	                _rebass.Text,
	                { px: 1 },
	                'Props: ',
	                _react2['default'].createElement('br', null),
	                propsArr.join(' | '),
	                ' ',
	                _react2['default'].createElement('br', null)
	              ),
	              _react2['default'].createElement('br', null),
	              _react2['default'].createElement(
	                _rebass.Text,
	                { small: true, px: 1 },
	                'Methods:',
	                methodsArr.join('| ')
	              )
	            )
	          )
	        );
	      }
	
	      return render;
	    }()
	  }]);
	  return Node;
	}(_react2['default'].Component);
	
	Node.propTypes = {
	  xtranslate: _react2['default'].PropTypes.number,
	  ytranslate: _react2['default'].PropTypes.number,
	  name: _react2['default'].PropTypes.string,
	  props: _react2['default'].PropTypes.array,
	  state: _react2['default'].PropTypes.array,
	  methods: _react2['default'].PropTypes.array,
	  width: _react2['default'].PropTypes.number,
	  height: _react2['default'].PropTypes.number,
	  highlight: _react2['default'].PropTypes.func,
	  lowlight: _react2['default'].PropTypes.func
	};
	
	Node.defaultProps = {
	  xtranslate: 0,
	  ytranslate: 0,
	  name: 'something messed up',
	  props: [],
	  state: [],
	  methods: [],
	  width: 200,
	  height: 100
	};
	
	exports['default'] = Node;
	
	 }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Node.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Tooltip = exports.Toolbar = exports.Textarea = exports.Text = exports.Table = exports.Switch = exports.Stat = exports.Space = exports.Slider = exports.SequenceMapStep = exports.SequenceMap = exports.Select = exports.SectionHeader = exports.Section = exports.Rating = exports.Radio = exports.Progress = exports.Pre = exports.PanelHeader = exports.PanelFooter = exports.Panel = exports.PageHeader = exports.Overlay = exports.NavItem = exports.Message = exports.Menu = exports.Media = exports.LinkBlock = exports.Label = exports.InlineForm = exports.Input = exports.HeadingLink = exports.Heading = exports.Footer = exports.Fixed = exports.Embed = exports.DropdownMenu = exports.Dropdown = exports.Drawer = exports.DotIndicator = exports.Donut = exports.Divider = exports.Container = exports.Close = exports.Checkbox = exports.CardImage = exports.Card = exports.ButtonOutline = exports.ButtonCircle = exports.Button = exports.Breadcrumbs = exports.Blockquote = exports.Block = exports.Banner = exports.Badge = exports.Avatar = exports.Arrow = exports.config = exports.Base = undefined;
	
	var _Base = __webpack_require__(262);
	
	Object.defineProperty(exports, 'Base', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Base).default;
	  }
	});
	
	var _config = __webpack_require__(301);
	
	Object.defineProperty(exports, 'config', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_config).default;
	  }
	});
	
	var _Arrow = __webpack_require__(302);
	
	Object.defineProperty(exports, 'Arrow', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Arrow).default;
	  }
	});
	
	var _Avatar = __webpack_require__(303);
	
	Object.defineProperty(exports, 'Avatar', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Avatar).default;
	  }
	});
	
	var _Badge = __webpack_require__(304);
	
	Object.defineProperty(exports, 'Badge', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Badge).default;
	  }
	});
	
	var _Banner = __webpack_require__(305);
	
	Object.defineProperty(exports, 'Banner', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Banner).default;
	  }
	});
	
	var _Block = __webpack_require__(306);
	
	Object.defineProperty(exports, 'Block', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Block).default;
	  }
	});
	
	var _Blockquote = __webpack_require__(307);
	
	Object.defineProperty(exports, 'Blockquote', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Blockquote).default;
	  }
	});
	
	var _Breadcrumbs = __webpack_require__(308);
	
	Object.defineProperty(exports, 'Breadcrumbs', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Breadcrumbs).default;
	  }
	});
	
	var _Button = __webpack_require__(309);
	
	Object.defineProperty(exports, 'Button', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Button).default;
	  }
	});
	
	var _ButtonCircle = __webpack_require__(310);
	
	Object.defineProperty(exports, 'ButtonCircle', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ButtonCircle).default;
	  }
	});
	
	var _ButtonOutline = __webpack_require__(311);
	
	Object.defineProperty(exports, 'ButtonOutline', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ButtonOutline).default;
	  }
	});
	
	var _Card = __webpack_require__(312);
	
	Object.defineProperty(exports, 'Card', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Card).default;
	  }
	});
	
	var _CardImage = __webpack_require__(313);
	
	Object.defineProperty(exports, 'CardImage', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CardImage).default;
	  }
	});
	
	var _Checkbox = __webpack_require__(314);
	
	Object.defineProperty(exports, 'Checkbox', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Checkbox).default;
	  }
	});
	
	var _Close = __webpack_require__(317);
	
	Object.defineProperty(exports, 'Close', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Close).default;
	  }
	});
	
	var _Container = __webpack_require__(318);
	
	Object.defineProperty(exports, 'Container', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Container).default;
	  }
	});
	
	var _Divider = __webpack_require__(319);
	
	Object.defineProperty(exports, 'Divider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Divider).default;
	  }
	});
	
	var _Donut = __webpack_require__(320);
	
	Object.defineProperty(exports, 'Donut', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Donut).default;
	  }
	});
	
	var _DotIndicator = __webpack_require__(321);
	
	Object.defineProperty(exports, 'DotIndicator', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DotIndicator).default;
	  }
	});
	
	var _Drawer = __webpack_require__(322);
	
	Object.defineProperty(exports, 'Drawer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Drawer).default;
	  }
	});
	
	var _Dropdown = __webpack_require__(323);
	
	Object.defineProperty(exports, 'Dropdown', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Dropdown).default;
	  }
	});
	
	var _DropdownMenu = __webpack_require__(324);
	
	Object.defineProperty(exports, 'DropdownMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DropdownMenu).default;
	  }
	});
	
	var _Embed = __webpack_require__(326);
	
	Object.defineProperty(exports, 'Embed', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Embed).default;
	  }
	});
	
	var _Fixed = __webpack_require__(327);
	
	Object.defineProperty(exports, 'Fixed', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Fixed).default;
	  }
	});
	
	var _Footer = __webpack_require__(328);
	
	Object.defineProperty(exports, 'Footer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Footer).default;
	  }
	});
	
	var _Heading = __webpack_require__(329);
	
	Object.defineProperty(exports, 'Heading', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Heading).default;
	  }
	});
	
	var _HeadingLink = __webpack_require__(330);
	
	Object.defineProperty(exports, 'HeadingLink', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_HeadingLink).default;
	  }
	});
	
	var _Input = __webpack_require__(331);
	
	Object.defineProperty(exports, 'Input', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Input).default;
	  }
	});
	
	var _InlineForm = __webpack_require__(333);
	
	Object.defineProperty(exports, 'InlineForm', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_InlineForm).default;
	  }
	});
	
	var _Label = __webpack_require__(316);
	
	Object.defineProperty(exports, 'Label', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Label).default;
	  }
	});
	
	var _LinkBlock = __webpack_require__(334);
	
	Object.defineProperty(exports, 'LinkBlock', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LinkBlock).default;
	  }
	});
	
	var _Media = __webpack_require__(335);
	
	Object.defineProperty(exports, 'Media', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Media).default;
	  }
	});
	
	var _Menu = __webpack_require__(325);
	
	Object.defineProperty(exports, 'Menu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Menu).default;
	  }
	});
	
	var _Message = __webpack_require__(336);
	
	Object.defineProperty(exports, 'Message', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Message).default;
	  }
	});
	
	var _NavItem = __webpack_require__(337);
	
	Object.defineProperty(exports, 'NavItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_NavItem).default;
	  }
	});
	
	var _Overlay = __webpack_require__(338);
	
	Object.defineProperty(exports, 'Overlay', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Overlay).default;
	  }
	});
	
	var _PageHeader = __webpack_require__(339);
	
	Object.defineProperty(exports, 'PageHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PageHeader).default;
	  }
	});
	
	var _Panel = __webpack_require__(340);
	
	Object.defineProperty(exports, 'Panel', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Panel).default;
	  }
	});
	
	var _PanelFooter = __webpack_require__(341);
	
	Object.defineProperty(exports, 'PanelFooter', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PanelFooter).default;
	  }
	});
	
	var _PanelHeader = __webpack_require__(342);
	
	Object.defineProperty(exports, 'PanelHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PanelHeader).default;
	  }
	});
	
	var _Pre = __webpack_require__(343);
	
	Object.defineProperty(exports, 'Pre', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Pre).default;
	  }
	});
	
	var _Progress = __webpack_require__(344);
	
	Object.defineProperty(exports, 'Progress', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Progress).default;
	  }
	});
	
	var _Radio = __webpack_require__(345);
	
	Object.defineProperty(exports, 'Radio', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Radio).default;
	  }
	});
	
	var _Rating = __webpack_require__(346);
	
	Object.defineProperty(exports, 'Rating', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Rating).default;
	  }
	});
	
	var _Section = __webpack_require__(347);
	
	Object.defineProperty(exports, 'Section', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Section).default;
	  }
	});
	
	var _SectionHeader = __webpack_require__(348);
	
	Object.defineProperty(exports, 'SectionHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SectionHeader).default;
	  }
	});
	
	var _Select = __webpack_require__(349);
	
	Object.defineProperty(exports, 'Select', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Select).default;
	  }
	});
	
	var _SequenceMap = __webpack_require__(350);
	
	Object.defineProperty(exports, 'SequenceMap', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SequenceMap).default;
	  }
	});
	
	var _SequenceMapStep = __webpack_require__(351);
	
	Object.defineProperty(exports, 'SequenceMapStep', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SequenceMapStep).default;
	  }
	});
	
	var _Slider = __webpack_require__(352);
	
	Object.defineProperty(exports, 'Slider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Slider).default;
	  }
	});
	
	var _Space = __webpack_require__(353);
	
	Object.defineProperty(exports, 'Space', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Space).default;
	  }
	});
	
	var _Stat = __webpack_require__(354);
	
	Object.defineProperty(exports, 'Stat', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Stat).default;
	  }
	});
	
	var _Switch = __webpack_require__(355);
	
	Object.defineProperty(exports, 'Switch', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Switch).default;
	  }
	});
	
	var _Table = __webpack_require__(356);
	
	Object.defineProperty(exports, 'Table', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Table).default;
	  }
	});
	
	var _Text = __webpack_require__(332);
	
	Object.defineProperty(exports, 'Text', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Text).default;
	  }
	});
	
	var _Textarea = __webpack_require__(357);
	
	Object.defineProperty(exports, 'Textarea', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Textarea).default;
	  }
	});
	
	var _Toolbar = __webpack_require__(358);
	
	Object.defineProperty(exports, 'Toolbar', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Toolbar).default;
	  }
	});
	
	var _Tooltip = __webpack_require__(359);
	
	Object.defineProperty(exports, 'Tooltip', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Tooltip).default;
	  }
	});
	
	var _ = __webpack_require__(261);
	
	var Rebass = _interopRequireWildcard(_);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = Rebass;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsPureRenderMixin = __webpack_require__(293);
	
	var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
	
	var _objectAssign = __webpack_require__(5);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _margins = __webpack_require__(297);
	
	var _margins2 = _interopRequireDefault(_margins);
	
	var _padding = __webpack_require__(298);
	
	var _padding2 = _interopRequireDefault(_padding);
	
	var _radii = __webpack_require__(299);
	
	var _radii2 = _interopRequireDefault(_radii);
	
	var _colorStyle = __webpack_require__(300);
	
	var _colorStyle2 = _interopRequireDefault(_colorStyle);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	
	
	var Base = function (_React$Component) {
	  _inherits(Base, _React$Component);
	
	  function Base(props, _ref) {
	    var rebass = _ref.rebass;
	
	    _classCallCheck(this, Base);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Base).call(this));
	
	    var _config$rebass = _extends({}, _config2.default, rebass);
	
	    var pureRender = _config$rebass.pureRender;
	
	    if (pureRender) {
	      _this.shouldComponentUpdate = _reactAddonsPureRenderMixin2.default.shouldComponentUpdate.bind(_this);
	    }
	    return _this;
	  }
	
	  _createClass(Base, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var is = _props.is;
	      var tagName = _props.tagName;
	      var baseStyle = _props.baseStyle;
	      var style = _props.style;
	      var baseRef = _props.baseRef;
	
	      var props = _objectWithoutProperties(_props, ['is', 'tagName', 'baseStyle', 'style', 'baseRef']);
	
	      var rebass = this.context.rebass;
	
	      var _config$rebass2 = _extends({}, _config2.default, rebass);
	
	      var scale = _config$rebass2.scale;
	      var colors = _config$rebass2.colors;
	      var borderRadius = _config$rebass2.borderRadius;
	
	      var name = props.className;
	      var keys = name ? name.split(' ') : [];
	      var contextStyle = keys.reduce(function (a, key) {
	        return (0, _objectAssign2.default)(a, rebass ? rebass[key] : {});
	      }, {});
	
	      var Component = is || props.Component || tagName || 'div';
	
	      var p = props.p;
	      var pt = props.pt;
	      var pr = props.pr;
	      var pb = props.pb;
	      var pl = props.pl;
	      var px = props.px;
	      var py = props.py;
	      var m = props.m;
	      var mt = props.mt;
	      var mr = props.mr;
	      var mb = props.mb;
	      var ml = props.ml;
	      var mx = props.mx;
	      var my = props.my;
	      var rounded = props.rounded;
	      var pill = props.pill;
	      var circle = props.circle;
	      var theme = props.theme;
	      var color = props.color;
	      var backgroundColor = props.backgroundColor;
	      var inverted = props.inverted;
	
	      var elementProps = _objectWithoutProperties(props, ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'rounded', 'pill', 'circle', 'theme', 'color', 'backgroundColor', 'inverted']);
	
	      var sx = (0, _objectAssign2.default)({ boxSizing: 'border-box' }, baseStyle, contextStyle, (0, _margins2.default)({ m: m, mt: mt, mr: mr, mb: mb, ml: ml, mx: mx, my: my }, scale), (0, _padding2.default)({ p: p, pt: pt, pr: pr, pb: pb, pl: pl, px: px, py: py }, scale), (0, _colorStyle2.default)({ theme: theme, color: color, backgroundColor: backgroundColor, inverted: inverted }, colors, rebass), (0, _radii2.default)({ rounded: rounded, pill: pill, circle: circle }, borderRadius), style);
	
	      return _react2.default.createElement(Component, _extends({}, elementProps, {
	        ref: function ref(_ref2) {
	          return baseRef(_ref2);
	        },
	        style: sx }));
	    }
	  }]);
	
	  return Base;
	}(_react2.default.Component);
	
	Base.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	Base.defaultProps = {
	  baseRef: function baseRef(x) {
	    return x;
	  }
	};
	Base.propTypes = {
	  
	  tagName: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.func, _react2.default.PropTypes.element]),
	  
	  className: _react2.default.PropTypes.string,
	  
	  baseStyle: _react2.default.PropTypes.object,
	  
	  style: _react2.default.PropTypes.object,
	  
	  baseRef: _react2.default.PropTypes.func,
	
	  
	  m: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  mt: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  mr: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  mb: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  ml: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  mx: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  my: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	
	  
	  p: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  pt: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  pr: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  pb: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  pl: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  px: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  py: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	
	  
	  color: _react2.default.PropTypes.string,
	  
	  backgroundColor: _react2.default.PropTypes.string,
	  
	  theme: _react2.default.PropTypes.oneOf(['primary', 'secondary', 'default', 'info', 'success', 'warning', 'error']),
	  
	  inverted: _react2.default.PropTypes.bool,
	  
	  rounded: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left'])]),
	  
	  circle: _react2.default.PropTypes.bool,
	  
	  pill: _react2.default.PropTypes.bool
	};
	exports.default = Base;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(264);


 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var ReactChildren = __webpack_require__(265);
	var ReactComponent = __webpack_require__(277);
	var ReactClass = __webpack_require__(280);
	var ReactDOMFactories = __webpack_require__(285);
	var ReactElement = __webpack_require__(269);
	var ReactPropTypes = __webpack_require__(290);
	var ReactVersion = __webpack_require__(291);
	
	var onlyChild = __webpack_require__(292);
	var warning = __webpack_require__(271);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(287);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    
	    return mixin;
	  },
	
	  
	  
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  
	  __spread: __spread
	};
	
	module.exports = React;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var PooledClass = __webpack_require__(266);
	var ReactElement = __webpack_require__(269);
	
	var emptyFunction = __webpack_require__(272);
	var traverseAllChildren = __webpack_require__(274);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      
	      
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(267);
	
	var invariant = __webpack_require__(268);
	
	
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	'use strict';
	
	
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; 
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; 
	    throw error;
	  }
	}
	
	module.exports = invariant;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _assign = __webpack_require__(5);
	
	var ReactCurrentOwner = __webpack_require__(270);
	
	var warning = __webpack_require__(271);
	var canDefineProperty = __webpack_require__(273);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    
	    
	    
	    
	    element._store = {};
	
	    
	    
	    
	    
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      
	      
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  
	  
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	
	    
	    var warnAboutAccessingKey = function () {
	      if (!specialPropKeyWarningShown) {
	        specialPropKeyWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingKey.isReactWarning = true;
	
	    var warnAboutAccessingRef = function () {
	      if (!specialPropRefWarningShown) {
	        specialPropRefWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingRef.isReactWarning = true;
	
	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: warnAboutAccessingKey,
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: warnAboutAccessingRef,
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  
	  
	  
	  
	  
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  
	  var props = _assign({}, element.props);
	
	  
	  var key = element.key;
	  var ref = element.ref;
	  
	  var self = element._self;
	  
	  
	  
	  var source = element._source;
	
	  
	  var owner = element._owner;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  
	  
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;
	
	module.exports = ReactElement;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	var ReactCurrentOwner = {
	
	  
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var emptyFunction = __webpack_require__(272);
	
	
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; 
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        
	        
	        
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	"use strict";
	
	
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    
	  }
	}
	
	module.exports = canDefineProperty;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(267);
	
	var ReactCurrentOwner = __webpack_require__(270);
	var ReactElement = __webpack_require__(269);
	
	var getIteratorFn = __webpack_require__(275);
	var invariant = __webpack_require__(268);
	var KeyEscapeUtils = __webpack_require__(276);
	var warning = __webpack_require__(271);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	
	
	var didWarnAboutMaps = false;
	
	
	function getComponentKey(component, index) {
	  
	  
	  if (component && typeof component === 'object' && component.key != null) {
	    
	    return KeyEscapeUtils.escape(component.key);
	  }
	  
	  return index.toString(36);
	}
	
	
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    
	    
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; 
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
	          didWarnAboutMaps = true;
	        }
	        
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; 
	
	
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

 },

 function(module, exports) {

	
	
	'use strict';
	
	
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(267);
	
	var ReactNoopUpdateQueue = __webpack_require__(278);
	
	var canDefineProperty = __webpack_require__(273);
	var emptyObject = __webpack_require__(279);
	var invariant = __webpack_require__(268);
	var warning = __webpack_require__(271);
	
	
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  
	  
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var warning = __webpack_require__(271);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	
	var ReactNoopUpdateQueue = {
	
	  
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  
	  enqueueCallback: function (publicInstance, callback) {},
	
	  
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(267),
	    _assign = __webpack_require__(5);
	
	var ReactComponent = __webpack_require__(277);
	var ReactElement = __webpack_require__(269);
	var ReactPropTypeLocations = __webpack_require__(281);
	var ReactPropTypeLocationNames = __webpack_require__(283);
	var ReactNoopUpdateQueue = __webpack_require__(278);
	
	var emptyObject = __webpack_require__(279);
	var invariant = __webpack_require__(268);
	var keyMirror = __webpack_require__(282);
	var keyOf = __webpack_require__(284);
	var warning = __webpack_require__(271);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	
	var SpecPolicy = keyMirror({
	  
	  DEFINE_ONCE: null,
	  
	  DEFINE_MANY: null,
	  
	  OVERRIDE_BASE: null,
	  
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	
	var ReactClassInterface = {
	
	  
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  
	  statics: SpecPolicy.DEFINE_MANY,
	
	  
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  
	
	  
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  
	  render: SpecPolicy.DEFINE_ONCE,
	
	  
	
	  
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  
	
	  
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      
	      
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  
	  
	  
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      
	      
	      
	      
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          
	          
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            
	            
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      
	      
	      
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	
	var ReactClassMixin = {
	
	  
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	
	var ReactClass = {
	
	  
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      
	      
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      
	      
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          
	          
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      
	      
	      
	      
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var keyMirror = __webpack_require__(282);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var invariant = __webpack_require__(268);
	
	
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	"use strict";
	
	
	
	
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var ReactElement = __webpack_require__(269);
	
	var mapObject = __webpack_require__(286);
	
	
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    var ReactElementValidator = __webpack_require__(287);
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOMFactories;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(270);
	var ReactComponentTreeDevtool = __webpack_require__(288);
	var ReactElement = __webpack_require__(269);
	var ReactPropTypeLocations = __webpack_require__(281);
	
	var checkReactTypeSpec = __webpack_require__(289);
	
	var canDefineProperty = __webpack_require__(273);
	var getIteratorFn = __webpack_require__(275);
	var warning = __webpack_require__(271);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	
	var ownerHasKeyUseWarning = {};
	
	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();
	
	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}
	
	
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;
	
	  
	  
	  
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeDevtool.getCurrentStackAddendum(element)) : void 0;
	}
	
	
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    
	    
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    
	    
	    if (element == null) {
	      return element;
	    }
	
	    
	    
	    
	    
	    
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(267);
	
	var ReactCurrentOwner = __webpack_require__(270);
	
	var invariant = __webpack_require__(268);
	var warning = __webpack_require__(271);
	
	var tree = {};
	var unmountedIDs = {};
	var rootIDs = {};
	
	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      element: null,
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	  }
	  update(tree[id]);
	}
	
	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;
	
	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeDevtool.getDisplayName(id);
	  var element = ReactComponentTreeDevtool.getElement(id);
	  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function (id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function (id, nextChildIDs) {
	    updateTree(id, function (item) {
	      item.childIDs = nextChildIDs;
	
	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
	        !(nextChild.displayName != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
	        !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	        if (nextChild.parentID == null) {
	          nextChild.parentID = id;
	          
	          
	          
	        }
	        !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
	      });
	    });
	  },
	  onSetOwner: function (id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetParent: function (id, parentID) {
	    updateTree(id, function (item) {
	      return item.parentID = parentID;
	    });
	  },
	  onSetText: function (id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onBeforeMountComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onMountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	  },
	  onMountRootComponent: function (id) {
	    rootIDs[id] = true;
	  },
	  onUpdateComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    unmountedIDs[id] = true;
	    delete rootIDs[id];
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      
	      return;
	    }
	
	    for (var id in unmountedIDs) {
	      purgeDeep(id);
	    }
	    unmountedIDs = {};
	  },
	  isMounted: function (id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeDevtool.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getElement: function (id) {
	    var item = tree[id];
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function (id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = tree[id];
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function (id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function () {
	    return Object.keys(rootIDs);
	  },
	  getRegisteredIDs: function () {
	    return Object.keys(tree);
	  }
	};
	
	module.exports = ReactComponentTreeDevtool;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(267);
	
	var ReactPropTypeLocationNames = __webpack_require__(283);
	
	var invariant = __webpack_require__(268);
	var warning = __webpack_require__(271);
	
	var loggedTypeFailures = {};
	
	
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      
	      
	      
	      try {
	        
	        
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        
	        
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (process.env.NODE_ENV !== 'production') {
	          var ReactComponentTreeDevtool = __webpack_require__(288);
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
	          }
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var ReactElement = __webpack_require__(269);
	var ReactPropTypeLocationNames = __webpack_require__(283);
	
	var emptyFunction = __webpack_require__(272);
	var getIteratorFn = __webpack_require__(275);
	
	
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	
	
	function is(x, y) {
	  
	  if (x === y) {
	    
	    
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    
	    return x !== x && y !== y;
	  }
	}
	
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      
	      
	      
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    
	    
	    
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	
	
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

 },

 function(module, exports) {

	
	
	'use strict';
	
	module.exports = '15.2.1';

 },

 function(module, exports, __webpack_require__) {

	(function(process) {
	'use strict';
	
	var _prodInvariant = __webpack_require__(267);
	
	var ReactElement = __webpack_require__(269);
	
	var invariant = __webpack_require__(268);
	
	
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(294);

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var shallowCompare = __webpack_require__(295);
	
	
	var ReactComponentWithPureRenderMixin = {
	  shouldComponentUpdate: function (nextProps, nextState) {
	    return shallowCompare(this, nextProps, nextState);
	  }
	};
	
	module.exports = ReactComponentWithPureRenderMixin;

 },

 function(module, exports, __webpack_require__) {

	
	
	'use strict';
	
	var shallowEqual = __webpack_require__(296);
	
	
	function shallowCompare(instance, nextProps, nextState) {
	  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);
	}
	
	module.exports = shallowCompare;

 },

 function(module, exports) {

	
	
	
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	
	function is(x, y) {
	  
	  if (x === y) {
	    
	    
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    
	    return x !== x && y !== y;
	  }
	}
	
	
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _objectAssign = __webpack_require__(5);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	
	
	var n = function n(key, x, s) {
	  return typeof x === 'number' ? _defineProperty({}, key, s[x]) : null;
	};
	
	function margins(props, scale) {
	  var s = scale || [];
	
	  var _ref2 = props || {};
	
	  var m = _ref2.m;
	  var mx = _ref2.mx;
	  var my = _ref2.my;
	  var mt = _ref2.mt;
	  var mr = _ref2.mr;
	  var mb = _ref2.mb;
	  var ml = _ref2.ml;
	
	
	  var result = (0, _objectAssign2.default)({}, n('margin', m, s), n('marginTop', mt, s), n('marginBottom', mb, s), n('marginTop', my, s), n('marginBottom', my, s), n('marginLeft', ml, s), n('marginRight', mr, s), n('marginLeft', mx, s), n('marginRight', mx, s));
	
	  return result;
	}
	
	exports.default = margins;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _objectAssign = __webpack_require__(5);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	
	
	var n = function n(key, x, s) {
	  return typeof x === 'number' ? _defineProperty({}, key, s[x]) : null;
	};
	
	function padding(props, scale) {
	  var s = scale || [];
	
	  var _ref2 = props || {};
	
	  var p = _ref2.p;
	  var px = _ref2.px;
	  var py = _ref2.py;
	  var pt = _ref2.pt;
	  var pr = _ref2.pr;
	  var pb = _ref2.pb;
	  var pl = _ref2.pl;
	
	
	  var result = (0, _objectAssign2.default)({}, n('padding', p, s), n('paddingTop', pt, s), n('paddingBottom', pb, s), n('paddingTop', py, s), n('paddingBottom', py, s), n('paddingLeft', pl, s), n('paddingRight', pr, s), n('paddingLeft', px, s), n('paddingRight', px, s));
	
	  return result;
	}
	
	exports.default = padding;

 },

 function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	
	
	function radii(props) {
	  var r = arguments.length <= 1 || arguments[1] === undefined ? 2 : arguments[1];
	
	  var _ref = props || {};
	
	  var rounded = _ref.rounded;
	  var pill = _ref.pill;
	  var circle = _ref.circle;
	
	
	  var borderRadius = void 0;
	
	  if (rounded === true) {
	    borderRadius = r;
	  } else if (rounded === false) {
	    borderRadius = 0;
	  }
	
	  if (typeof rounded === 'string') {
	    var obj = {
	      top: r + 'px ' + r + 'px 0 0',
	      right: '0 ' + r + 'px ' + r + 'px 0',
	      bottom: '0 0 ' + r + 'px ' + r + 'px',
	      left: r + 'px 0 0 ' + r + 'px'
	    };
	    borderRadius = obj[rounded] || null;
	  }
	
	  if (pill || circle) {
	    borderRadius = 99999;
	  }
	
	  if (typeof borderRadius === 'undefined') {
	    return {};
	  } else {
	    return { borderRadius: borderRadius };
	  }
	}
	
	exports.default = radii;

 },

 function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	
	
	function colorStyle(props, colors, context) {
	  colors = colors || {};
	
	  var _ref = props || {};
	
	  var color = _ref.color;
	  var backgroundColor = _ref.backgroundColor;
	  var theme = _ref.theme;
	  var inverted = _ref.inverted;
	
	  var result = {};
	
	  if (color && colors[color]) {
	    result.color = colors[color];
	  } else if (typeof color === 'string') {
	    result.color = color;
	  }
	
	  if (backgroundColor && colors[backgroundColor]) {
	    result.backgroundColor = colors[backgroundColor];
	  } else if (typeof backgroundColor === 'string') {
	    result.backgroundColor = backgroundColor;
	  }
	
	  if (theme && colors[theme]) {
	    var invertedColor = context && context.inverted;
	    if (inverted) {
	      result.color = invertedColor || colors.white;
	      result.backgroundColor = colors[theme];
	    } else {
	      result.color = colors[theme];
	    }
	  }
	
	  return result;
	}
	
	exports.default = colorStyle;

 },

 function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var monospace = '"Roboto Mono", Menlo, Consolas, monospace';
	
	var baseColors = {
	  black: '#111',
	  white: '#fff',
	  gray: '#ddd',
	  midgray: '#888',
	  blue: '#08e',
	  red: '#f52',
	  orange: '#f70',
	  green: '#1c7'
	};
	
	var colors = _extends({}, baseColors, {
	  primary: baseColors.blue,
	  secondary: baseColors.midgray,
	  default: baseColors.black,
	  info: baseColors.blue,
	  success: baseColors.green,
	  warning: baseColors.orange,
	  error: baseColors.red
	});
	
	var inverted = colors.white;
	
	var scale = [0, 8, 16, 32, 64];
	
	var fontSizes = [48, 32, 24, 20, 16, 14, 12];
	
	var zIndex = [0, 2, 4, 8, 16];
	
	var bold = 600;
	var borderRadius = 2;
	var borderColor = 'rgba(0, 0, 0, .25)';
	
	var config = {
	  scale: scale,
	  fontSizes: fontSizes,
	  bold: bold,
	  monospace: monospace,
	  zIndex: zIndex,
	  colors: colors,
	  inverted: inverted,
	  borderRadius: borderRadius,
	  borderColor: borderColor,
	  pureRender: true
	};
	
	exports.default = config;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Arrow = function Arrow(_ref, _ref2) {
	  var direction = _ref.direction;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['direction', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Arrow',
	    baseStyle: {
	      display: 'inline-block',
	      width: 0,
	      height: 0,
	      marginLeft: '.5em',
	      verticalAlign: 'middle',
	      borderRight: '.3125em solid transparent',
	      borderLeft: '.3125em solid transparent',
	      borderTop: direction === 'down' ? '.4375em solid' : null,
	      borderBottom: direction === 'up' ? '.4375em solid' : null
	    } }));
	};
	
	Arrow.propTypes = {
	  
	  direction: _react2.default.PropTypes.oneOf(['up', 'down'])
	};
	
	Arrow.defaultProps = {
	  direction: 'down'
	};
	
	Arrow.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Arrow;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Avatar = function Avatar(_ref, _ref2) {
	  var size = _ref.size;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['size', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var colors = _config$rebass.colors;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'img',
	    className: 'Avatar',
	    width: size,
	    height: size,
	    baseStyle: {
	      maxWidth: 'none',
	      width: size,
	      height: size,
	      backgroundColor: colors.gray
	    }
	  }));
	};
	
	Avatar.propTypes = {
	  
	  size: _react2.default.PropTypes.number
	};
	
	Avatar.defaultProps = {
	  size: 48,
	  circle: true
	};
	
	Avatar.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Avatar;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Badge = function Badge(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var bold = _config$rebass.bold;
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	
	
	  var sx = {
	    fontSize: fontSizes[6],
	    fontWeight: bold,
	    display: 'inline-flex',
	    alignItems: 'center',
	    justifyContent: 'center',
	    width: props.circle ? scale[2] : null,
	    height: scale[2],
	    paddingTop: 0,
	    paddingBottom: 0,
	    paddingLeft: props.circle ? 0 : scale[1],
	    paddingRight: props.circle ? 0 : scale[1],
	    overflow: 'hidden',
	    color: colors.white,
	    backgroundColor: colors.default
	  };
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Badge',
	    inverted: true,
	    baseStyle: sx }));
	};
	
	Badge.propTypes = {
	  
	  theme: _react2.default.PropTypes.oneOf(['primary', 'secondary', 'default', 'info', 'success', 'warning', 'error']),
	  
	  rounded: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left'])]),
	  
	  pill: _react2.default.PropTypes.bool,
	  
	  circle: _react2.default.PropTypes.bool
	};
	
	Badge.defaultProps = {
	  theme: 'default',
	  rounded: true
	};
	
	Badge.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Badge;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Banner = function Banner(_ref, _ref2) {
	  var align = _ref.align;
	  var backgroundImage = _ref.backgroundImage;
	
	  var props = _objectWithoutProperties(_ref, ['align', 'backgroundImage']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var fontSizes = _config$rebass.fontSizes;
	
	
	  var alignment = {
	    left: 'flex-start',
	    center: 'center',
	    right: 'flex-end'
	  };
	
	  var alignItems = alignment[align];
	
	  var sx = {
	    fontSize: fontSizes[1],
	    display: 'flex',
	    flexDirection: 'column',
	    alignItems: alignItems,
	    justifyContent: 'center',
	    textAlign: align === 'center' ? 'center' : null,
	    padding: scale[4],
	    marginBottom: scale[3],
	    color: colors.white,
	    backgroundColor: colors.primary,
	    minHeight: '100vh',
	    backgroundPosition: 'center',
	    backgroundSize: 'cover',
	    backgroundImage: backgroundImage ? 'url(' + backgroundImage + ')' : null
	  };
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Banner',
	    baseStyle: sx }));
	};
	
	Banner.propTypes = {
	  
	  align: _react2.default.PropTypes.oneOf(['left', 'center', 'right']),
	  
	  backgroundImage: _react2.default.PropTypes.string
	};
	
	Banner.defaultProps = {
	  align: 'center'
	};
	
	Banner.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Banner;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Block = function Block(_ref, _ref2) {
	  var borderColor = _ref.borderColor;
	  var border = _ref.border;
	  var borderTop = _ref.borderTop;
	  var borderRight = _ref.borderRight;
	  var borderBottom = _ref.borderBottom;
	  var borderLeft = _ref.borderLeft;
	
	  var props = _objectWithoutProperties(_ref, ['borderColor', 'border', 'borderTop', 'borderRight', 'borderBottom', 'borderLeft']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	
	
	  borderColor = colors[borderColor] || borderColor || colors.primary;
	
	  var sx = {
	    marginTop: scale[2],
	    marginBottom: scale[2],
	    borderStyle: border ? 'solid' : 'none',
	    borderTopStyle: borderTop ? 'solid' : null,
	    borderRightStyle: borderRight ? 'solid' : null,
	    borderBottomStyle: borderBottom ? 'solid' : null,
	    borderLeftStyle: borderLeft ? 'solid' : null,
	    borderWidth: 4,
	    borderColor: borderColor
	  };
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Block',
	    baseStyle: sx }));
	};
	
	Block.propTypes = {
	  
	  color: _react2.default.PropTypes.string,
	  
	  backgroundColor: _react2.default.PropTypes.string,
	  
	  borderColor: _react2.default.PropTypes.string,
	  
	  border: _react2.default.PropTypes.bool,
	  
	  borderTop: _react2.default.PropTypes.bool,
	  
	  borderRight: _react2.default.PropTypes.bool,
	  
	  borderBottom: _react2.default.PropTypes.bool,
	  
	  borderLeft: _react2.default.PropTypes.bool,
	
	  
	  m: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  mt: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  mr: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  mb: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  ml: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  mx: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  my: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	
	  
	  p: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  pt: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  pr: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  pb: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  pl: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  px: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	  
	  py: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4]),
	
	  
	  rounded: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left'])])
	};
	
	Block.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Block;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Blockquote = function Blockquote(_ref, _ref2) {
	  var source = _ref.source;
	  var href = _ref.href;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['source', 'href', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var scale = _config$rebass.scale;
	
	
	  var sx = {
	    root: {
	      fontSize: fontSizes[3],
	      fontStyle: 'italic',
	      margin: 0,
	      marginBottom: scale[2]
	    },
	    p: {
	      margin: 0,
	      marginBottom: scale[1]
	    },
	    cite: {
	      fontSize: fontSizes[5],
	      fontStyle: 'normal'
	    },
	    source: {
	      color: 'inherit'
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      tagName: 'blockquote',
	      className: 'Blockquote',
	      baseStyle: sx.root }),
	    _react2.default.createElement(
	      'p',
	      { style: sx.p },
	      children
	    ),
	    _react2.default.createElement(
	      'cite',
	      { style: sx.cite },
	      '— ',
	      _react2.default.createElement('a', { href: href,
	        style: sx.source,
	        children: source })
	    )
	  );
	};
	
	Blockquote.propTypes = {
	  
	  source: _react2.default.PropTypes.string,
	  
	  href: _react2.default.PropTypes.string
	};
	
	exports.default = Blockquote;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Breadcrumbs = function Breadcrumbs(_ref, _ref2) {
	  var links = _ref.links;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['links', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var scale = _config$rebass.scale;
	
	
	  var sx = {
	    root: {
	      fontSize: fontSizes[5],
	      display: 'flex',
	      marginBottom: scale[2],
	      alignItems: 'center'
	    },
	    spacer: {
	      marginLeft: '.5em',
	      marginRight: '.5em'
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'Breadcrumbs',
	      baseStyle: sx.root }),
	    links.map(function (link, i) {
	      return _react2.default.createElement(
	        'div',
	        { key: i },
	        _react2.default.createElement(_Base2.default, _extends({
	          is: 'a'
	        }, link, {
	          style: {
	            color: 'inherit',
	            textDecoration: i === links.length - 1 ? 'none' : null
	          } })),
	        i < links.length - 1 && _react2.default.createElement(
	          'span',
	          { style: sx.spacer },
	          '/'
	        )
	      );
	    })
	  );
	};
	
	Breadcrumbs.propTypes = {
	  
	  links: _react2.default.PropTypes.array.isRequired
	};
	
	Breadcrumbs.defaultProps = {
	  links: []
	};
	
	Breadcrumbs.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Breadcrumbs;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Button = function Button(_ref, _ref2) {
	  var href = _ref.href;
	  var big = _ref.big;
	  var baseStyle = _ref.baseStyle;
	  var _className = _ref._className;
	
	  var props = _objectWithoutProperties(_ref, ['href', 'big', 'baseStyle', '_className']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var bold = _config$rebass.bold;
	  var scale = _config$rebass.scale;
	
	
	  var Component = href ? 'a' : 'button';
	
	  
	  var minHeight = scale[3];
	
	  var sx = _extends({}, baseStyle, {
	    fontFamily: 'inherit',
	    fontSize: fontSizes[5],
	    fontWeight: bold,
	    lineHeight: scale[2] + 'px',
	    minHeight: minHeight,
	    textDecoration: 'none',
	    display: 'inline-block',
	    margin: 0,
	    paddingTop: big ? scale[2] : scale[1],
	    paddingBottom: big ? scale[2] : scale[1],
	    paddingLeft: scale[2],
	    paddingRight: scale[2],
	    cursor: 'pointer',
	    border: 0
	  });
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: Component,
	    className: _className || 'Button',
	    href: href,
	    baseStyle: sx }));
	};
	
	Button.propTypes = {
	  
	  href: _react2.default.PropTypes.string,
	  
	  color: _react2.default.PropTypes.string,
	  
	  backgroundColor: _react2.default.PropTypes.string,
	  
	  rounded: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left'])]),
	  
	  pill: _react2.default.PropTypes.bool,
	  
	  big: _react2.default.PropTypes.bool,
	  
	  theme: _react2.default.PropTypes.oneOf(['primary', 'secondary', 'default', 'info', 'success', 'warning', 'error'])
	};
	
	Button.defaultProps = {
	  color: 'white',
	  backgroundColor: 'primary',
	  inverted: true,
	  rounded: true
	};
	
	Button.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Button;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Button = __webpack_require__(309);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var ButtonCircle = function ButtonCircle(_ref, _ref2) {
	  var size = _ref.size;
	  var children = _ref.children;
	  var style = _ref.style;
	
	  var props = _objectWithoutProperties(_ref, ['size', 'children', 'style']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  var sx = {
	    root: _extends({
	      fontSize: 'inherit',
	      width: size || scale[3],
	      height: size || scale[3],
	      padding: 0,
	      borderRadius: 99999
	    }, style),
	    inner: {
	      display: 'flex',
	      alignItems: 'center',
	      height: '100%',
	      justifyContent: 'center'
	    }
	  };
	
	  return _react2.default.createElement(
	    _Button2.default,
	    _extends({}, props, {
	      _className: 'ButtonCircle',
	      style: sx.root }),
	    _react2.default.createElement(
	      'div',
	      { style: sx.inner },
	      children
	    )
	  );
	};
	
	ButtonCircle.propTypes = {
	  
	  href: _react2.default.PropTypes.string,
	  
	  color: _react2.default.PropTypes.string,
	  
	  backgroundColor: _react2.default.PropTypes.string,
	  
	  size: _react2.default.PropTypes.number
	};
	
	ButtonCircle.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = ButtonCircle;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Button = __webpack_require__(309);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var ButtonOutline = function ButtonOutline(_ref, _ref2) {
	  var style = _ref.style;
	
	  var props = _objectWithoutProperties(_ref, ['style']);
	
	  var rebass = _ref2.rebass;
	
	  var sx = _extends({
	    backgroundColor: 'transparent'
	  }, style);
	
	  return _react2.default.createElement(_Button2.default, _extends({}, props, {
	    _className: 'ButtonOutline',
	    baseStyle: {
	      boxShadow: 'inset 0 0 0 1px'
	    },
	    style: sx }));
	};
	
	ButtonOutline.propTypes = {
	  
	  href: _react2.default.PropTypes.string,
	  
	  color: _react2.default.PropTypes.string,
	  
	  rounded: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left'])]),
	  
	  pill: _react2.default.PropTypes.bool,
	  
	  big: _react2.default.PropTypes.bool
	};
	
	ButtonOutline.defaultProps = {
	  color: 'primary',
	  inverted: false,
	  rounded: true
	};
	
	ButtonOutline.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = ButtonOutline;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Card = function Card(_ref, _ref2) {
	  var width = _ref.width;
	
	  var props = _objectWithoutProperties(_ref, ['width']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var borderColor = _config$rebass.borderColor;
	
	
	  var sx = {
	    width: width,
	    padding: scale[1],
	    marginBottom: scale[2],
	    borderWidth: 1,
	    borderStyle: 'solid',
	    borderColor: borderColor,
	    overflow: 'hidden'
	  };
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Card',
	    baseStyle: sx }));
	};
	
	Card.propTypes = {
	  
	  width: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.number, _react2.default.PropTypes.string])
	};
	
	Card.defaultProps = {
	  rounded: true
	};
	
	Card.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Card;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var CardImage = function CardImage(_ref, _ref2) {
	  var src = _ref.src;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['src', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'img',
	    className: 'CardImage',
	    src: src,
	    baseStyle: {
	      display: 'block',
	      width: 'calc(100% + ' + 2 * scale[1] + 'px)',
	      maxWidth: 'none',
	      height: 'auto',
	      margin: -scale[1],
	      marginBottom: scale[1]
	    } }));
	};
	
	CardImage.propTypes = {
	  
	  src: _react2.default.PropTypes.string.isRequired
	};
	
	CardImage.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = CardImage;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(315);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _Label = __webpack_require__(316);
	
	var _Label2 = _interopRequireDefault(_Label);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Checkbox = function Checkbox(_ref, _ref2) {
	  var label = _ref.label;
	  var name = _ref.name;
	  var checked = _ref.checked;
	  var children = _ref.children;
	  var backgroundColor = _ref.backgroundColor;
	  var theme = _ref.theme;
	  var inverted = _ref.inverted;
	  var rounded = _ref.rounded;
	  var style = _ref.style;
	  var m = _ref.m;
	  var mt = _ref.mt;
	  var mr = _ref.mr;
	  var mb = _ref.mb;
	  var ml = _ref.ml;
	  var mx = _ref.mx;
	  var my = _ref.my;
	  var p = _ref.p;
	  var pt = _ref.pt;
	  var pr = _ref.pr;
	  var pb = _ref.pb;
	  var pl = _ref.pl;
	  var px = _ref.px;
	  var py = _ref.py;
	
	  var props = _objectWithoutProperties(_ref, ['label', 'name', 'checked', 'children', 'backgroundColor', 'theme', 'inverted', 'rounded', 'style', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderRadius = _config$rebass.borderRadius;
	
	
	  var invalid = props['aria-invalid'] || props.invalid;
	
	  var rootProps = {
	    style: style,
	    m: m,
	    mt: mt,
	    mr: mr,
	    mb: mb,
	    ml: ml,
	    mx: mx,
	    my: my,
	    p: p,
	    pt: pt,
	    pr: pr,
	    pb: pb,
	    pl: pl,
	    px: px,
	    py: py
	  };
	
	  var boxProps = {
	    backgroundColor: backgroundColor,
	    theme: theme,
	    inverted: inverted,
	    rounded: rounded
	  };
	
	  var sx = {
	    root: {
	      position: 'relative',
	      display: 'flex',
	      alignItems: 'center',
	      paddingBottom: scale[1],
	      color: invalid ? colors.error : null,
	      cursor: 'pointer'
	    },
	    input: {
	      position: 'absolute',
	      zIndex: -1,
	      opacity: 0
	    },
	    box: {
	      display: 'flex',
	      alignItems: 'center',
	      justifyContent: 'center',
	      width: scale[2],
	      height: scale[2],
	      marginRight: scale[1],
	      backgroundColor: checked ? 'currentcolor' : 'transparent',
	      borderRadius: borderRadius,
	      borderStyle: 'solid',
	      borderWidth: 2,
	      borderColor: checked ? null : colors.gray,
	      transition: 'background-color .1s ease-out'
	    },
	    icon: {
	      display: checked ? null : 'none',
	      width: '75%',
	      height: '75%',
	      marginTop: 1,
	      fill: colors.white
	    }
	  };
	
	  var cx = (0, _classnames2.default)('Checkbox', {
	    'isInvalid': invalid,
	    'isDisabled': props.disabled,
	    'isReadonly': props.readOnly
	  });
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, rootProps, {
	      tagName: _Label2.default,
	      className: cx,
	      baseStyle: sx.root }),
	    _react2.default.createElement('input', _extends({}, props, {
	      name: name,
	      type: 'checkbox',
	      checked: checked,
	      style: sx.input })),
	    _react2.default.createElement(
	      _Base2.default,
	      _extends({}, boxProps, {
	        className: 'Checkbox_box',
	        baseStyle: sx.box }),
	      _react2.default.createElement(
	        'svg',
	        {
	          viewBox: '0 0 32 32',
	          style: sx.icon },
	        _react2.default.createElement('path', { d: 'M1 14 L5 10 L13 18 L27 4 L31 8 L13 26 z' })
	      )
	    ),
	    label
	  );
	};
	
	Checkbox.propTypes = {
	  
	  label: _react2.default.PropTypes.string.isRequired,
	  
	  name: _react2.default.PropTypes.string.isRequired
	};
	
	exports.default = Checkbox;

 },

 function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
	
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Label = function Label(_ref, _ref2) {
	  var hide = _ref.hide;
	
	  var props = _objectWithoutProperties(_ref, ['hide']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var bold = _config$rebass.bold;
	
	
	  var hideStyle = hide ? {
	    position: 'absolute',
	    height: 1,
	    width: 1,
	    overflow: 'hidden',
	    clip: 'rect(1px, 1px, 1px, 1px)'
	  } : {};
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'label',
	    className: 'Label',
	    baseStyle: _extends({
	      fontSize: fontSizes[5],
	      fontWeight: bold,
	      lineHeight: 1
	    }, hideStyle) }));
	};
	
	Label.propTypes = {
	  
	  hide: _react2.default.PropTypes.bool
	};
	
	Label.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Label;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Close = function Close(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'button',
	    className: 'Close',
	    title: 'Close',
	    baseStyle: {
	      fontSize: '1.5em',
	      lineHeight: 1,
	      fontWeight: 'bold',
	      margin: 0,
	      padding: 0,
	      cursor: 'pointer',
	      color: 'inherit',
	      backgroundColor: 'transparent',
	      border: 0,
	      WebkitAppearance: 'none'
	    },
	    children: '×' }));
	};
	
	Close.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Close;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Container = function Container(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Container',
	    baseStyle: {
	      maxWidth: 1024,
	      paddingLeft: scale[2],
	      paddingRight: scale[2],
	      margin: 'auto'
	    } }));
	};
	
	Container.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Container;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Divider = function Divider(_ref, _ref2) {
	  var width = _ref.width;
	
	  var props = _objectWithoutProperties(_ref, ['width']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var borderColor = _config$rebass.borderColor;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'hr',
	    className: 'Divider',
	    baseStyle: {
	      width: width,
	      marginTop: scale[2],
	      marginBottom: scale[2],
	      border: 0,
	      borderBottomWidth: 1,
	      borderBottomStyle: 'solid',
	      borderBottomColor: borderColor
	    } }));
	};
	
	Divider.propTypes = {
	  
	  width: _react2.default.PropTypes.number
	};
	
	Divider.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Divider;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var M = 'M';
	var A = 'A';
	var L = 'L';
	var rad = function rad(a) {
	  return Math.PI * a / 180;
	};
	var rx = function rx(c, r, a) {
	  return c + r * Math.cos(rad(a));
	};
	var ry = function ry(c, r, a) {
	  return c + r * Math.sin(rad(a));
	};
	
	var createPath = function createPath(size, value, strokeWidth) {
	  var c = Math.abs(size) / 2; 
	  var r1 = c; 
	  var r2 = c - Math.abs(strokeWidth); 
	  var angle = Math.abs(value % 1) * 360 - 90;
	
	  var largeArc = value > 0.5 ? 1 : 0;
	
	  var arc1 = value === 1 ? [A, r1, r1, 0, 0, 1, c, c + r1, A, r1, r1, 0, 0, 1, c, c - r1] : [A, r1, r1, 0, largeArc, 1, rx(c, r1, angle), ry(c, r1, angle)];
	
	  var arc2 = value === 1 ? [A, r2, r2, 0, 0, 0, c, c + r2, A, r2, r2, 0, 0, 0, c, c - r2] : [A, r2, r2, 0, largeArc, 0, c, c - r2];
	
	  return [M, c, c - r1].concat(arc1, [L, rx(c, r2, angle), ry(c, r2, angle)], arc2).join(' ');
	};
	
	var createBg = function createBg(size, strokeWidth) {
	  var c = Math.abs(size) / 2; 
	  var r1 = c; 
	  var r2 = c - Math.abs(strokeWidth); 
	
	  return [M, c, 0, A, r1, r1, 0, 0, 1, c, size, A, r1, r1, 0, 0, 1, c, 0, M, c, c - r2, A, r2, r2, 0, 0, 0, c, c + r2, A, r2, r2, 0, 0, 0, c, c - r2].join(' ');
	};
	
	
	
	var Donut = function Donut(_ref, _ref2) {
	  var value = _ref.value;
	  var size = _ref.size;
	  var strokeWidth = _ref.strokeWidth;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['value', 'size', 'strokeWidth', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var bold = _config$rebass.bold;
	
	
	  var viewBox = '0 0 ' + size + ' ' + size;
	
	  var sx = {
	    root: {
	      position: 'relative',
	      display: 'inline-flex',
	      alignItems: 'center',
	      justifyContent: 'center',
	      fontSize: size / 4,
	      fontWeight: bold,
	      lineHeight: 1,
	      width: size,
	      height: size
	    },
	    svg: {
	      position: 'absolute',
	      top: 0,
	      right: 0,
	      bottom: 0,
	      left: 0,
	      fill: 'currentcolor'
	    },
	    bg: {
	      opacity: 1 / 16
	    },
	    percentage: {
	      marginRight: '-.25em'
	    },
	    unit: {
	      fontSize: '.5em',
	      verticalAlign: 'super'
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'Donut',
	      baseStyle: sx.root }),
	    _react2.default.createElement(
	      'svg',
	      {
	        viewBox: viewBox,
	        width: size,
	        height: size,
	        style: sx.svg },
	      _react2.default.createElement('path', { d: createBg(size, strokeWidth), style: sx.bg }),
	      _react2.default.createElement('path', { d: createPath(size, value, strokeWidth) })
	    ),
	    children,
	    !children && _react2.default.createElement(
	      'span',
	      { style: sx.percentage },
	      Math.round(value * 100),
	      _react2.default.createElement(
	        'span',
	        { style: sx.unit },
	        '%'
	      )
	    )
	  );
	};
	
	Donut.propTypes = {
	  
	  value: _react2.default.PropTypes.number,
	  
	  size: _react2.default.PropTypes.number,
	  
	  strokeWidth: _react2.default.PropTypes.number,
	  
	  color: _react2.default.PropTypes.string
	};
	
	Donut.defaultProps = {
	  value: 0,
	  size: 128,
	  strokeWidth: 8,
	  color: 'primary'
	};
	
	Donut.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Donut;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var DotIndicator = function DotIndicator(_ref, _ref2) {
	  var length = _ref.length;
	  var active = _ref.active;
	  var onClick = _ref.onClick;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['length', 'active', 'onClick', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  var sx = {
	    root: {
	      display: 'inline-flex'
	    },
	    button: {
	      fontSize: 16,
	      display: 'flex',
	      alignItems: 'center',
	      justifyContent: 'center',
	      margin: 0,
	      padding: 0,
	      width: scale[2],
	      height: scale[3],
	      color: 'inherit',
	      backgroundColor: 'transparent',
	      border: 0,
	      cursor: 'pointer'
	    },
	    dot: {
	      width: scale[1],
	      height: scale[1],
	      margin: 'auto',
	      backgroundColor: 'currentcolor',
	      borderRadius: 99999
	    }
	  };
	
	  var handleClick = function handleClick(i) {
	    return function (e) {
	      e.preventDefault();
	      onClick(i);
	    };
	  };
	
	  var dots = Array.from({ length: length }, function (a, b) {
	    return b;
	  });
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'DotIndicator',
	      baseStyle: sx.root }),
	    dots.map(function (d) {
	      return _react2.default.createElement(
	        'button',
	        {
	          key: d,
	          style: _extends({}, sx.button, {
	            opacity: d !== active ? 0.375 : 0.875
	          }),
	          onClick: handleClick(d) },
	        _react2.default.createElement('div', { style: sx.dot })
	      );
	    })
	  );
	};
	
	DotIndicator.propTypes = {
	  
	  length: _react2.default.PropTypes.number,
	  
	  active: _react2.default.PropTypes.number,
	  
	  onClick: _react2.default.PropTypes.func
	};
	
	DotIndicator.defaultProps = {
	  onClick: function onClick() {}
	};
	
	DotIndicator.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = DotIndicator;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Drawer = function Drawer(_ref, _ref2) {
	  var open = _ref.open;
	  var size = _ref.size;
	  var position = _ref.position;
	  var onDismiss = _ref.onDismiss;
	
	  var props = _objectWithoutProperties(_ref, ['open', 'size', 'position', 'onDismiss']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var zIndex = _config$rebass.zIndex;
	
	
	  var placements = {
	    top: {
	      top: 0,
	      right: 0,
	      left: 0
	    },
	    right: {
	      top: 0,
	      right: 0,
	      bottom: 0
	    },
	    bottom: {
	      right: 0,
	      bottom: 0,
	      left: 0
	    },
	    left: {
	      top: 0,
	      bottom: 0,
	      left: 0
	    }
	  };
	
	  var width = void 0,
	      height = void 0,
	      transform = void 0;
	
	  if (position === 'top' || position === 'bottom') {
	    height = size;
	  } else {
	    width = size;
	  }
	
	  var transforms = {
	    top: 'translateY(-100%)',
	    right: 'translateX(100%)',
	    bottom: 'translateY(100%)',
	    left: 'translateX(-100%)'
	  };
	
	  if (!open) {
	    transform = transforms[position];
	  }
	
	  var sx = {
	    dismiss: {
	      position: 'fixed',
	      top: 0,
	      right: 0,
	      bottom: 0,
	      left: 0,
	      zIndex: zIndex[3],
	      display: open ? null : 'none'
	    },
	    content: _extends({
	      position: 'fixed'
	    }, placements[position], {
	      zIndex: zIndex[4],
	      width: width,
	      height: height,
	      padding: scale[2],
	      transform: transform,
	      transition: 'transform .2s ease-out',
	      overflowX: 'hidden',
	      overflowY: 'scroll'
	    })
	  };
	
	  return _react2.default.createElement(
	    'div',
	    { className: 'Drawer' },
	    _react2.default.createElement('div', { style: sx.dismiss,
	      onClick: onDismiss }),
	    _react2.default.createElement(_Base2.default, _extends({}, props, {
	      className: 'Drawer Drawer_content',
	      baseStyle: sx.content }))
	  );
	};
	
	Drawer.propTypes = {
	  
	  size: _react2.default.PropTypes.number,
	  
	  open: _react2.default.PropTypes.bool,
	  
	  position: _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left']),
	  
	  onDismiss: _react2.default.PropTypes.func
	};
	
	Drawer.defaultProps = {
	  open: false,
	  size: 320,
	  position: 'left',
	  onDismiss: function onDismiss() {},
	  color: 'white',
	  backgroundColor: 'default'
	};
	
	Drawer.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Drawer;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Dropdown = function Dropdown(_ref) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Dropdown',
	    baseStyle: {
	      position: 'relative'
	    } }));
	};
	
	exports.default = Dropdown;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _Menu = __webpack_require__(325);
	
	var _Menu2 = _interopRequireDefault(_Menu);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var DropdownMenu = function DropdownMenu(_ref, _ref2) {
	  var open = _ref.open;
	  var right = _ref.right;
	  var top = _ref.top;
	  var children = _ref.children;
	  var onDismiss = _ref.onDismiss;
	
	  var props = _objectWithoutProperties(_ref, ['open', 'right', 'top', 'children', 'onDismiss']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var zIndex = _config$rebass.zIndex;
	
	
	  var sx = {
	    root: {
	      display: open ? null : 'none',
	      position: 'absolute',
	      left: right ? 'auto' : 0,
	      right: right ? 0 : 'auto',
	      top: top ? 'auto' : '100%',
	      bottom: top ? '100%' : 'auto',
	      zIndex: 4
	    },
	    overlay: {
	      position: 'fixed',
	      display: open ? null : 'none',
	      top: 0,
	      right: 0,
	      bottom: 0,
	      left: 0
	    },
	    content: {
	      position: 'relative',
	      zIndex: zIndex[1]
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'DropdownMenu',
	      baseStyle: sx.root }),
	    _react2.default.createElement('div', { style: sx.overlay,
	      onClick: onDismiss }),
	    _react2.default.createElement(
	      'div',
	      { style: sx.content },
	      _react2.default.createElement(_Menu2.default, _extends({}, props, {
	        children: children }))
	    )
	  );
	};
	
	DropdownMenu.propTypes = {
	  
	  open: _react2.default.PropTypes.bool,
	  
	  right: _react2.default.PropTypes.bool,
	  
	  top: _react2.default.PropTypes.bool,
	  
	  onDismiss: _react2.default.PropTypes.func
	};
	
	DropdownMenu.defaultProps = {
	  open: false,
	  onDismiss: function onDismiss() {}
	};
	
	DropdownMenu.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = DropdownMenu;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Menu = function Menu(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderColor = _config$rebass.borderColor;
	  var borderRadius = _config$rebass.borderRadius;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Menu',
	    baseStyle: {
	      display: 'flex',
	      flexDirection: 'column',
	      minWidth: 128,
	      marginBottom: scale[2],
	      overflow: 'hidden',
	      borderWidth: 1,
	      borderStyle: 'solid',
	      borderColor: borderColor,
	      borderRadius: borderRadius,
	      color: colors.black,
	      backgroundColor: colors.white
	    } }));
	};
	
	Menu.defaultProps = {
	  rounded: true
	};
	
	Menu.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Menu;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Embed = function Embed(_ref, _ref2) {
	  var ratio = _ref.ratio;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['ratio', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var childProps = {
	    style: {
	      position: 'absolute',
	      width: '100%',
	      height: '100%',
	      top: 0,
	      bottom: 0,
	      left: 0,
	      border: 0
	    }
	  };
	
	  var styledChildren = _react2.default.Children.map(children, function (child) {
	    return _react2.default.cloneElement(child, childProps);
	  });
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Embed',
	    children: styledChildren,
	    baseStyle: {
	      position: 'relative',
	      height: 0,
	      padding: 0,
	      paddingBottom: ratio * 100 + '%',
	      overflow: 'hidden'
	    } }));
	};
	
	Embed.propTypes = {
	  
	  ratio: _react2.default.PropTypes.number
	};
	
	Embed.defaultProps = {
	  ratio: 9 / 16
	};
	
	Embed.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Embed;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Fixed = function Fixed(_ref) {
	  var top = _ref.top;
	  var right = _ref.right;
	  var bottom = _ref.bottom;
	  var left = _ref.left;
	  var zIndex = _ref.zIndex;
	
	  var props = _objectWithoutProperties(_ref, ['top', 'right', 'bottom', 'left', 'zIndex']);
	
	  var sx = {
	    position: 'fixed',
	    top: top ? 0 : null,
	    right: right ? 0 : null,
	    bottom: bottom ? 0 : null,
	    left: left ? 0 : null,
	    zIndex: zIndex
	  };
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Fixed',
	    baseStyle: sx }));
	};
	
	Fixed.propTypes = {
	  
	  top: _react2.default.PropTypes.bool,
	  
	  right: _react2.default.PropTypes.bool,
	  
	  bottom: _react2.default.PropTypes.bool,
	  
	  left: _react2.default.PropTypes.bool,
	  
	  zIndex: _react2.default.PropTypes.number
	};
	
	exports.default = Fixed;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Footer = function Footer(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var fontSizes = _config$rebass.fontSizes;
	  var borderColor = _config$rebass.borderColor;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'footer',
	    className: 'Footer',
	    baseStyle: {
	      display: 'flex',
	      flexWrap: 'wrap',
	      alignItems: 'center',
	      marginTop: scale[3],
	      paddingTop: scale[3],
	      paddingBottom: scale[3],
	      fontSize: fontSizes[5],
	      borderTopWidth: 1,
	      borderTopStyle: 'solid',
	      borderTopColor: borderColor
	    } }));
	};
	
	Footer.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Footer;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(315);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Heading = function Heading(_ref, _ref2) {
	  var level = _ref.level;
	  var size = _ref.size;
	  var big = _ref.big;
	  var alt = _ref.alt;
	  var _className = _ref._className;
	
	  var props = _objectWithoutProperties(_ref, ['level', 'size', 'big', 'alt', '_className']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var bold = _config$rebass.bold;
	
	  var Component = 'h' + level;
	
	  var h = function h(n) {
	    return fontSizes[n];
	  };
	
	  var fontSize = typeof size === 'number' ? h(size) : h(level);
	  if (alt) {
	    fontSize = h(4);
	  }
	  if (big) {
	    fontSize *= 2;
	  }
	
	  var cx = (0, _classnames2.default)(_className || 'Heading', {
	    'Heading_alt': alt
	  });
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: Component,
	    className: cx,
	    baseStyle: {
	      fontSize: fontSize,
	      fontWeight: bold,
	      lineHeight: 1.25,
	      margin: 0,
	      opacity: alt ? 0.5 : null
	    } }));
	};
	
	Heading.propTypes = {
	  
	  big: _react2.default.PropTypes.bool,
	  
	  level: _react2.default.PropTypes.oneOf([1, 2, 3, 4, 5, 6]),
	  
	  size: _react2.default.PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),
	  
	  alt: _react2.default.PropTypes.bool
	};
	
	Heading.defaultProps = {
	  level: 2
	};
	
	Heading.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Heading;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Heading = __webpack_require__(329);
	
	var _Heading2 = _interopRequireDefault(_Heading);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var HeadingLink = function HeadingLink(_ref, _ref2) {
	  var level = _ref.level;
	  var size = _ref.size;
	  var href = _ref.href;
	  var style = _ref.style;
	
	  var props = _objectWithoutProperties(_ref, ['level', 'size', 'href', 'style']);
	
	  var rebass = _ref2.rebass;
	
	  return _react2.default.createElement(
	    _Heading2.default,
	    {
	      _className: 'HeadingLink',
	      level: level,
	      size: size,
	      style: style },
	    _react2.default.createElement('a', _extends({}, props, {
	      href: href,
	      style: {
	        color: 'inherit',
	        textDecoration: 'none'
	      } }))
	  );
	};
	
	HeadingLink.propTypes = {
	  
	  level: _react2.default.PropTypes.oneOf([1, 2, 3, 4, 5, 6]),
	  
	  size: _react2.default.PropTypes.oneOf([1, 2, 3, 4, 5, 6]),
	  
	  href: _react2.default.PropTypes.string
	};
	
	HeadingLink.defaultProps = {
	  level: 2,
	  href: '#!'
	};
	
	HeadingLink.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = HeadingLink;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(315);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _Label = __webpack_require__(316);
	
	var _Label2 = _interopRequireDefault(_Label);
	
	var _Text = __webpack_require__(332);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Input = function Input(_ref, _ref2) {
	  var label = _ref.label;
	  var name = _ref.name;
	  var type = _ref.type;
	  var message = _ref.message;
	  var hideLabel = _ref.hideLabel;
	  var children = _ref.children;
	  var style = _ref.style;
	  var m = _ref.m;
	  var mt = _ref.mt;
	  var mr = _ref.mr;
	  var mb = _ref.mb;
	  var ml = _ref.ml;
	  var mx = _ref.mx;
	  var my = _ref.my;
	  var p = _ref.p;
	  var pt = _ref.pt;
	  var pr = _ref.pr;
	  var pb = _ref.pb;
	  var pl = _ref.pl;
	  var px = _ref.px;
	  var py = _ref.py;
	
	  var props = _objectWithoutProperties(_ref, ['label', 'name', 'type', 'message', 'hideLabel', 'children', 'style', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderColor = _config$rebass.borderColor;
	
	
	  var invalid = props.invalid || props['aria-invalid'];
	
	  var rootProps = {
	    style: style,
	    m: m,
	    mt: mt,
	    mr: mr,
	    mb: mb,
	    ml: ml,
	    mx: mx,
	    my: my,
	    p: p,
	    pt: pt,
	    pr: pr,
	    pb: pb,
	    pl: pl,
	    px: px,
	    py: py
	  };
	
	  var sx = {
	    root: {
	      marginBottom: scale[2],
	      color: invalid ? colors.error : null
	    },
	    input: {
	      fontFamily: 'inherit',
	      fontSize: 'inherit',
	      boxSizing: 'border-box',
	      display: 'block',
	      width: '100%',
	      height: scale[3],
	      margin: 0,
	      paddingLeft: scale[1],
	      paddingRight: scale[1],
	      color: 'inherit',
	      backgroundColor: 'rgba(255, 255, 255, .25)',
	      borderWidth: 1,
	      borderStyle: 'solid',
	      borderColor: invalid ? colors.error : borderColor
	    }
	  };
	
	  var cx = (0, _classnames2.default)('Input', {
	    'isInvalid': invalid,
	    'isDisabled': props.disabled,
	    'isReadonly': props.readOnly
	  });
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, rootProps, {
	      className: cx,
	      baseStyle: sx.root }),
	    _react2.default.createElement(_Label2.default, {
	      htmlFor: name,
	      hide: hideLabel,
	      children: label }),
	    _react2.default.createElement(_Base2.default, _extends({}, props, {
	      tagName: 'input',
	      type: type,
	      name: name,
	      baseStyle: sx.input })),
	    message && _react2.default.createElement(_Text2.default, { small: true, children: message })
	  );
	};
	
	Input.propTypes = {
	  
	  label: _react2.default.PropTypes.string.isRequired,
	  
	  name: _react2.default.PropTypes.string.isRequired,
	  
	  type: _react2.default.PropTypes.string,
	  
	  message: _react2.default.PropTypes.string,
	  
	  hideLabel: _react2.default.PropTypes.bool,
	  
	  rounded: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left'])])
	};
	
	Input.defaultProps = {
	  type: 'text',
	  rounded: true
	};
	
	Input.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Input;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Text = function Text(_ref, _ref2) {
	  var small = _ref.small;
	  var bold = _ref.bold;
	
	  var props = _objectWithoutProperties(_ref, ['small', 'bold']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var b = _config$rebass.bold;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'p',
	    className: 'Text',
	    baseStyle: {
	      fontSize: small ? fontSizes[6] : fontSizes[4],
	      fontWeight: bold ? b : null,
	      margin: 0
	    } }));
	};
	
	Text.propTypes = {
	  
	  small: _react2.default.PropTypes.bool,
	  
	  bold: _react2.default.PropTypes.bool
	};
	
	Text.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Text;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Input = __webpack_require__(331);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _ButtonOutline = __webpack_require__(311);
	
	var _ButtonOutline2 = _interopRequireDefault(_ButtonOutline);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var InlineForm = function InlineForm(_ref, _ref2) {
	  var label = _ref.label;
	  var name = _ref.name;
	  var value = _ref.value;
	  var placeholder = _ref.placeholder;
	  var onChange = _ref.onChange;
	  var buttonLabel = _ref.buttonLabel;
	  var onClick = _ref.onClick;
	
	  var props = _objectWithoutProperties(_ref, ['label', 'name', 'value', 'placeholder', 'onChange', 'buttonLabel', 'onClick']);
	
	  var rebass = _ref2.rebass;
	
	  var sx = {
	    root: {
	      display: 'flex',
	      alignItems: 'center'
	    },
	    input: {
	      flex: '1 1 auto'
	    },
	    button: {
	      marginLeft: -1
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      tagName: 'form',
	      className: 'InlineForm',
	      baseStyle: sx.root }),
	    _react2.default.createElement(_Input2.default, {
	      name: name,
	      label: label,
	      value: value,
	      placeholder: placeholder,
	      onChange: onChange,
	      style: sx.input,
	      mb: 0,
	      hideLabel: true,
	      rounded: 'left' }),
	    _react2.default.createElement(_ButtonOutline2.default, {
	      type: 'submit',
	      children: buttonLabel,
	      onClick: onClick,
	      style: sx.button,
	      rounded: 'right' })
	  );
	};
	
	InlineForm.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	InlineForm.propTypes = {
	  
	  label: _react2.default.PropTypes.string.isRequired,
	  
	  name: _react2.default.PropTypes.string.isRequired,
	  
	  value: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.number, _react2.default.PropTypes.string]),
	  
	  placeholder: _react2.default.PropTypes.string,
	  
	  onChange: _react2.default.PropTypes.func,
	  
	  buttonLabel: _react2.default.PropTypes.string,
	  
	  onClick: _react2.default.PropTypes.func
	};
	
	InlineForm.defaultProps = {
	  buttonLabel: 'Go',
	  onClick: function onClick() {},
	  onChange: function onChange() {}
	};
	
	exports.default = InlineForm;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var LinkBlock = function LinkBlock(_ref, _ref2) {
	  var _className = _ref._className;
	
	  var props = _objectWithoutProperties(_ref, ['_className']);
	
	  var rebass = _ref2.rebass;
	
	  var sx = {
	    display: 'block',
	    textDecoration: 'none',
	    color: 'inherit'
	  };
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: _className || 'LinkBlock',
	    baseStyle: sx }));
	};
	
	LinkBlock.propTypes = {
	  
	  is: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object, _react2.default.PropTypes.func])
	};
	
	LinkBlock.defaultProps = {
	  is: 'a'
	};
	
	LinkBlock.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = LinkBlock;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Media = function Media(_ref, _ref2) {
	  var img = _ref.img;
	  var right = _ref.right;
	  var align = _ref.align;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['img', 'right', 'align', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  var alignment = {
	    top: 'flex-start',
	    center: 'center',
	    bottom: 'flex-end'
	  };
	
	  var alignItems = alignment[align];
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'Media',
	      baseStyle: {
	        display: 'flex',
	        marginBottom: scale[2],
	        alignItems: alignItems
	      } }),
	    _react2.default.createElement('img', { src: img,
	      style: {
	        flex: 'none',
	        maxWidth: 'none',
	        marginRight: right ? 0 : scale[2],
	        marginLeft: right ? scale[2] : 0,
	        order: right ? 9999 : null
	      } }),
	    _react2.default.createElement('div', { children: children })
	  );
	};
	
	Media.propTypes = {
	  
	  img: _react2.default.PropTypes.string,
	  
	  right: _react2.default.PropTypes.bool,
	  
	  align: _react2.default.PropTypes.oneOf(['top', 'center', 'bottom'])
	};
	
	Media.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Media;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Message = function Message(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var bold = _config$rebass.bold;
	  var scale = _config$rebass.scale;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Message',
	    baseStyle: {
	      fontWeight: bold,
	      display: 'flex',
	      alignItems: 'center',
	      padding: scale[2],
	      marginBottom: scale[2]
	    } }));
	};
	
	Message.propTypes = {
	  
	  theme: _react2.default.PropTypes.oneOf(['primary', 'secondary', 'default', 'info', 'success', 'warning', 'error'])
	};
	
	Message.defaultProps = {
	  theme: 'default',
	  inverted: true,
	  rounded: true
	};
	
	Message.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Message;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var NavItem = function NavItem(_ref, _ref2) {
	  var small = _ref.small;
	
	  var props = _objectWithoutProperties(_ref, ['small']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var scale = _config$rebass.scale;
	  var bold = _config$rebass.bold;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'NavItem',
	    baseStyle: {
	      fontSize: small ? fontSizes[6] : fontSizes[5],
	      fontWeight: bold,
	      lineHeight: '1rem',
	      textDecoration: 'none',
	      display: 'flex',
	      alignItems: 'center',
	      alignSelf: 'stretch',
	      paddingTop: small ? scale[1] / 2 : scale[1],
	      paddingBottom: small ? scale[1] / 2 : scale[1],
	      paddingLeft: scale[1],
	      paddingRight: scale[1],
	      color: 'inherit',
	      cursor: 'pointer'
	    } }));
	};
	
	NavItem.propTypes = {
	  
	  small: _react2.default.PropTypes.bool,
	  
	  is: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object, _react2.default.PropTypes.func])
	};
	
	NavItem.defaultProps = {
	  is: 'a'
	};
	
	NavItem.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = NavItem;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Overlay = function Overlay(_ref, _ref2) {
	  var open = _ref.open;
	  var dark = _ref.dark;
	  var fullWidth = _ref.fullWidth;
	  var box = _ref.box;
	  var onDismiss = _ref.onDismiss;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['open', 'dark', 'fullWidth', 'box', 'onDismiss', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var zIndex = _config$rebass.zIndex;
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderRadius = _config$rebass.borderRadius;
	
	
	  var innerStyle = {
	    padding: scale[3],
	    backgroundColor: colors.white,
	    borderRadius: borderRadius
	  };
	
	  var sx = {
	    root: {
	      position: 'fixed',
	      top: 0,
	      right: 0,
	      bottom: 0,
	      left: 0,
	      zIndex: zIndex[2],
	      display: open ? 'flex' : 'none',
	      flexDirection: 'column',
	      alignItems: 'center',
	      justifyContent: 'center'
	    },
	    dismiss: {
	      position: 'fixed',
	      top: 0,
	      right: 0,
	      bottom: 0,
	      left: 0,
	      backgroundColor: dark ? colors.black : colors.white,
	      opacity: 0.875
	    },
	    inner: _extends({
	      position: 'relative',
	      zIndex: zIndex[1],
	      minWidth: 320,
	      width: fullWidth ? '100%' : null
	    }, box ? innerStyle : {})
	  };
	
	  return _react2.default.createElement(
	    'div',
	    {
	      className: 'Overlay',
	      style: sx.root },
	    _react2.default.createElement('div', { style: sx.dismiss,
	      onClick: onDismiss }),
	    _react2.default.createElement(_Base2.default, _extends({}, props, {
	      baseStyle: sx.inner,
	      children: children }))
	  );
	};
	
	Overlay.propTypes = {
	  
	  open: _react2.default.PropTypes.bool,
	  
	  dark: _react2.default.PropTypes.bool,
	  
	  box: _react2.default.PropTypes.bool,
	  
	  fullWidth: _react2.default.PropTypes.bool,
	  
	  onDismiss: _react2.default.PropTypes.func
	};
	
	Overlay.defaultProps = {
	  open: false,
	  dark: true,
	  onDismiss: function onDismiss() {}
	};
	
	Overlay.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Overlay;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _Heading = __webpack_require__(329);
	
	var _Heading2 = _interopRequireDefault(_Heading);
	
	var _Text = __webpack_require__(332);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var PageHeader = function PageHeader(_ref, _ref2) {
	  var heading = _ref.heading;
	  var description = _ref.description;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['heading', 'description', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var borderColor = _config$rebass.borderColor;
	
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      tagName: 'header',
	      className: 'PageHeader',
	      baseStyle: {
	        display: 'flex',
	        flexWrap: 'wrap',
	        alignItems: 'center',
	        paddingTop: scale[3],
	        paddingBottom: scale[2],
	        marginTop: scale[4],
	        marginBottom: scale[4],
	        borderBottomWidth: 2,
	        borderBottomStyle: 'solid',
	        borderColor: borderColor
	      } }),
	    _react2.default.createElement(
	      'div',
	      { style: { flex: '1 1 auto' } },
	      _react2.default.createElement(_Heading2.default, { level: 1, children: heading }),
	      description && _react2.default.createElement(_Text2.default, { children: description })
	    ),
	    children
	  );
	};
	
	PageHeader.propTypes = {
	  
	  heading: _react2.default.PropTypes.string,
	  
	  description: _react2.default.PropTypes.string
	};
	
	PageHeader.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = PageHeader;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Panel = function Panel(_ref, _ref2) {
	  var theme = _ref.theme;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['theme', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderRadius = _config$rebass.borderRadius;
	
	
	  var borderColor = colors[theme];
	  var styledChildren = _react2.default.Children.map(children, function (child) {
	    if (child && child.props && child.props.theme === 'default') {
	      return _react2.default.cloneElement(child, { theme: theme });
	    } else {
	      return child;
	    }
	  });
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Panel',
	    baseStyle: {
	      padding: scale[2],
	      marginBottom: scale[2],
	      borderWidth: 1,
	      borderStyle: 'solid',
	      borderColor: borderColor,
	      borderRadius: borderRadius,
	      backgroundColor: colors.white
	    },
	    children: styledChildren }));
	};
	
	Panel.propTypes = {
	  
	  theme: _react2.default.PropTypes.oneOf(['primary', 'secondary', 'default', 'info', 'success', 'warning', 'error'])
	};
	
	Panel.defaultProps = {
	  theme: 'default'
	};
	
	Panel.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Panel;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var PanelFooter = function PanelFooter(_ref, _ref2) {
	  var theme = _ref.theme;
	
	  var props = _objectWithoutProperties(_ref, ['theme']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderRadius = _config$rebass.borderRadius;
	  var fontSizes = _config$rebass.fontSizes;
	
	  var borderColor = colors[theme];
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'PanelFooter',
	    baseStyle: {
	      fontSize: fontSizes[6],
	      display: 'flex',
	      alignItems: 'center',
	      marginTop: scale[2],
	      marginRight: -scale[2],
	      marginBottom: -scale[2],
	      marginLeft: -scale[2],
	      padding: scale[2],
	      borderTopWidth: 1,
	      borderTopStyle: 'solid',
	      borderColor: borderColor,
	      borderRadius: '0 0 ' + borderRadius + 'px ' + borderRadius + 'px'
	    } }));
	};
	
	PanelFooter.propTypes = {
	  
	  theme: _react2.default.PropTypes.oneOf(['primary', 'secondary', 'default', 'info', 'success', 'warning', 'error'])
	};
	
	PanelFooter.defaultProps = {
	  theme: 'default'
	};
	
	PanelFooter.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = PanelFooter;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var PanelHeader = function PanelHeader(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var bold = _config$rebass.bold;
	  var scale = _config$rebass.scale;
	  var borderRadius = _config$rebass.borderRadius;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'PanelHeader',
	    inverted: true,
	    baseStyle: {
	      display: 'flex',
	      alignItems: 'center',
	      fontWeight: bold,
	      marginTop: -scale[2] - 1,
	      marginRight: -scale[2] - 1,
	      marginLeft: -scale[2] - 1,
	      marginBottom: scale[2],
	      padding: scale[2],
	      borderRadius: borderRadius + 'px ' + borderRadius + 'px 0 0'
	    } }));
	};
	
	PanelHeader.propTypes = {
	  
	  theme: _react2.default.PropTypes.oneOf(['primary', 'secondary', 'default', 'info', 'success', 'warning', 'error'])
	};
	
	PanelHeader.defaultProps = {
	  theme: 'default',
	  inverted: true
	};
	
	PanelHeader.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = PanelHeader;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Pre = function Pre(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var monospace = _config$rebass.monospace;
	  var scale = _config$rebass.scale;
	  var borderColor = _config$rebass.borderColor;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'pre',
	    className: 'Pre',
	    baseStyle: {
	      fontFamily: monospace,
	      paddingLeft: scale[2],
	      marginBottom: scale[2],
	      borderLeft: '4px solid ' + borderColor,
	      overflowX: 'scroll'
	    } }));
	};
	
	Pre.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Pre;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Progress = function Progress(_ref, _ref2) {
	  var value = _ref.value;
	
	  var props = _objectWithoutProperties(_ref, ['value']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  var css = '\n    .Progress_progress::-webkit-progress-bar {\n      background-color: rgba(0, 0, 0, .125);\n    }\n    .Progress_progress::-webkit-progress-value {\n      background-color: currentcolor;\n    }\n    .Progress_progress::-moz-progress-bar {\n      background-color: currentcolor;\n    }\n  '.replace(/\n/g, '').replace(/\s\s+/g, ' ');
	
	  var sx = {
	    root: {
	      marginBottom: scale[2],
	      overflow: 'hidden',
	      backgroundColor: 'rgba(0, 0, 0, .125)',
	      borderRadius: 9999
	    },
	    progress: {
	      display: 'block',
	      width: '100%',
	      height: 8,
	      overflow: 'hidden',
	      border: 0,
	      WebkitAppearance: 'none',
	      appearance: 'none'
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'Progress',
	      baseStyle: sx.root }),
	    _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: css } }),
	    _react2.default.createElement('progress', _extends({}, props, {
	      className: 'Progress_progress',
	      value: value,
	      children: value,
	      style: sx.progress }))
	  );
	};
	
	Progress.propTypes = {
	  
	  value: _react2.default.PropTypes.number,
	  
	  color: _react2.default.PropTypes.string
	};
	
	Progress.defaultProps = {
	  color: 'primary'
	};
	
	Progress.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Progress;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(315);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _Label = __webpack_require__(316);
	
	var _Label2 = _interopRequireDefault(_Label);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Radio = function Radio(_ref, _ref2) {
	  var label = _ref.label;
	  var name = _ref.name;
	  var checked = _ref.checked;
	  var children = _ref.children;
	  var backgroundColor = _ref.backgroundColor;
	  var theme = _ref.theme;
	  var circle = _ref.circle;
	  var inverted = _ref.inverted;
	  var style = _ref.style;
	  var m = _ref.m;
	  var mt = _ref.mt;
	  var mr = _ref.mr;
	  var mb = _ref.mb;
	  var ml = _ref.ml;
	  var mx = _ref.mx;
	  var my = _ref.my;
	  var p = _ref.p;
	  var pt = _ref.pt;
	  var pr = _ref.pr;
	  var pb = _ref.pb;
	  var pl = _ref.pl;
	  var px = _ref.px;
	  var py = _ref.py;
	
	  var props = _objectWithoutProperties(_ref, ['label', 'name', 'checked', 'children', 'backgroundColor', 'theme', 'circle', 'inverted', 'style', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	
	
	  var invalid = props['aria-invalid'] || props.invalid;
	
	  var rootProps = {
	    style: style,
	    m: m,
	    mt: mt,
	    mr: mr,
	    mb: mb,
	    ml: ml,
	    mx: mx,
	    my: my,
	    p: p,
	    pt: pt,
	    pr: pr,
	    pb: pb,
	    pl: pl,
	    px: px,
	    py: py
	  };
	
	  var dotProps = {
	    backgroundColor: backgroundColor,
	    theme: theme,
	    circle: circle,
	    inverted: inverted
	  };
	
	  var sx = {
	    root: {
	      position: 'relative',
	      display: 'flex',
	      alignItems: 'center',
	      paddingBottom: scale[1],
	      color: invalid ? colors.error : null,
	      cursor: 'pointer'
	    },
	    input: {
	      position: 'absolute',
	      zIndex: -1,
	      opacity: 0
	    },
	    dot: {
	      width: scale[2],
	      height: scale[2],
	      marginRight: scale[1],
	      backgroundColor: checked ? colors.white : 'currentcolor',
	      borderWidth: 5,
	      borderStyle: checked ? 'solid' : null,
	      borderColor: checked ? 'currentcolor' : null,
	      opacity: checked ? null : 1 / 4,
	      transition: 'border .1s ease-out'
	    }
	  };
	
	  var cx = (0, _classnames2.default)('Radio', {
	    'isInvalid': invalid,
	    'isDisabled': props.disabled,
	    'isReadonly': props.readOnly
	  });
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, rootProps, {
	      tagName: _Label2.default,
	      className: cx,
	      baseStyle: sx.root }),
	    _react2.default.createElement('input', _extends({}, props, {
	      name: name,
	      checked: checked,
	      type: 'radio',
	      style: sx.input })),
	    _react2.default.createElement(_Base2.default, _extends({}, dotProps, {
	      className: 'Radio_dot',
	      baseStyle: sx.dot })),
	    label
	  );
	};
	
	Radio.propTypes = {
	  
	  label: _react2.default.PropTypes.string.isRequired,
	  
	  name: _react2.default.PropTypes.string.isRequired
	};
	
	Radio.defaultProps = {
	  circle: true
	};
	
	Radio.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Radio;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Rating = function Rating(_ref, _ref2) {
	  var value = _ref.value;
	  var onClick = _ref.onClick;
	
	  var props = _objectWithoutProperties(_ref, ['value', 'onClick']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var colors = _config$rebass.colors;
	
	
	  var stars = Array.from({ length: 5 }, function (a, b) {
	    return b;
	  });
	
	  var sx = {
	    root: {
	      display: 'inline-flex',
	      fontSize: fontSizes[4]
	    },
	    star: {
	      position: 'relative',
	      fontSize: 'inherit',
	      lineHeight: 1,
	      margin: 0,
	      marginRight: '.25em',
	      padding: '.25em 0',
	      border: 0,
	      color: 'inherit',
	      backgroundColor: 'transparent',
	      cursor: onClick ? 'pointer' : null
	    }
	  };
	
	  var getEmptyStyle = function getEmptyStyle(i) {
	    var active = i < value;
	    var color = active ? null : colors.gray;
	    return { color: color };
	  };
	
	  var getActiveStyle = function getActiveStyle(i) {
	    var active = i < value;
	    var display = active ? null : 'none';
	    var clip = value > i && value < i + 1 ? 'rect(0, .5em, 1em, 0)' : null;
	
	    return {
	      position: 'absolute',
	      top: '.25em',
	      left: 0,
	      display: display,
	      clip: clip
	    };
	  };
	
	  var handleClick = function handleClick(i) {
	    return function (e) {
	      if (onClick) {
	        onClick(i + 1);
	      }
	    };
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'Rating',
	      baseStyle: sx.root }),
	    stars.map(function (s) {
	      return _react2.default.createElement(
	        'button',
	        {
	          key: s,
	          style: sx.star,
	          onClick: handleClick(s) },
	        _react2.default.createElement(
	          'span',
	          { style: getEmptyStyle(s) },
	          '☆ '
	        ),
	        _react2.default.createElement(
	          'span',
	          { style: getActiveStyle(s) },
	          '★'
	        )
	      );
	    })
	  );
	};
	
	Rating.propTypes = {
	  
	  value: _react2.default.PropTypes.number,
	  
	  onClick: _react2.default.PropTypes.func
	};
	
	Rating.defaultProps = {
	  value: 0,
	  color: 'orange'
	};
	
	Rating.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Rating;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Section = function Section(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    tagName: 'section',
	    className: 'Section',
	    baseStyle: {
	      paddingTop: scale[4],
	      paddingBottom: scale[4]
	    } }));
	};
	
	Section.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Section;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _HeadingLink = __webpack_require__(330);
	
	var _HeadingLink2 = _interopRequireDefault(_HeadingLink);
	
	var _Text = __webpack_require__(332);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var SectionHeader = function SectionHeader(_ref, _ref2) {
	  var heading = _ref.heading;
	  var href = _ref.href;
	  var description = _ref.description;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['heading', 'href', 'description', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var borderColor = _config$rebass.borderColor;
	
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      tagName: 'header',
	      className: 'SectionHeader',
	      baseStyle: {
	        display: 'flex',
	        alignItems: 'center',
	        paddingBottom: scale[1],
	        marginTop: scale[3],
	        marginBottom: scale[3],
	        borderBottomWidth: 1,
	        borderBottomStyle: 'solid',
	        borderBottomColor: borderColor
	      } }),
	    _react2.default.createElement(
	      'div',
	      { style: {
	          flex: '1 1 auto' } },
	      _react2.default.createElement(_HeadingLink2.default, { href: href || '#' + (heading || ''), children: heading }),
	      description && _react2.default.createElement(_Text2.default, { children: description })
	    ),
	    children
	  );
	};
	
	SectionHeader.propTypes = {
	  
	  heading: _react2.default.PropTypes.string,
	  
	  href: _react2.default.PropTypes.string,
	  
	  description: _react2.default.PropTypes.string
	};
	
	SectionHeader.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = SectionHeader;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(315);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _Label = __webpack_require__(316);
	
	var _Label2 = _interopRequireDefault(_Label);
	
	var _Text = __webpack_require__(332);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _Arrow = __webpack_require__(302);
	
	var _Arrow2 = _interopRequireDefault(_Arrow);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Select = function Select(_ref, _ref2) {
	  var label = _ref.label;
	  var name = _ref.name;
	  var options = _ref.options;
	  var message = _ref.message;
	  var hideLabel = _ref.hideLabel;
	  var children = _ref.children;
	  var style = _ref.style;
	  var m = _ref.m;
	  var mt = _ref.mt;
	  var mr = _ref.mr;
	  var mb = _ref.mb;
	  var ml = _ref.ml;
	  var mx = _ref.mx;
	  var my = _ref.my;
	  var p = _ref.p;
	  var pt = _ref.pt;
	  var pr = _ref.pr;
	  var pb = _ref.pb;
	  var pl = _ref.pl;
	  var px = _ref.px;
	  var py = _ref.py;
	
	  var props = _objectWithoutProperties(_ref, ['label', 'name', 'options', 'message', 'hideLabel', 'children', 'style', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderColor = _config$rebass.borderColor;
	
	
	  var invalid = props['aria-invalid'] || props.invalid;
	
	  var rootProps = {
	    style: style,
	    m: m,
	    mt: mt,
	    mr: mr,
	    mb: mb,
	    ml: ml,
	    mx: mx,
	    my: my,
	    p: p,
	    pt: pt,
	    pr: pr,
	    pb: pb,
	    pl: pl,
	    px: px,
	    py: py
	  };
	
	  var sx = {
	    root: {
	      marginBottom: scale[2],
	      color: invalid ? colors.error : null
	    },
	    select: {
	      fontFamily: 'inherit',
	      fontSize: 'inherit',
	      boxSizing: 'border-box',
	      display: 'block',
	      width: '100%',
	      paddingLeft: scale[1],
	      paddingRight: scale[1],
	      height: scale[3],
	      color: 'inherit',
	      backgroundColor: 'transparent',
	      backgroundImage: 'none',
	      borderWidth: 1,
	      borderStyle: 'solid',
	      borderColor: invalid ? colors.error : borderColor,
	      MozAppearance: 'none',
	      WebkitAppearance: 'none'
	    },
	    wrapper: {
	      position: 'relative'
	    },
	    arrow: {
	      position: 'absolute',
	      right: 0,
	      top: 0,
	      margin: scale[3] / 2,
	      transform: 'translate(50%, -50%)'
	    }
	  };
	
	  var cx = (0, _classnames2.default)('Select', {
	    'isInvalid': invalid,
	    'isDisabled': props.disabled,
	    'isReadonly': props.readOnly
	  });
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, rootProps, {
	      className: cx,
	      baseStyle: sx.root }),
	    _react2.default.createElement(_Label2.default, {
	      htmlFor: name,
	      hide: hideLabel,
	      children: label }),
	    _react2.default.createElement(
	      'div',
	      { style: sx.wrapper },
	      _react2.default.createElement(
	        _Base2.default,
	        _extends({}, props, {
	          tagName: 'select',
	          name: name,
	          baseStyle: sx.select }),
	        options.map(function (option, i) {
	          return _react2.default.createElement('option', _extends({ key: i }, option));
	        })
	      ),
	      _react2.default.createElement(_Arrow2.default, { style: sx.arrow })
	    ),
	    message && _react2.default.createElement(_Text2.default, { small: true, children: message })
	  );
	};
	
	Select.propTypes = {
	  
	  label: _react2.default.PropTypes.string.isRequired,
	  
	  name: _react2.default.PropTypes.string.isRequired,
	  
	  options: _react2.default.PropTypes.array.isRequired,
	  
	  message: _react2.default.PropTypes.string,
	  
	  hideLabel: _react2.default.PropTypes.bool
	};
	
	Select.defaultProps = {
	  options: [],
	  rounded: true
	};
	
	Select.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Select;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _SequenceMapStep = __webpack_require__(351);
	
	var _SequenceMapStep2 = _interopRequireDefault(_SequenceMapStep);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var SequenceMap = function SequenceMap(_ref, _ref2) {
	  var steps = _ref.steps;
	  var active = _ref.active;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['steps', 'active', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var bold = _config$rebass.bold;
	  var colors = _config$rebass.colors;
	
	
	  var chx = _react2.default.Children.map(children, function (child, i) {
	    return _react2.default.cloneElement(child, {
	      width: 1 / children.length * 100 + '%',
	      first: i === 0
	    });
	  });
	
	  var sx = {
	    display: 'flex',
	    alignItems: 'flex-start',
	    justifyContent: 'space-between',
	    fontSize: fontSizes[5],
	    fontWeight: bold,
	    color: colors.gray
	  };
	  var schx = steps.map(function (step, i) {
	    return _react2.default.createElement(_SequenceMapStep2.default, _extends({
	      key: i,
	      first: i === 0,
	      width: 100 / steps.length + '%',
	      active: i <= active
	    }, step));
	  });
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    children: chx || schx,
	    className: 'SequenceMap',
	    baseStyle: sx }));
	};
	
	SequenceMap.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	SequenceMap.propTypes = {
	  
	  steps: _react2.default.PropTypes.array,
	  
	  active: _react2.default.PropTypes.number
	};
	
	SequenceMap.defaultProps = {
	  steps: []
	};
	
	SequenceMap.Step = _SequenceMapStep2.default;
	
	exports.default = SequenceMap;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _LinkBlock = __webpack_require__(334);
	
	var _LinkBlock2 = _interopRequireDefault(_LinkBlock);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var SequenceMapStep = function SequenceMapStep(_ref, _ref2) {
	  var width = _ref.width;
	  var first = _ref.first;
	  var active = _ref.active;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['width', 'first', 'active', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	
	
	  var sx = {
	    link: {
	      position: 'relative',
	      display: 'flex',
	      flexDirection: 'column',
	      alignItems: 'center',
	      textAlign: 'center',
	      lineHeight: 1.25,
	      flex: '1 1 ' + width,
	      paddingLeft: scale[1],
	      paddingRight: scale[1]
	    },
	    dot: {
	      position: 'relative',
	      zIndex: 1,
	      display: 'inline-block',
	      width: scale[2],
	      height: scale[2],
	      marginBottom: scale[1],
	      borderRadius: 99999,
	      backgroundColor: 'currentcolor'
	    },
	    line: {
	      position: 'absolute',
	      top: scale[2] / 2,
	      transform: 'translate(-50%, -50%)',
	      left: 0,
	      right: 0,
	      height: 4,
	      backgroundColor: 'currentcolor'
	    },
	    label: {},
	    active: {
	      color: colors.primary
	    }
	  };
	
	  return _react2.default.createElement(
	    _LinkBlock2.default,
	    _extends({
	      _className: 'SequenceMap_Step',
	      style: _extends({}, sx.link, active ? sx.active : {})
	    }, props),
	    _react2.default.createElement('div', { style: sx.dot }),
	    !first && _react2.default.createElement('div', { style: sx.line }),
	    _react2.default.createElement(
	      'div',
	      { style: sx.label },
	      children
	    )
	  );
	};
	
	SequenceMapStep.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	SequenceMapStep.propTypes = {
	  
	  width: _react2.default.PropTypes.string,
	  
	  first: _react2.default.PropTypes.bool,
	  
	  active: _react2.default.PropTypes.bool
	};
	
	exports.default = SequenceMapStep;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Label = __webpack_require__(316);
	
	var _Label2 = _interopRequireDefault(_Label);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Slider = function Slider(_ref, _ref2) {
	  var label = _ref.label;
	  var name = _ref.name;
	  var fill = _ref.fill;
	  var hideLabel = _ref.hideLabel;
	  var children = _ref.children;
	  var style = _ref.style;
	  var m = _ref.m;
	  var mt = _ref.mt;
	  var mr = _ref.mr;
	  var mb = _ref.mb;
	  var ml = _ref.ml;
	  var mx = _ref.mx;
	  var my = _ref.my;
	  var p = _ref.p;
	  var pt = _ref.pt;
	  var pr = _ref.pr;
	  var pb = _ref.pb;
	  var pl = _ref.pl;
	  var px = _ref.px;
	  var py = _ref.py;
	
	  var props = _objectWithoutProperties(_ref, ['label', 'name', 'fill', 'hideLabel', 'children', 'style', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  var max = props.max || 100;
	  var min = props.min || 0;
	  var percent = (props.value - min) / (max - min) * 100;
	
	  var rootProps = {
	    style: style,
	    m: m,
	    mt: mt,
	    mr: mr,
	    mb: mb,
	    ml: ml,
	    mx: mx,
	    my: my,
	    p: p,
	    pt: pt,
	    pr: pr,
	    pb: pb,
	    pl: pl,
	    px: px,
	    py: py
	  };
	
	  var css = '\n    .Slider_input::-webkit-slider-thumb {\n      width: 24px;\n      height: 24px;\n      background-color: currentcolor;\n      border: 0;\n      border-radius: 999px;\n      -webkit-appearance: none;\n    }\n    .Slider_input::-moz-range-thumb {\n      width: 24px;\n      height: 24px;\n      background-color: currentcolor;\n      border: 0;\n      border-radius: 999px;\n    }\n  '.replace(/\n/g, '').replace(/\s\s+/g, ' ');
	
	  var backgroundImage = fill ? 'linear-gradient(90deg, currentcolor, currentcolor ' + percent + '%, transparent ' + percent + '%)' : null;
	
	  var sx = {
	    root: {
	      paddingBottom: scale[2]
	    },
	    input: {
	      boxSizing: 'border-box',
	      display: 'block',
	      width: '100%',
	      margin: 0,
	      marginTop: scale[1],
	      cursor: 'pointer',
	      color: 'inherit',
	      backgroundColor: 'rgba(0, 0, 0, ' + 1 / 8 + ')',
	      backgroundImage: backgroundImage,
	      backgroundClip: 'content-box',
	      height: 6,
	      borderRadius: 999,
	      WebkitAppearance: 'none',
	      appearance: 'none'
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, rootProps, {
	      className: 'Slider',
	      baseStyle: sx.root }),
	    _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: css } }),
	    _react2.default.createElement(_Label2.default, {
	      htmlFor: name,
	      hide: hideLabel,
	      children: label }),
	    _react2.default.createElement('input', _extends({}, props, {
	      type: 'range',
	      name: name,
	      className: 'Slider_input',
	      style: sx.input }))
	  );
	};
	
	Slider.propTypes = {
	  
	  label: _react2.default.PropTypes.string.isRequired,
	  
	  name: _react2.default.PropTypes.string.isRequired,
	  
	  fill: _react2.default.PropTypes.bool,
	  
	  hideLabel: _react2.default.PropTypes.bool
	};
	
	Slider.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Slider;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Space = function Space(_ref, _ref2) {
	  var x = _ref.x;
	  var auto = _ref.auto;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['x', 'auto', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Space',
	    baseStyle: {
	      display: 'inline-block',
	      flex: auto ? '1 1 auto' : null,
	      width: scale[x]
	    } }));
	};
	
	Space.propTypes = {
	  
	  x: _react2.default.PropTypes.oneOf([1, 2, 3, 4]),
	  
	  auto: _react2.default.PropTypes.bool
	};
	
	Space.defaultProps = {
	  x: 1
	};
	
	Space.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Space;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Stat = function Stat(_ref, _ref2) {
	  var value = _ref.value;
	  var label = _ref.label;
	  var unit = _ref.unit;
	  var topLabel = _ref.topLabel;
	
	  var props = _objectWithoutProperties(_ref, ['value', 'label', 'unit', 'topLabel']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var bold = _config$rebass.bold;
	  var scale = _config$rebass.scale;
	
	
	  var sx = {
	    root: {
	      display: 'inline-block'
	    },
	    value: {
	      fontSize: fontSizes[0],
	      letterSpace: '-.125em',
	      fontWeight: bold,
	      lineHeight: 1,
	      marginTop: topLabel ? scale[1] / 2 : null,
	      marginBottom: topLabel ? null : scale[1] / 2
	    },
	    unit: {
	      fontSize: fontSizes[3]
	    },
	    label: {
	      fontSize: fontSizes[6],
	      fontWeight: bold,
	      lineHeight: 1
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'Stat',
	      baseStyle: sx.root }),
	    topLabel && _react2.default.createElement(
	      'div',
	      { style: sx.label },
	      label
	    ),
	    _react2.default.createElement(
	      'div',
	      { style: sx.value },
	      value,
	      unit && _react2.default.createElement(
	        'span',
	        { style: sx.unit },
	        unit
	      )
	    ),
	    !topLabel && _react2.default.createElement(
	      'div',
	      { style: sx.label },
	      label
	    )
	  );
	};
	
	Stat.propTypes = {
	  
	  value: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.number, _react2.default.PropTypes.string]),
	  
	  unit: _react2.default.PropTypes.string,
	  
	  label: _react2.default.PropTypes.string,
	  
	  topLabel: _react2.default.PropTypes.bool
	};
	
	Stat.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Stat;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Switch = function Switch(_ref, _ref2) {
	  var checked = _ref.checked;
	
	  var props = _objectWithoutProperties(_ref, ['checked']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderColor = _config$rebass.borderColor;
	
	
	  var color = checked ? colors.success : borderColor;
	  var transform = checked ? 'translateX(' + scale[3] * 0.5 + 'px)' : 'translateX(0)';
	
	  var sx = {
	    root: {
	      display: 'inline-flex',
	      width: scale[3] * 1.5,
	      height: scale[3],
	      color: color,
	      backgroundColor: checked ? 'currentcolor' : null,
	      borderRadius: 99999,
	      boxShadow: 'inset 0 0 0 2px',
	      cursor: 'pointer'
	    },
	    dot: {
	      width: scale[3],
	      height: scale[3],
	      transitionProperty: 'transform, color',
	      transitionDuration: '.1s',
	      transitionTimingFunction: 'ease-out',
	      transform: transform,
	      boxShadow: 'inset 0 0 0 2px',
	      borderRadius: 99999,
	      color: color,
	      backgroundColor: colors.white
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'Switch',
	      role: 'checkbox',
	      'aria-checked': checked,
	      baseStyle: sx.root }),
	    _react2.default.createElement('div', { style: sx.dot })
	  );
	};
	
	Switch.propTypes = {
	  
	  checked: _react2.default.PropTypes.bool
	};
	
	Switch.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Switch;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Table = function Table(_ref, _ref2) {
	  var headings = _ref.headings;
	  var data = _ref.data;
	
	  var props = _objectWithoutProperties(_ref, ['headings', 'data']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var scale = _config$rebass.scale;
	  var borderColor = _config$rebass.borderColor;
	
	
	  var sx = {
	    root: {
	      maxWidth: '100%',
	      overflowX: 'scroll',
	      marginBottom: scale[2],
	      borderColor: borderColor
	    },
	    table: {
	      fontSize: fontSizes[5],
	      lineHeight: 1.25,
	      borderCollapse: 'separate',
	      borderSpacing: 0,
	      width: '100%'
	    },
	    thead: {},
	    tbody: {},
	    tr: {},
	    th: {
	      textAlign: 'left',
	      verticalAlign: 'bottom',
	      padding: scale[1],
	      paddingLeft: 0,
	      borderBottomStyle: 'solid',
	      borderBottomWidth: 2,
	      borderColor: 'inherit'
	    },
	    td: {
	      padding: scale[1],
	      paddingLeft: 0,
	      borderBottomStyle: 'solid',
	      borderBottomWidth: 1,
	      borderColor: 'inherit'
	    }
	  };
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, props, {
	      className: 'Table',
	      baseStyle: sx.root }),
	    _react2.default.createElement(
	      'table',
	      { style: sx.table },
	      _react2.default.createElement(
	        'thead',
	        { style: sx.thead },
	        _react2.default.createElement(
	          'tr',
	          { style: sx.tr },
	          headings.map(function (heading, i) {
	            return _react2.default.createElement('th', { key: i,
	              style: sx.th,
	              children: heading });
	          })
	        )
	      ),
	      _react2.default.createElement(
	        'tbody',
	        { style: sx.tbody },
	        data.map(function (row, i) {
	          return _react2.default.createElement(
	            'tr',
	            { key: i,
	              style: sx.tr },
	            row.map(function (datum, j) {
	              return _react2.default.createElement('td', { key: j,
	                style: sx.td,
	                children: datum });
	            })
	          );
	        })
	      )
	    )
	  );
	};
	
	Table.propTypes = {
	  
	  headings: _react2.default.PropTypes.array,
	  
	  data: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.array)
	};
	
	Table.defaultProps = {
	  headings: [],
	  data: []
	};
	
	Table.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Table;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(315);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _Label = __webpack_require__(316);
	
	var _Label2 = _interopRequireDefault(_Label);
	
	var _Text = __webpack_require__(332);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Textarea = function Textarea(_ref, _ref2) {
	  var label = _ref.label;
	  var name = _ref.name;
	  var message = _ref.message;
	  var hideLabel = _ref.hideLabel;
	  var children = _ref.children;
	  var style = _ref.style;
	  var m = _ref.m;
	  var mt = _ref.mt;
	  var mr = _ref.mr;
	  var mb = _ref.mb;
	  var ml = _ref.ml;
	  var mx = _ref.mx;
	  var my = _ref.my;
	  var p = _ref.p;
	  var pt = _ref.pt;
	  var pr = _ref.pr;
	  var pb = _ref.pb;
	  var pl = _ref.pl;
	  var px = _ref.px;
	  var py = _ref.py;
	
	  var props = _objectWithoutProperties(_ref, ['label', 'name', 'message', 'hideLabel', 'children', 'style', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	  var borderColor = _config$rebass.borderColor;
	
	
	  var invalid = props['aria-invalid'] || props.invalid;
	
	  var rootProps = {
	    style: style,
	    m: m,
	    mt: mt,
	    mr: mr,
	    mb: mb,
	    ml: ml,
	    mx: mx,
	    my: my,
	    p: p,
	    pt: pt,
	    pr: pr,
	    pb: pb,
	    pl: pl,
	    px: px,
	    py: py
	  };
	
	  var sx = {
	    root: {
	      marginBottom: scale[2],
	      color: invalid ? colors.error : null
	    },
	    textarea: {
	      fontFamily: 'inherit',
	      fontSize: 'inherit',
	      boxSizing: 'border-box',
	      display: 'block',
	      width: '100%',
	      padding: scale[1],
	      borderWidth: 1,
	      borderStyles: 'solid',
	      borderColor: borderColor
	    }
	  };
	
	  var cx = (0, _classnames2.default)('Textarea', {
	    'isInvalid': invalid,
	    'isDisabled': props.disabled,
	    'isReadonly': props.readOnly
	  });
	
	  return _react2.default.createElement(
	    _Base2.default,
	    _extends({}, rootProps, {
	      className: cx,
	      baseStyle: sx.root }),
	    _react2.default.createElement(_Label2.default, {
	      htmlFor: name,
	      hide: hideLabel,
	      children: label }),
	    _react2.default.createElement(_Base2.default, _extends({}, props, {
	      tagName: 'textarea',
	      name: name,
	      baseStyle: sx.textarea })),
	    message && _react2.default.createElement(_Text2.default, { small: true, children: message })
	  );
	};
	
	Textarea.propTypes = {
	  
	  label: _react2.default.PropTypes.string.isRequired,
	  
	  name: _react2.default.PropTypes.string.isRequired,
	  
	  message: _react2.default.PropTypes.string,
	  
	  hideLabel: _react2.default.PropTypes.bool
	};
	
	Textarea.defaultProps = {
	  rounded: true
	};
	
	Textarea.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Textarea;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Toolbar = function Toolbar(_ref, _ref2) {
	  var props = _objectWithoutProperties(_ref, []);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	
	
	  return _react2.default.createElement(_Base2.default, _extends({}, props, {
	    className: 'Toolbar',
	    baseStyle: {
	      display: 'flex',
	      alignItems: 'center',
	      minHeight: 48,
	      paddingLeft: scale[1],
	      paddingRight: scale[1],
	      color: colors.white,
	      backgroundColor: colors.primary
	    } }));
	};
	
	Toolbar.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Toolbar;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(263);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Base = __webpack_require__(262);
	
	var _Base2 = _interopRequireDefault(_Base);
	
	var _config = __webpack_require__(301);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	
	
	var Tooltip = function Tooltip(_ref, _ref2) {
	  var title = _ref.title;
	  var children = _ref.children;
	
	  var props = _objectWithoutProperties(_ref, ['title', 'children']);
	
	  var rebass = _ref2.rebass;
	
	  var _config$rebass = _extends({}, _config2.default, rebass);
	
	  var fontSizes = _config$rebass.fontSizes;
	  var scale = _config$rebass.scale;
	  var colors = _config$rebass.colors;
	
	
	  var css = '\n    .Tooltip_box { display: none }\n    .Tooltip:hover .Tooltip_box { display: block }\n  '.replace(/\n/g, '').replace(/\s\s+/g, ' ');
	
	  var sx = {
	    root: {
	      position: 'relative',
	      display: 'inline-block',
	      cursor: 'pointer'
	    },
	    box: {
	      position: 'absolute',
	      bottom: '100%',
	      left: '50%',
	      fontSize: fontSizes[6],
	      whiteSpace: 'nowrap',
	      paddingTop: scale[1] / 2,
	      paddingBottom: scale[1] / 2,
	      paddingLeft: scale[1],
	      paddingRight: scale[1],
	      color: colors.white,
	      backgroundColor: colors.black,
	      transform: 'translate(-50%, -8px)'
	    },
	    arrow: {
	      position: 'absolute',
	      top: '100%',
	      left: '50%',
	      border: '6px solid transparent',
	      borderTopColor: colors.black,
	      transform: 'translate(-50%, 0)'
	    }
	  };
	
	  return _react2.default.createElement(
	    'span',
	    {
	      className: 'Tooltip',
	      title: title,
	      style: sx.root },
	    _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: css } }),
	    _react2.default.createElement(
	      _Base2.default,
	      _extends({}, props, {
	        baseStyle: sx.box,
	        className: 'Tooltip Tooltip_box' }),
	      title,
	      _react2.default.createElement('div', { className: 'Tooltip_arrow', style: sx.arrow })
	    ),
	    children
	  );
	};
	
	Tooltip.propTypes = {
	  
	  title: _react2.default.PropTypes.string
	};
	
	Tooltip.defaultProps = {
	  inverted: true,
	  rounded: true
	};
	
	Tooltip.contextTypes = {
	  rebass: _react2.default.PropTypes.object
	};
	
	exports.default = Tooltip;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(2);
	
	var _reactDom = __webpack_require__(34);
	
	var _debug = __webpack_require__(361);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	var _lodash = __webpack_require__(364);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _cssVendor = __webpack_require__(367);
	
	var cssVendor = _interopRequireWildcard(_cssVendor);
	
	var _onResize = __webpack_require__(372);
	
	var _onResize2 = _interopRequireDefault(_onResize);
	
	var _layout = __webpack_require__(382);
	
	var _layout2 = _interopRequireDefault(_layout);
	
	var _reactLayerMixin = __webpack_require__(383);
	
	var _reactLayerMixin2 = _interopRequireDefault(_reactLayerMixin);
	
	var _platform = __webpack_require__(373);
	
	var _utils = __webpack_require__(374);
	
	var _tip = __webpack_require__(384);
	
	var _tip2 = _interopRequireDefault(_tip);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var log = (0, _debug2.default)('react-popover');
	
	var supportedCSSValue = (0, _utils.clientOnly)(cssVendor.supportedValue);
	
	var jsprefix = function jsprefix(x) {
	  return '' + cssVendor.prefix.js + x;
	};
	
	var cssprefix = function cssprefix(x) {
	  return '' + cssVendor.prefix.css + x;
	};
	
	var cssvalue = function cssvalue(prop, value) {
	  return supportedCSSValue(prop, value) || cssprefix(value);
	};
	
	var coreStyle = {
	  position: 'absolute',
	  top: 0,
	  left: 0,
	  display: cssvalue('display', 'flex')
	};
	
	var faces = {
	  above: 'down',
	  right: 'left',
	  below: 'up',
	  left: 'right'
	};
	
	
	
	var flowToTipTranslations = {
	  row: 'translateY',
	  column: 'translateX'
	};
	
	var flowToPopoverTranslations = {
	  row: 'translateX',
	  column: 'translateY'
	};
	
	var Popover = (0, _react.createClass)({
	  displayName: 'popover',
	  mixins: [(0, _reactLayerMixin2.default)()],
	  propTypes: {
	    body: _react.PropTypes.node.isRequired,
	    children: _react.PropTypes.element.isRequired,
	    preferPlace: _react.PropTypes.oneOf(_layout2.default.validTypeValues),
	    place: _react.PropTypes.oneOf(_layout2.default.validTypeValues),
	    tipSize: _react.PropTypes.number,
	    refreshIntervalMs: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.bool]),
	    isOpen: _react.PropTypes.bool,
	    onOuterAction: _react.PropTypes.func,
	    enterExitTransitionDurationMs: _react.PropTypes.number
	  },
	  getInitialState: function getInitialState() {
	    return {
	      standing: 'above',
	      exited: !this.props.isOpen, 
	      exiting: false, 
	      toggle: false };
	  },
	  
	  getDefaultProps: function getDefaultProps() {
	    return {
	      tipSize: 7,
	      preferPlace: null,
	      place: null,
	      offset: 4,
	      isOpen: false,
	      onOuterAction: function noOperation() {},
	      enterExitTransitionDurationMs: 500,
	      children: null,
	      refreshIntervalMs: 200
	    };
	  },
	  checkTargetReposition: function checkTargetReposition() {
	    if (this.measureTargetBounds()) this.resolvePopoverLayout();
	  },
	  resolvePopoverLayout: function resolvePopoverLayout() {
	
	    
	
	    var pickerSettings = {
	      preferPlace: this.props.preferPlace,
	      place: this.props.place
	    };
	
	    
	    if (this.zone) this.size[this.zone.flow === 'row' ? 'h' : 'w'] += this.props.tipSize;
	    var zone = _layout2.default.pickZone(pickerSettings, this.frameBounds, this.targetBounds, this.size);
	    if (this.zone) this.size[this.zone.flow === 'row' ? 'h' : 'w'] -= this.props.tipSize;
	
	    var tb = this.targetBounds;
	    this.zone = zone;
	    log('zone', zone);
	
	    wrapper(this.setState)({
	      standing: zone.standing
	    }, 'Popover');
	
	    var axis = _layout2.default.axes[zone.flow];
	    log('axes', axis);
	
	    var dockingEdgeBufferLength = Math.round(getComputedStyle(this.bodyEl).borderRadius.slice(0, -2)) || 0;
	    var scrollSize = _layout2.default.El.calcScrollSize(this.frameEl);
	    scrollSize.main = scrollSize[axis.main.size];
	    scrollSize.cross = scrollSize[axis.cross.size];
	
	    
	    var pos = _layout2.default.calcRelPos(zone, tb, this.size);
	
	    
	    pos[axis.main.start] += this.props.offset * zone.order;
	
	    
	
	    var frameBuffer = this.props.tipSize + this.props.offset;
	    var hangingBufferLength = dockingEdgeBufferLength * 2 + this.props.tipSize * 2 + frameBuffer;
	    var frameCrossStart = this.frameBounds[axis.cross.start];
	    var frameCrossEnd = this.frameBounds[axis.cross.end];
	    var frameCrossLength = this.frameBounds[axis.cross.size];
	    var frameCrossInnerLength = frameCrossLength - frameBuffer * 2;
	    var frameCrossInnerStart = frameCrossStart + frameBuffer;
	    var frameCrossInnerEnd = frameCrossEnd - frameBuffer;
	    var popoverCrossStart = pos[axis.cross.start];
	    var popoverCrossEnd = pos[axis.cross.end];
	
	    
	    if (pos.crossLength > frameCrossLength) {
	      log('popoverCrossLength does not fit frame.');
	      pos[axis.cross.start] = 0;
	
	      
	    } else if (tb[axis.cross.end] < hangingBufferLength) {
	        log('popoverCrossStart cannot hang any further without losing target.');
	        pos[axis.cross.start] = tb[axis.cross.end] - hangingBufferLength;
	
	        
	      } else if (pos.crossLength > frameCrossInnerLength) {
	          log('popoverCrossLength does not fit within buffered frame.');
	          pos[axis.cross.start] = (frameCrossLength - pos.crossLength) / 2;
	        } else if (popoverCrossStart < frameCrossInnerStart) {
	          log('popoverCrossStart cannot reverse without exceeding frame.');
	          pos[axis.cross.start] = frameCrossInnerStart;
	        } else if (popoverCrossEnd > frameCrossInnerEnd) {
	          log('popoverCrossEnd cannot travel without exceeding frame.');
	          pos[axis.cross.start] = pos[axis.cross.start] - (pos[axis.cross.end] - frameCrossInnerEnd);
	        }
	
	    
	
	    pos[axis.cross.start] += scrollSize.cross;
	    pos[axis.main.start] += scrollSize.main;
	
	    
	
	    this.containerEl.style.flexFlow = zone.flow;
	    this.containerEl.style[jsprefix('FlexFlow')] = this.containerEl.style.flexFlow;
	    this.bodyEl.style.order = zone.order;
	    this.bodyEl.style[jsprefix('Order')] = this.bodyEl.style.order;
	
	    
	
	    log('pos', pos);
	    this.containerEl.style.top = pos.y + 'px';
	    this.containerEl.style.left = pos.x + 'px';
	
	    
	
	    var tipCrossPos =
	    
	    _layout2.default.centerOfBoundsFromBounds(zone.flow, 'cross', tb, pos)
	
	    
	     + scrollSize.cross
	
	    
	     - this.props.tipSize;
	
	    if (tipCrossPos < dockingEdgeBufferLength) tipCrossPos = dockingEdgeBufferLength;else if (tipCrossPos > pos.crossLength - dockingEdgeBufferLength - this.props.tipSize * 2) {
	      tipCrossPos = pos.crossLength - dockingEdgeBufferLength - this.props.tipSize * 2;
	    }
	
	    this.tipEl.style.transform = flowToTipTranslations[zone.flow] + '(' + tipCrossPos + 'px)';
	    this.tipEl.style[jsprefix('Transform')] = this.tipEl.style.transform;
	  },
	  measurePopoverSize: function measurePopoverSize() {
	    this.size = _layout2.default.El.calcSize(this.containerEl);
	  },
	  measureTargetBounds: function measureTargetBounds() {
	    var newTargetBounds = _layout2.default.El.calcBounds(this.targetEl);
	
	    if (this.targetBounds && _layout2.default.equalCoords(this.targetBounds, newTargetBounds)) {
	      return false;
	    }
	
	    this.targetBounds = newTargetBounds;
	    return true;
	  },
	  componentDidMount: function componentDidMount() {
	    this.targetEl = (0, _reactDom.findDOMNode)(this);
	    if (this.props.isOpen) this.enter();
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(propsNext) {
	    
	    var willOpen = !this.props.isOpen && propsNext.isOpen;
	    var willClose = this.props.isOpen && !propsNext.isOpen;
	
	    if (willOpen) this.open();else if (willClose) this.close();
	  },
	  open: function open() {
	    if (this.state.exiting) this.animateExitStop();
	    wrapper(this.setState)({ toggle: true, exited: false }, 'Popover');
	  },
	  close: function close() {
	    
	    this.animateEnterStop();
	    wrapper(this.setState)({ toggle: false }, 'Popover');
	  },
	  componentDidUpdate: function componentDidUpdate(propsPrev, statePrev) {
	    
	    var didOpen = !statePrev.toggle && this.state.toggle;
	    var didClose = statePrev.toggle && !this.state.toggle;
	
	    if (didOpen) this.enter();else if (didClose) this.exit();
	  },
	  enter: function enter() {
	    if (_platform.isServer) return;
	    log('enter!');
	    this.trackPopover();
	    this.animateEnter();
	  },
	  exit: function exit() {
	    log('exit!');
	    this.animateExit();
	    this.untrackPopover();
	  },
	  animateExitStop: function animateExitStop() {
	    clearTimeout(this.exitingAnimationTimer1);
	    clearTimeout(this.exitingAnimationTimer2);
	    wrapper(this.setState)({ exiting: false }, 'Popover');
	  },
	  animateExit: function animateExit() {
	    var _this = this;
	
	    wrapper(this.setState)({ exiting: true }, 'Popover');
	    this.exitingAnimationTimer2 = setTimeout(function () {
	      setTimeout(function () {
	        _this.containerEl.style.transform = flowToPopoverTranslations[_this.zone.flow] + '(' + _this.zone.order * 50 + 'px)';
	        _this.containerEl.style.opacity = '0';
	      }, 0);
	    }, 0);
	
	    this.exitingAnimationTimer1 = setTimeout(function () {
	      _wrapper(this.setState)({ exited: true, exiting: false }, 'Popover');
	    }, this.props.enterExitTransitionDurationMs);
	  },
	  animateEnterStop: function animateEnterStop() {
	    clearTimeout(this.enteringAnimationTimer1);
	    clearTimeout(this.enteringAnimationTimer2);
	  },
	  animateEnter: function animateEnter() {
	    var _this2 = this;
	
	    
	
	    this.containerEl.style.transform = flowToPopoverTranslations[this.zone.flow] + '(' + this.zone.order * 50 + 'px)';
	    this.containerEl.style[jsprefix('Transform')] = this.containerEl.style.transform;
	    this.containerEl.style.opacity = '0';
	
	    
	
	    this.enteringAnimationTimer1 = setTimeout(function () {
	      _this2.tipEl.style.transition = 'transform 150ms ease-in';
	      _this2.tipEl.style[jsprefix('Transition')] = cssprefix('transform') + ' 150ms ease-in';
	      _this2.containerEl.style.transitionProperty = 'top, left, opacity, transform';
	      _this2.containerEl.style.transitionDuration = '500ms';
	      _this2.containerEl.style.transitionTimingFunction = 'cubic-bezier(0.230, 1.000, 0.320, 1.000)';
	      _this2.enteringAnimationTimer2 = setTimeout(function () {
	        _this2.containerEl.style.opacity = '1';
	        _this2.containerEl.style.transform = 'translateY(0)';
	        _this2.containerEl.style[jsprefix('Transform')] = _this2.containerEl.style.transform;
	      }, 0);
	    }, 0);
	  },
	  trackPopover: function trackPopover() {
	    var minScrollRefreshIntervalMs = 200;
	    var minResizeRefreshIntervalMs = 200;
	
	    
	
	    this.containerEl = (0, _reactDom.findDOMNode)(this.layerReactComponent);
	    this.bodyEl = this.containerEl.querySelector('.Popover-body');
	    this.tipEl = this.containerEl.querySelector('.Popover-tip');
	
	    
	
	    this.frameEl = _platform.window;
	    this.hasTracked = true;
	
	    
	    if (this.props.refreshIntervalMs) {
	      this.checkLayoutInterval = setInterval(this.checkTargetReposition, this.props.refreshIntervalMs);
	    }
	
	    
	
	    this.onFrameScroll = (0, _lodash2.default)(this.onFrameScroll, minScrollRefreshIntervalMs);
	    this.onFrameResize = (0, _lodash2.default)(this.onFrameResize, minResizeRefreshIntervalMs);
	    this.onPopoverResize = (0, _lodash2.default)(this.onPopoverResize, minResizeRefreshIntervalMs);
	    this.onTargetResize = (0, _lodash2.default)(this.onTargetResize, minResizeRefreshIntervalMs);
	
	    this.frameEl.addEventListener('scroll', this.onFrameScroll);
	    _onResize2.default.on(this.frameEl, this.onFrameResize);
	    _onResize2.default.on(this.containerEl, this.onPopoverResize);
	    _onResize2.default.on(this.targetEl, this.onTargetResize);
	
	    
	
	    _platform.window.addEventListener('mousedown', this.checkForOuterAction);
	    _platform.window.addEventListener('touchstart', this.checkForOuterAction);
	
	    
	
	    this.measurePopoverSize();
	    this.measureFrameBounds();
	    this.measureTargetBounds();
	    this.resolvePopoverLayout();
	  },
	  checkForOuterAction: function checkForOuterAction(event) {
	    var isOuterAction = !this.containerEl.contains(event.target) && !this.targetEl.contains(event.target);
	    if (isOuterAction) this.props.onOuterAction(event);
	  },
	  untrackPopover: function untrackPopover() {
	    clearInterval(this.checkLayoutInterval);
	    this.frameEl.removeEventListener('scroll', this.onFrameScroll);
	    _onResize2.default.off(this.frameEl, this.onFrameResize);
	    _onResize2.default.off(this.containerEl, this.onPopoverResize);
	    _onResize2.default.off(this.targetEl, this.onTargetResize);
	    _platform.window.removeEventListener('mousedown', this.checkForOuterAction);
	    _platform.window.removeEventListener('touchstart', this.checkForOuterAction);
	  },
	  onTargetResize: function onTargetResize() {
	    log('Recalculating layout because _target_ resized!');
	    this.measureTargetBounds();
	    this.resolvePopoverLayout();
	  },
	  onPopoverResize: function onPopoverResize() {
	    log('Recalculating layout because _popover_ resized!');
	    this.measurePopoverSize();
	    this.resolvePopoverLayout();
	  },
	  onFrameScroll: function onFrameScroll() {
	    log('Recalculating layout because _frame_ scrolled!');
	    this.measureTargetBounds();
	    this.resolvePopoverLayout();
	  },
	  onFrameResize: function onFrameResize() {
	    log('Recalculating layout because _frame_ resized!');
	    this.measureFrameBounds();
	    this.resolvePopoverLayout();
	  },
	  measureFrameBounds: function measureFrameBounds() {
	    this.frameBounds = _layout2.default.El.calcBounds(this.frameEl);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    
	    if (this.hasTracked) this.untrackPopover();
	  },
	  renderLayer: function renderLayer() {
	    if (this.state.exited) return null;
	
	    var _props = this.props;
	    var _props$className = _props.className;
	    var className = _props$className === undefined ? '' : _props$className;
	    var _props$style = _props.style;
	    var style = _props$style === undefined ? {} : _props$style;
	
	    var popoverProps = {
	      className: 'Popover ' + className,
	      style: (0, _utils.assign)({}, coreStyle, style)
	    };
	
	    var tipProps = {
	      direction: faces[this.state.standing],
	      size: this.props.tipSize
	    };
	
	    
	
	    var popoverBody = (0, _utils.arrayify)(this.props.body);
	
	    return _react.DOM.div(popoverProps, _react.DOM.div.apply(_react.DOM, [{ className: 'Popover-body' }].concat(_toConsumableArray(popoverBody))), (0, _react.createElement)(_tip2.default, tipProps));
	  },
	  render: function render() {
	    return this.props.children;
	  }
	});
	
	
	
	module.exports = Popover;

 },

 function(module, exports, __webpack_require__) {

	
	
	
	exports = module.exports = __webpack_require__(362);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome
	               && 'undefined' != typeof chrome.storage
	                  ? chrome.storage.local
	                  : localstorage();
	
	
	
	exports.colors = [
	  'lightseagreen',
	  'forestgreen',
	  'goldenrod',
	  'dodgerblue',
	  'darkorchid',
	  'crimson'
	];
	
	
	
	function useColors() {
	  
	  return ('WebkitAppearance' in document.documentElement.style) ||
	    
	    (window.console && (console.firebug || (console.exception && console.table))) ||
	    
	    
	    (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31);
	}
	
	
	
	exports.formatters.j = function(v) {
	  return JSON.stringify(v);
	};
	
	
	
	
	function formatArgs() {
	  var args = arguments;
	  var useColors = this.useColors;
	
	  args[0] = (useColors ? '%c' : '')
	    + this.namespace
	    + (useColors ? ' %c' : ' ')
	    + args[0]
	    + (useColors ? '%c ' : ' ')
	    + '+' + exports.humanize(this.diff);
	
	  if (!useColors) return args;
	
	  var c = 'color: ' + this.color;
	  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));
	
	  
	  
	  
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-z%]/g, function(match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      
	      
	      lastC = index;
	    }
	  });
	
	  args.splice(lastC, 0, c);
	  return args;
	}
	
	
	
	function log() {
	  
	  
	  return 'object' === typeof console
	    && console.log
	    && Function.prototype.apply.call(console.log, console, arguments);
	}
	
	
	
	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch(e) {}
	}
	
	
	
	function load() {
	  var r;
	  try {
	    r = exports.storage.debug;
	  } catch(e) {}
	  return r;
	}
	
	
	
	exports.enable(load());
	
	
	
	function localstorage(){
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}


 },

 function(module, exports, __webpack_require__) {

	
	
	
	exports = module.exports = debug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(363);
	
	
	
	exports.names = [];
	exports.skips = [];
	
	
	
	exports.formatters = {};
	
	
	
	var prevColor = 0;
	
	
	
	var prevTime;
	
	
	
	function selectColor() {
	  return exports.colors[prevColor++ % exports.colors.length];
	}
	
	
	
	function debug(namespace) {
	
	  
	  function disabled() {
	  }
	  disabled.enabled = false;
	
	  
	  function enabled() {
	
	    var self = enabled;
	
	    
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;
	
	    
	    if (null == self.useColors) self.useColors = exports.useColors();
	    if (null == self.color && self.useColors) self.color = selectColor();
	
	    var args = Array.prototype.slice.call(arguments);
	
	    args[0] = exports.coerce(args[0]);
	
	    if ('string' !== typeof args[0]) {
	      
	      args = ['%o'].concat(args);
	    }
	
	    
	    var index = 0;
	    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {
	      
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);
	
	        
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });
	
	    if ('function' === typeof exports.formatArgs) {
	      args = exports.formatArgs.apply(self, args);
	    }
	    var logFn = enabled.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }
	  enabled.enabled = true;
	
	  var fn = exports.enabled(namespace) ? enabled : disabled;
	
	  fn.namespace = namespace;
	
	  return fn;
	}
	
	
	
	function enable(namespaces) {
	  exports.save(namespaces);
	
	  var split = (namespaces || '').split(/[\s,]+/);
	  var len = split.length;
	
	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; 
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}
	
	
	
	function disable() {
	  exports.enable('');
	}
	
	
	
	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	
	
	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}


 },

 function(module, exports) {

	
	
	var s = 1000;
	var m = s * 60;
	var h = m * 60;
	var d = h * 24;
	var y = d * 365.25;
	
	
	
	module.exports = function(val, options){
	  options = options || {};
	  if ('string' == typeof val) return parse(val);
	  return options.long
	    ? long(val)
	    : short(val);
	};
	
	
	
	function parse(str) {
	  str = '' + str;
	  if (str.length > 10000) return;
	  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
	  if (!match) return;
	  var n = parseFloat(match[1]);
	  var type = (match[2] || 'ms').toLowerCase();
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y;
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d;
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h;
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m;
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s;
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n;
	  }
	}
	
	
	
	function short(ms) {
	  if (ms >= d) return Math.round(ms / d) + 'd';
	  if (ms >= h) return Math.round(ms / h) + 'h';
	  if (ms >= m) return Math.round(ms / m) + 'm';
	  if (ms >= s) return Math.round(ms / s) + 's';
	  return ms + 'ms';
	}
	
	
	
	function long(ms) {
	  return plural(ms, d, 'day')
	    || plural(ms, h, 'hour')
	    || plural(ms, m, 'minute')
	    || plural(ms, s, 'second')
	    || ms + ' ms';
	}
	
	
	
	function plural(ms, n, name) {
	  if (ms < n) return;
	  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;
	  return Math.ceil(ms / n) + ' ' + name + 's';
	}


 },

 function(module, exports, __webpack_require__) {

	
	var debounce = __webpack_require__(365);
	
	
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	
	function throttle(func, wait, options) {
	  var leading = true,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  if (options === false) {
	    leading = false;
	  } else if (isObject(options)) {
	    leading = 'leading' in options ? !!options.leading : leading;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	  return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });
	}
	
	
	function isObject(value) {
	  
	  
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = throttle;


 },

 function(module, exports, __webpack_require__) {

	
	var getNative = __webpack_require__(366);
	
	
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	
	var nativeMax = Math.max,
	    nativeNow = getNative(Date, 'now');
	
	
	var now = nativeNow || function() {
	  return new Date().getTime();
	};
	
	
	function debounce(func, wait, options) {
	  var args,
	      maxTimeoutId,
	      result,
	      stamp,
	      thisArg,
	      timeoutId,
	      trailingCall,
	      lastCalled = 0,
	      maxWait = false,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = wait < 0 ? 0 : (+wait || 0);
	  if (options === true) {
	    var leading = true;
	    trailing = false;
	  } else if (isObject(options)) {
	    leading = !!options.leading;
	    maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	
	  function cancel() {
	    if (timeoutId) {
	      clearTimeout(timeoutId);
	    }
	    if (maxTimeoutId) {
	      clearTimeout(maxTimeoutId);
	    }
	    lastCalled = 0;
	    maxTimeoutId = timeoutId = trailingCall = undefined;
	  }
	
	  function complete(isCalled, id) {
	    if (id) {
	      clearTimeout(id);
	    }
	    maxTimeoutId = timeoutId = trailingCall = undefined;
	    if (isCalled) {
	      lastCalled = now();
	      result = func.apply(thisArg, args);
	      if (!timeoutId && !maxTimeoutId) {
	        args = thisArg = undefined;
	      }
	    }
	  }
	
	  function delayed() {
	    var remaining = wait - (now() - stamp);
	    if (remaining <= 0 || remaining > wait) {
	      complete(trailingCall, maxTimeoutId);
	    } else {
	      timeoutId = setTimeout(delayed, remaining);
	    }
	  }
	
	  function maxDelayed() {
	    complete(trailing, timeoutId);
	  }
	
	  function debounced() {
	    args = arguments;
	    stamp = now();
	    thisArg = this;
	    trailingCall = trailing && (timeoutId || !leading);
	
	    if (maxWait === false) {
	      var leadingCall = leading && !timeoutId;
	    } else {
	      if (!maxTimeoutId && !leading) {
	        lastCalled = stamp;
	      }
	      var remaining = maxWait - (stamp - lastCalled),
	          isCalled = remaining <= 0 || remaining > maxWait;
	
	      if (isCalled) {
	        if (maxTimeoutId) {
	          maxTimeoutId = clearTimeout(maxTimeoutId);
	        }
	        lastCalled = stamp;
	        result = func.apply(thisArg, args);
	      }
	      else if (!maxTimeoutId) {
	        maxTimeoutId = setTimeout(maxDelayed, remaining);
	      }
	    }
	    if (isCalled && timeoutId) {
	      timeoutId = clearTimeout(timeoutId);
	    }
	    else if (!timeoutId && wait !== maxWait) {
	      timeoutId = setTimeout(delayed, wait);
	    }
	    if (leadingCall) {
	      isCalled = true;
	      result = func.apply(thisArg, args);
	    }
	    if (isCalled && !timeoutId && !maxTimeoutId) {
	      args = thisArg = undefined;
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  return debounced;
	}
	
	
	function isObject(value) {
	  
	  
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = debounce;


 },

 function(module, exports) {

	
	
	
	var funcTag = '[object Function]';
	
	
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	
	var objectProto = Object.prototype;
	
	
	var fnToString = Function.prototype.toString;
	
	
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	
	var objToString = objectProto.toString;
	
	
	var reIsNative = RegExp('^' +
	  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}
	
	
	function isFunction(value) {
	  
	  
	  
	  return isObject(value) && objToString.call(value) == funcTag;
	}
	
	
	function isObject(value) {
	  
	  
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}
	
	module.exports = getNative;


 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.supportedValue = exports.supportedProperty = exports.prefix = undefined;
	
	var _prefix = __webpack_require__(368);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	var _supportedProperty = __webpack_require__(369);
	
	var _supportedProperty2 = _interopRequireDefault(_supportedProperty);
	
	var _supportedValue = __webpack_require__(371);
	
	var _supportedValue2 = _interopRequireDefault(_supportedValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	  prefix: _prefix2.default,
	  supportedProperty: _supportedProperty2.default,
	  supportedValue: _supportedValue2.default
	}; 
	
	exports.prefix = _prefix2.default;
	exports.supportedProperty = _supportedProperty2.default;
	exports.supportedValue = _supportedValue2.default;

 },

 function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	
	var js = '';
	var css = '';
	
	
	if (typeof document != 'undefined') {
	  var jsCssMap = {
	    Webkit: '-webkit-',
	    Moz: '-moz-',
	    
	    ms: '-ms-',
	    O: '-o-'
	  };
	  var style = document.createElement('p').style;
	  var testProp = 'Transform';
	
	  for (var key in jsCssMap) {
	    if (key + testProp in style) {
	      js = key;
	      css = jsCssMap[key];
	      break;
	    }
	  }
	}
	
	
	exports.default = { js: js, css: css };

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = supportedProperty;
	
	var _prefix = __webpack_require__(368);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	var _camelize = __webpack_require__(370);
	
	var _camelize2 = _interopRequireDefault(_camelize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var el = void 0;
	var cache = {};
	
	
	if (typeof document != 'undefined') {
	  el = document.createElement('p');
	
	  
	  var computed = window.getComputedStyle(document.documentElement, '');
	  for (var key in computed) {
	    cache[computed[key]] = computed[key];
	  }
	}
	
	
	function supportedProperty(prop) {
	  
	  if (!el) return prop;
	
	  
	  if (cache[prop] != null) return cache[prop];
	
	  
	  
	  
	  if ((0, _camelize2.default)(prop) in el.style) {
	    cache[prop] = prop;
	  }
	  
	  else if (_prefix2.default.js + (0, _camelize2.default)('-' + prop) in el.style) {
	      cache[prop] = _prefix2.default.css + prop;
	    } else {
	      cache[prop] = false;
	    }
	
	  return cache[prop];
	}

 },

 function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = camelize;
	var regExp = /[-\s]+(.)?/g;
	
	
	function camelize(str) {
	  return str.replace(regExp, toUpper);
	}
	
	function toUpper(match, c) {
	  return c ? c.toUpperCase() : '';
	}

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = supportedValue;
	
	var _prefix = __webpack_require__(368);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var cache = {};
	var el = void 0;
	
	
	if (typeof document != 'undefined') el = document.createElement('p');
	
	
	function supportedValue(property, value) {
	  
	  if (!el) return value;
	
	  
	  
	  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) return value;
	
	  var cacheKey = property + value;
	
	  if (cache[cacheKey] != null) return cache[cacheKey];
	
	  
	  try {
	    
	    el.style[property] = value;
	  } catch (err) {
	    cache[cacheKey] = false;
	    return false;
	  }
	
	  
	  if (el.style[property] === value) {
	    cache[cacheKey] = value;
	  } else {
	    
	    value = _prefix2.default.css + value;
	
	    
	    if (value === '-ms-flex') value = '-ms-flexbox';
	
	    el.style[property] = value;
	
	    
	    if (el.style[property] === value) cache[cacheKey] = value;
	  }
	
	  if (!cache[cacheKey]) cache[cacheKey] = false;
	
	  return cache[cacheKey];
	}

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.removeEventListener = exports.addEventListener = exports.off = exports.on = undefined;
	
	var _platform = __webpack_require__(373);
	
	var _utils = __webpack_require__(374);
	
	
	
	var requestAnimationFrame = _platform.isServer ? _utils.noop : _platform.window.requestAnimationFrame || _platform.window.mozRequestAnimationFrame || _platform.window.webkitRequestAnimationFrame || function (fn) {
	  _platform.window.setTimeout(fn, 20);
	};
	
	var cancelAnimationFrame = _platform.isServer ? _utils.noop : _platform.window.cancelAnimationFrame || _platform.window.mozCancelAnimationFrame || _platform.window.webkitCancelAnimationFrame || _platform.window.clearTimeout;
	
	var isIE = _platform.isServer ? false : navigator.userAgent.match(/Trident/);
	
	var namespace = '__resizeDetector__';
	
	var uninitialize = function uninitialize(el) {
	  el[namespace].destroy();
	  el[namespace] = undefined;
	};
	
	var createElementHack = function createElementHack() {
	  var el = document.createElement('object');
	  el.className = 'resize-sensor';
	  el.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');
	  el.setAttribute('class', 'resize-sensor');
	  el.type = 'text/html';
	  el.data = 'about:blank';
	  return el;
	};
	
	var initialize = function initialize(el) {
	
	  var detector = el[namespace] = {};
	  detector.listeners = [];
	
	  var onResize = function onResize(e) {
	    
	    if (detector.resizeRAF) cancelAnimationFrame(detector.resizeRAF);
	    detector.resizeRAF = requestAnimationFrame(function () {
	      detector.listeners.forEach(function (fn) {
	        fn(e);
	      });
	    });
	  };
	
	  if (isIE) {
	    
	    el.addEventListener('onresize', onResize);
	    detector.destroy = function () {
	      el.removeEventListener('onresize', onResize);
	    };
	  } else {
	    (function () {
	      if (getComputedStyle(el).position === 'static') {
	        detector.elWasStaticPosition = true;
	        el.style.position = 'relative';
	      }
	      var objEl = createElementHack();
	      objEl.onload = function () {
	        this.contentDocument.defaultView.addEventListener('resize', onResize);
	      };
	      detector.destroy = function () {
	        if (detector.elWasStaticPosition) el.style.position = '';
	        
	        
	        el.removeChild(objEl);
	      };
	
	      el.appendChild(objEl);
	    })();
	  }
	};
	
	var on = function on(el, fn) {
	
	  
	
	  if (el === _platform.window) {
	    _platform.window.addEventListener('resize', fn);
	    return;
	  }
	
	  
	
	  if (!el[namespace]) initialize(el);
	  el[namespace].listeners.push(fn);
	};
	
	var off = function off(el, fn) {
	  if (el === _platform.window) {
	    _platform.window.removeEventListener('resize', fn);
	    return;
	  }
	  var detector = el[namespace];
	  if (!detector) return;
	  var i = detector.listeners.indexOf(fn);
	  if (i !== -1) detector.listeners.splice(i, 1);
	  if (!detector.listeners.length) uninitialize(el);
	};
	
	exports.default = {
	  on: on,
	  off: off,
	  addEventListener: on,
	  removeEventListener: off
	};
	exports.on = on;
	exports.off = off;
	exports.addEventListener = on;
	exports.removeEventListener = off;

 },

 function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var isServer = typeof window === "undefined";
	var isClient = !isServer;
	var WINDOW = isClient ? window : null;
	
	exports.default = {
	  isServer: isServer,
	  isClient: isClient,
	  window: WINDOW
	};
	exports.isServer = isServer;
	exports.isClient = isClient;
	exports.window = WINDOW;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.clientOnly = exports.noop = exports.equalRecords = exports.find = exports.arrayify = exports.assign = undefined;
	
	var _polyfill = __webpack_require__(375);
	
	var _polyfill2 = _interopRequireDefault(_polyfill);
	
	var _platform = __webpack_require__(373);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var assign = (0, _polyfill2.default)();
	
	var arrayify = function arrayify(x) {
	  return Array.isArray(x) ? x : [x];
	};
	
	var find = function find(f, xs) {
	  return xs.reduce(function (b, x) {
	    return b ? b : f(x) ? x : null;
	  }, null);
	};
	
	var equalRecords = function equalRecords(o1, o2) {
	  for (var key in o1) {
	    if (o1[key] !== o2[key]) return false;
	  }return true;
	};
	
	var noop = function noop() {
	  return undefined;
	};
	
	var clientOnly = function clientOnly(f) {
	  return _platform.isClient ? f : noop;
	};
	
	exports.default = {
	  assign: assign,
	  arrayify: arrayify,
	  find: find,
	  equalRecords: equalRecords,
	  noop: noop,
	  clientOnly: clientOnly
	};
	exports.assign = assign;
	exports.arrayify = arrayify;
	exports.find = find;
	exports.equalRecords = equalRecords;
	exports.noop = noop;
	exports.clientOnly = clientOnly;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	var implementation = __webpack_require__(376);
	
	var lacksProperEnumerationOrder = function () {
		if (!Object.assign) {
			return false;
		}
		
		
		var str = 'abcdefghijklmnopqrst';
		var letters = str.split('');
		var map = {};
		for (var i = 0; i < letters.length; ++i) {
			map[letters[i]] = letters[i];
		}
		var obj = Object.assign({}, map);
		var actual = '';
		for (var k in obj) {
			actual += k;
		}
		return str !== actual;
	};
	
	var assignHasPendingExceptions = function () {
		if (!Object.assign || !Object.preventExtensions) {
			return false;
		}
		
		
		var thrower = Object.preventExtensions({ 1: 2 });
		try {
			Object.assign(thrower, 'xy');
		} catch (e) {
			return thrower[1] === 'y';
		}
		return false;
	};
	
	module.exports = function getPolyfill() {
		if (!Object.assign) {
			return implementation;
		}
		if (lacksProperEnumerationOrder()) {
			return implementation;
		}
		if (assignHasPendingExceptions()) {
			return implementation;
		}
		return Object.assign;
	};


 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var keys = __webpack_require__(377);
	var bind = __webpack_require__(379);
	var canBeObject = function (obj) {
		return typeof obj !== 'undefined' && obj !== null;
	};
	var hasSymbols = __webpack_require__(381)();
	var toObject = Object;
	var push = bind.call(Function.call, Array.prototype.push);
	var propIsEnumerable = bind.call(Function.call, Object.prototype.propertyIsEnumerable);
	var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;
	
	module.exports = function assign(target, source1) {
		if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
		var objTarget = toObject(target);
		var s, source, i, props, syms, value, key;
		for (s = 1; s < arguments.length; ++s) {
			source = toObject(arguments[s]);
			props = keys(source);
			var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
			if (getSymbols) {
				syms = getSymbols(source);
				for (i = 0; i < syms.length; ++i) {
					key = syms[i];
					if (propIsEnumerable(source, key)) {
						push(props, key);
					}
				}
			}
			for (i = 0; i < props.length; ++i) {
				key = props[i];
				value = source[key];
				if (propIsEnumerable(source, key)) {
					objTarget[key] = value;
				}
			}
		}
		return objTarget;
	};


 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var slice = Array.prototype.slice;
	var isArgs = __webpack_require__(378);
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};
	
	var keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];
	
		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}
	
		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}
	
		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}
	
		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
	
			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
	
	keysShim.shim = function shimObjectKeys() {
		if (Object.keys) {
			var keysWorksWithArguments = (function () {
				
				return (Object.keys(arguments) || '').length === 2;
			}(1, 2));
			if (!keysWorksWithArguments) {
				var originalKeys = Object.keys;
				Object.keys = function keys(object) {
					if (isArgs(object)) {
						return originalKeys(slice.call(object));
					} else {
						return originalKeys(object);
					}
				};
			}
		} else {
			Object.keys = keysShim;
		}
		return Object.keys || keysShim;
	};
	
	module.exports = keysShim;


 },

 function(module, exports) {

	'use strict';
	
	var toStr = Object.prototype.toString;
	
	module.exports = function isArguments(value) {
		var str = toStr.call(value);
		var isArgs = str === '[object Arguments]';
		if (!isArgs) {
			isArgs = str !== '[object Array]' &&
				value !== null &&
				typeof value === 'object' &&
				typeof value.length === 'number' &&
				value.length >= 0 &&
				toStr.call(value.callee) === '[object Function]';
		}
		return isArgs;
	};


 },

 function(module, exports, __webpack_require__) {

	var implementation = __webpack_require__(380);
	
	module.exports = Function.prototype.bind || implementation;


 },

 function(module, exports) {

	var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
	var slice = Array.prototype.slice;
	var toStr = Object.prototype.toString;
	var funcType = '[object Function]';
	
	module.exports = function bind(that) {
	    var target = this;
	    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
	        throw new TypeError(ERROR_MESSAGE + target);
	    }
	    var args = slice.call(arguments, 1);
	
	    var bound;
	    var binder = function () {
	        if (this instanceof bound) {
	            var result = target.apply(
	                this,
	                args.concat(slice.call(arguments))
	            );
	            if (Object(result) === result) {
	                return result;
	            }
	            return this;
	        } else {
	            return target.apply(
	                that,
	                args.concat(slice.call(arguments))
	            );
	        }
	    };
	
	    var boundLength = Math.max(0, target.length - args.length);
	    var boundArgs = [];
	    for (var i = 0; i < boundLength; i++) {
	        boundArgs.push('$' + i);
	    }
	
	    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
	
	    if (target.prototype) {
	        var Empty = function Empty() {};
	        Empty.prototype = target.prototype;
	        bound.prototype = new Empty();
	        Empty.prototype = null;
	    }
	
	    return bound;
	};


 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	var keys = __webpack_require__(377);
	
	module.exports = function hasSymbols() {
		if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
		if (typeof Symbol.iterator === 'symbol') { return true; }
	
		var obj = {};
		var sym = Symbol('test');
		var symObj = Object(sym);
		if (typeof sym === 'string') { return false; }
	
		if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
		if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }
	
		
		
		
		
	
		var symVal = 42;
		obj[sym] = symVal;
		for (sym in obj) { return false; }
		if (keys(obj).length !== 0) { return false; }
		if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }
	
		if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }
	
		var syms = Object.getOwnPropertySymbols(obj);
		if (syms.length !== 1 || syms[0] !== sym) { return false; }
	
		if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }
	
		if (typeof Object.getOwnPropertyDescriptor === 'function') {
			var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
			if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
		}
	
		return true;
	};


 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.equalCoords = exports.doesFitWithin = exports.centerOfBoundsFromBounds = exports.centerOfBounds = exports.centerOfSize = exports.axes = exports.pickZone = exports.place = exports.calcRelPos = exports.validTypeValues = exports.types = exports.El = undefined;
	
	var _platform = __webpack_require__(373);
	
	var _utils = __webpack_require__(374);
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }
	
	
	
	var axes = {
	  row: {},
	  column: {}
	};
	
	axes.row.main = {
	  start: 'x',
	  end: 'x2',
	  size: 'w'
	};
	axes.row.cross = {
	  start: 'y',
	  end: 'y2',
	  size: 'h'
	};
	axes.column.main = axes.row.cross;
	axes.column.cross = axes.row.main;
	
	var types = [{ name: 'side', values: ['start', 'end'] }, { name: 'standing', values: ['above', 'right', 'below', 'left'] }, { name: 'flow', values: ['column', 'row'] }];
	
	var validTypeValues = types.reduce(function (xs, _ref) {
	  var values = _ref.values;
	  return xs.concat(values);
	}, []);
	
	var centerOfSize = function centerOfSize(flow, axis, size) {
	  return size[axes[flow][axis].size] / 2;
	};
	
	var centerOfBounds = function centerOfBounds(flow, axis, bounds) {
	  return bounds[axes[flow][axis].start] + bounds[axes[flow][axis].size] / 2;
	};
	
	var centerOfBoundsFromBounds = function centerOfBoundsFromBounds(flow, axis, boundsTo, boundsFrom) {
	  return centerOfBounds(flow, axis, boundsTo) - boundsFrom[axes[flow][axis].start];
	};
	
	var place = function place(flow, axis, align, bounds, size) {
	  var axisProps = axes[flow][axis];
	  return align === 'center' ? centerOfBounds(flow, axis, bounds) - centerOfSize(flow, axis, size) : align === 'end' ? bounds[axisProps.end] : align === 'start'
	  
	  ? bounds[axisProps.start] - size[axisProps.size] : null;
	};
	
	
	
	var El = {};
	
	El.calcBounds = function (el) {
	
	  if (el === _platform.window) {
	    return {
	      x: 0,
	      y: 0,
	      x2: el.innerWidth,
	      y2: el.innerHeight,
	      w: el.innerWidth,
	      h: el.innerHeight
	    };
	  }
	
	  var b = el.getBoundingClientRect();
	
	  return {
	    x: b.left,
	    y: b.top,
	    x2: b.right,
	    y2: b.bottom,
	    w: b.right - b.left,
	    h: b.bottom - b.top
	  };
	};
	
	El.calcSize = function (el) {
	  return el === _platform.window ? { w: el.innerWidth, h: el.innerHeight } : { w: el.offsetWidth, h: el.offsetHeight };
	};
	
	El.calcScrollSize = function (el) {
	  return el === _platform.window ? {
	    w: el.scrollX || el.pageXOffset,
	    h: el.scrollY || el.pageYOffset
	  } : { w: el.scrollLeft, h: el.scrollTop };
	};
	
	
	
	var getPreferenceType = function getPreferenceType(preference) {
	  return types.reduce(function (found, type) {
	    return found ? found : type.values.indexOf(preference) !== -1 ? type.name : null;
	  }, null);
	};
	
	
	
	var fitWithinChecker = function fitWithinChecker(dimension) {
	  return function (domainSize, itemSize) {
	    return domainSize[dimension] >= itemSize[dimension];
	  };
	};
	
	var doesWidthFitWithin = fitWithinChecker('w');
	var doesHeightFitWithin = fitWithinChecker('h');
	
	var doesFitWithin = function doesFitWithin(domainSize, itemSize) {
	  return doesWidthFitWithin(domainSize, itemSize) && doesHeightFitWithin(domainSize, itemSize);
	};
	
	
	
	var createPreferenceError = function createPreferenceError(givenValue) {
	  return new Error('The given layout placement of "' + givenValue + '" is not a valid choice. Valid choices are: ' + validTypeValues.join(' | ') + '.');
	};
	
	
	
	var pickZone = function pickZone(opts, frameBounds, targetBounds, size) {
	  var t = targetBounds;
	  var f = frameBounds;
	  var zones = [{ side: 'start', standing: 'above', flow: 'column', order: -1, w: f.x2, h: t.y }, { side: 'end', standing: 'right', flow: 'row', order: 1, w: f.x2 - t.x2, h: f.y2 }, { side: 'end', standing: 'below', flow: 'column', order: 1, w: f.x2, h: f.y2 - t.y2 }, { side: 'start', standing: 'left', flow: 'row', order: -1, w: t.x, h: f.y2 }];
	
	  
	  zones.forEach(function (z) {
	    z.cutOff = -Math.max(0, Math.min(z.w, size.w)) * Math.max(0, Math.min(z.h, size.h));
	  });
	  zones.sort(function (a, b) {
	    return a.cutOff - b.cutOff;
	  });
	
	  var availZones = zones.filter(function (zone) {
	    return doesFitWithin(zone, size);
	  });
	
	  
	
	  if (opts.place) {
	    var _ret = (function () {
	      var type = getPreferenceType(opts.place);
	      if (!type) throw createPreferenceError(opts.place);
	      var finder = function finder(z) {
	        return z[type] === opts.place;
	      };
	      return {
	        v: (0, _utils.find)(finder, availZones) || (0, _utils.find)(finder, zones)
	      };
	    })();
	
	    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	  }
	
	  
	
	  if (opts.preferPlace) {
	    var _ret2 = (function () {
	      var preferenceType = getPreferenceType(opts.preferPlace);
	      if (!preferenceType) throw createPreferenceError(opts.preferPlace);
	
	      
	      var preferredAvailZones = availZones.filter(function (zone) {
	        return zone[preferenceType] === opts.preferPlace;
	      });
	      if (preferredAvailZones.length) return {
	          v: preferredAvailZones[0]
	        };
	
	      
	      
	      var preferredZones = zones.filter(function (zone) {
	        return zone[preferenceType] === opts.preferPlace;
	      });
	      if (preferredZones.length) return {
	          v: preferredZones[0]
	        };
	    })();
	
	    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
	  }
	
	  
	  return availZones.length ? availZones[0] : zones[0];
	};
	
	
	
	var calcRelPos = function calcRelPos(zone, masterBounds, slaveSize) {
	  var _ref2;
	
	  var _axes$zone$flow = axes[zone.flow];
	  var main = _axes$zone$flow.main;
	  var cross = _axes$zone$flow.cross;
	  
	
	  var crossAlign = 'center';
	  var mainStart = place(zone.flow, 'main', zone.side, masterBounds, slaveSize);
	  var mainSize = slaveSize[main.size];
	  var crossStart = place(zone.flow, 'cross', crossAlign, masterBounds, slaveSize);
	  var crossSize = slaveSize[cross.size];
	
	  return _ref2 = {}, _defineProperty(_ref2, main.start, mainStart), _defineProperty(_ref2, 'mainLength', mainSize), _defineProperty(_ref2, main.end, mainStart + mainSize), _defineProperty(_ref2, cross.start, crossStart), _defineProperty(_ref2, 'crossLength', crossSize), _defineProperty(_ref2, cross.end, crossStart + crossSize), _ref2;
	};
	
	exports.default = {
	  El: El,
	  types: types,
	  validTypeValues: validTypeValues,
	  calcRelPos: calcRelPos,
	  place: place,
	  pickZone: pickZone,
	  axes: axes,
	  centerOfSize: centerOfSize,
	  centerOfBounds: centerOfBounds,
	  centerOfBoundsFromBounds: centerOfBoundsFromBounds,
	  doesFitWithin: doesFitWithin,
	  equalCoords: _utils.equalRecords
	};
	exports.El = El;
	exports.types = types;
	exports.validTypeValues = validTypeValues;
	exports.calcRelPos = calcRelPos;
	exports.place = place;
	exports.pickZone = pickZone;
	exports.axes = axes;
	exports.centerOfSize = centerOfSize;
	exports.centerOfBounds = centerOfBounds;
	exports.centerOfBoundsFromBounds = centerOfBoundsFromBounds;
	exports.doesFitWithin = doesFitWithin;
	exports.equalCoords = _utils.equalRecords;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _reactDom = __webpack_require__(34);
	
	var _utils = __webpack_require__(374);
	
	var _platform = __webpack_require__(373);
	
	var createElement = function createElement(x) {
	  return _platform.isClient ? document.createElement(x) : _utils.noop;
	};
	
	var bodyAppendElement = function bodyAppendElement(x) {
	  return _platform.isClient ? document.body.appendChild(x) : _utils.noop;
	};
	
	var bodyRemoveElement = function bodyRemoveElement(x) {
	  return _platform.isClient ? document.body.removeChild(x) : _utils.noop;
	};
	
	var ReactLayerMixin = function ReactLayerMixin() {
	  return {
	    componentWillMount: function componentWillMount() {
	      this.targetBounds = null;
	      
	      this.layerContainerNode = createElement('div');
	    },
	    componentDidMount: function componentDidMount() {
	      
	      bodyAppendElement(this.layerContainerNode);
	      this._layerRender();
	    },
	    componentDidUpdate: function componentDidUpdate() {
	      this._layerRender();
	    },
	    componentWillUnmount: function componentWillUnmount() {
	      this._layerUnrender();
	      
	      bodyRemoveElement(this.layerContainerNode);
	    },
	    _layerRender: function _layerRender() {
	      var layerReactEl = this.renderLayer();
	      if (!layerReactEl) {
	        this.layerReactComponent = null;
	        (0, _reactDom.render)(_react.DOM.noscript(), this.layerContainerNode);
	      } else {
	        this.layerReactComponent = (0, _reactDom.render)(layerReactEl, this.layerContainerNode);
	      }
	    },
	    _layerUnrender: function _layerUnrender() {
	      if (this.layerWillUnmount) this.layerWillUnmount(this.layerContainerNode);
	      (0, _reactDom.unmountComponentAtNode)(this.layerContainerNode);
	    }
	  };
	};
	
	
	
	
	exports.default = ReactLayerMixin;

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Tip = _react2.default.createClass({
	  name: 'tip',
	  render: function render() {
	    var direction = this.props.direction;
	
	    var size = this.props.size || 24;
	    var isPortrait = direction === 'up' || direction === 'down';
	    var mainLength = size;
	    var crossLength = size * 2;
	    var points = direction === 'up' ? '0,' + mainLength + ' ' + mainLength + ',0, ' + crossLength + ',' + mainLength : direction === 'down' ? '0,0 ' + mainLength + ',' + mainLength + ', ' + crossLength + ',0' : direction === 'left' ? mainLength + ',0 0,' + mainLength + ', ' + mainLength + ',' + crossLength : '0,0 ' + mainLength + ',' + mainLength + ', 0,' + crossLength;
	    var props = {
	      className: 'Popover-tip',
	      width: isPortrait ? crossLength : mainLength,
	      height: isPortrait ? mainLength : crossLength
	    };
	    var triangle = _react.DOM.svg(props, _react.DOM.polygon({
	      className: 'Popover-tipShape',
	      points: points
	    }));
	    return triangle;
	  }
	});
	
	exports.default = Tip;

 },

 function(module, exports, __webpack_require__) {

	 if (false) { (function () { var ReactHotAPI = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _stringify = __webpack_require__(386);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _rebass = __webpack_require__(261);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function NodeUp(props) {
	  
	  var propsBool = props.props.length > 0;
	  var stateBool = props.state.length > 0;
	  
	  var propsHeadings = ['prop', 'parent', 'value'];
	  var stateHeadings = ['state', 'value'];
	  var style = {
	    backgroundColor: '#FAFAFA',
	    padding: '1em 1em 1em 1em',
	    border: '1px solid #78909C',
	    borderRadius: '10px'
	  };
	
	  
	  var stateData = props.state.reduce(function (a, b) {
	    return a.concat([[b.name, (0, _stringify2['default'])(b.value, null, 2)]]);
	  }, []);
	  var propsData = props.props.reduce(function (a, b) {
	    return a.concat([[b.name, b.parent, (0, _stringify2['default'])(b.value, null, 2)]]);
	  }, []);
	  return _react2['default'].createElement(
	    'div',
	    { style: style },
	    stateBool ? _react2['default'].createElement(
	      'div',
	      null,
	      _react2['default'].createElement(
	        _rebass.Heading,
	        null,
	        'STATE'
	      ),
	      _react2['default'].createElement(_rebass.Table, {
	        data: stateData,
	        headings: stateHeadings
	      })
	    ) : null,
	    propsBool ? _react2['default'].createElement(
	      'div',
	      null,
	      _react2['default'].createElement(
	        _rebass.Heading,
	        null,
	        'PROPS'
	      ),
	      _react2['default'].createElement(_rebass.Table, {
	        data: propsData,
	        headings: propsHeadings
	      })
	    ) : null,
	    !propsBool && !stateBool ? _react2['default'].createElement(
	      _rebass.Heading,
	      null,
	      'nothing to see here!'
	    ) : null,
	    _react2['default'].createElement(
	      _rebass.Heading,
	      null,
	      'EVENTS'
	    ),
	    _react2['default'].createElement(
	      _rebass.Text,
	      null,
	      'coming soon(ish)'
	    )
	  );
	}
	
	NodeUp.propTypes = {
	  props: _react2['default'].PropTypes.array,
	  state: _react2['default'].PropTypes.array
	};
	
	NodeUp.defaultProps = {
	  props: [],
	  state: []
	};
	
	exports['default'] = NodeUp;
	
	 }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "NodeUp.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

 },

 function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(387), __esModule: true };

 },

 function(module, exports, __webpack_require__) {

	var core  = __webpack_require__(185)
	  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
	module.exports = function stringify(it){ 
	  return $JSON.stringify.apply($JSON, arguments);
	};

 },

 function(module, exports, __webpack_require__) {

	
	var baseClone = __webpack_require__(389);
	
	
	function cloneDeep(value) {
	  return baseClone(value, true, true);
	}
	
	module.exports = cloneDeep;


 },

 function(module, exports, __webpack_require__) {

	(function(module, global) {
	
	
	var LARGE_ARRAY_SIZE = 200;
	
	
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	
	var reFlags = /\w*$/;
	
	
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;
	
	
	var objectTypes = {
	  'function': true,
	  'object': true
	};
	
	
	var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
	  ? exports
	  : undefined;
	
	
	var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
	  ? module
	  : undefined;
	
	
	var moduleExports = (freeModule && freeModule.exports === freeExports)
	  ? freeExports
	  : undefined;
	
	
	var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);
	
	
	var freeSelf = checkGlobal(objectTypes[typeof self] && self);
	
	
	var freeWindow = checkGlobal(objectTypes[typeof window] && window);
	
	
	var thisGlobal = checkGlobal(objectTypes[typeof this] && this);
	
	
	var root = freeGlobal ||
	  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
	    freeSelf || thisGlobal || Function('return this')();
	
	
	function addMapEntry(map, pair) {
	  
	  map.set(pair[0], pair[1]);
	  return map;
	}
	
	
	function addSetEntry(set, value) {
	  set.add(value);
	  return set;
	}
	
	
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array.length;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	
	function checkGlobal(value) {
	  return (value && value.Object === Object) ? value : null;
	}
	
	
	function isHostObject(value) {
	  
	  
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	
	var arrayProto = Array.prototype,
	    objectProto = Object.prototype;
	
	
	var funcToString = Function.prototype.toString;
	
	
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	
	var objectToString = objectProto.toString;
	
	
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	
	var Buffer = moduleExports ? root.Buffer : undefined,
	    Symbol = root.Symbol,
	    Uint8Array = root.Uint8Array,
	    getOwnPropertySymbols = Object.getOwnPropertySymbols,
	    objectCreate = Object.create,
	    propertyIsEnumerable = objectProto.propertyIsEnumerable,
	    splice = arrayProto.splice;
	
	
	var nativeGetPrototype = Object.getPrototypeOf,
	    nativeKeys = Object.keys;
	
	
	var DataView = getNative(root, 'DataView'),
	    Map = getNative(root, 'Map'),
	    Promise = getNative(root, 'Promise'),
	    Set = getNative(root, 'Set'),
	    WeakMap = getNative(root, 'WeakMap'),
	    nativeCreate = getNative(Object, 'create');
	
	
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}
	
	
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}
	
	
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}
	
	
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	
	function listCacheClear() {
	  this.__data__ = [];
	}
	
	
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}
	
	
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}
	
	
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}
	
	
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}
	
	
	function stackClear() {
	  this.__data__ = new ListCache;
	}
	
	
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}
	
	
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {
	    cache = this.__data__ = new MapCache(cache.__data__);
	  }
	  cache.set(key, value);
	  return this;
	}
	
	
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}
	
	
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}
	
	
	function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	  var result;
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;
	
	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      if (isHostObject(value)) {
	        return object ? value : {};
	      }
	      result = initCloneObject(isFunc ? {} : value);
	      if (!isDeep) {
	        return copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, baseClone, isDeep);
	    }
	  }
	  
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);
	
	  if (!isArr) {
	    var props = isFull ? getAllKeys(value) : keys(value);
	  }
	  
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	  });
	  return result;
	}
	
	
	function baseCreate(proto) {
	  return isObject(proto) ? objectCreate(proto) : {};
	}
	
	
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}
	
	
	function baseHas(object, key) {
	  
	  
	  
	  return hasOwnProperty.call(object, key) ||
	    (typeof object == 'object' && key in object && getPrototype(object) === null);
	}
	
	
	function baseKeys(object) {
	  return nativeKeys(Object(object));
	}
	
	
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var result = new buffer.constructor(buffer.length);
	  buffer.copy(result);
	  return result;
	}
	
	
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}
	
	
	function cloneMap(map, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	  return arrayReduce(array, addMapEntry, new map.constructor);
	}
	
	
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}
	
	
	function cloneSet(set, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	  return arrayReduce(array, addSetEntry, new set.constructor);
	}
	
	
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}
	
	
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	
	function copyObject(source, props, object, customizer) {
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : source[key];
	
	    assignValue(object, key, newValue);
	  }
	  return object;
	}
	
	
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}
	
	
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}
	
	
	var getLength = baseProperty('length');
	
	
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	
	function getNative(object, key) {
	  var value = object[key];
	  return isNative(value) ? value : undefined;
	}
	
	
	function getPrototype(value) {
	  return nativeGetPrototype(Object(value));
	}
	
	
	function getSymbols(object) {
	  
	  
	  return getOwnPropertySymbols(Object(object));
	}
	
	
	if (!getOwnPropertySymbols) {
	  getSymbols = function() {
	    return [];
	  };
	}
	
	
	function getTag(value) {
	  return objectToString.call(value);
	}
	
	
	
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	
	function initCloneArray(array) {
	  var length = array.length,
	      result = array.constructor(length);
	
	  
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}
	
	
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	
	function initCloneByTag(object, tag, cloneFunc, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);
	
	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);
	
	    case dataViewTag:
	      return cloneDataView(object, isDeep);
	
	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);
	
	    case mapTag:
	      return cloneMap(object, isDeep, cloneFunc);
	
	    case numberTag:
	    case stringTag:
	      return new Ctor(object);
	
	    case regexpTag:
	      return cloneRegExp(object);
	
	    case setTag:
	      return cloneSet(object, isDeep, cloneFunc);
	
	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}
	
	
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}
	
	
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	
	function isArguments(value) {
	  
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	
	var isArray = Array.isArray;
	
	
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value)) && !isFunction(value);
	}
	
	
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	
	var isBuffer = !Buffer ? constant(false) : function(value) {
	  return value instanceof Buffer;
	};
	
	
	function isFunction(value) {
	  
	  
	  
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	
	function isNative(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}
	
	
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = baseClone;
	
	}.call(exports, __webpack_require__(390)(module), (function() { return this; }())))

 },

 function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


 },

 function(module, exports, __webpack_require__) {

	 if (false) { (function () { var ReactHotAPI = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(392);
	
	var _monocleApp = __webpack_require__(405);
	
	var _monocleApp2 = _interopRequireDefault(_monocleApp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = (0, _redux.createStore)(_monocleApp2['default']);
	
	 }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "monocleStore.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

 },

 function(module, exports, __webpack_require__) {

	(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;
	
	var _createStore = __webpack_require__(393);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _combineReducers = __webpack_require__(400);
	
	var _combineReducers2 = _interopRequireDefault(_combineReducers);
	
	var _bindActionCreators = __webpack_require__(402);
	
	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
	
	var _applyMiddleware = __webpack_require__(403);
	
	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
	
	var _compose = __webpack_require__(404);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _warning = __webpack_require__(401);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	
	function isCrushed() {}
	
	if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
	  (0, _warning2["default"])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = _createStore2["default"];
	exports.combineReducers = _combineReducers2["default"];
	exports.bindActionCreators = _bindActionCreators2["default"];
	exports.applyMiddleware = _applyMiddleware2["default"];
	exports.compose = _compose2["default"];
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports["default"] = createStore;
	
	var _isPlainObject = __webpack_require__(394);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(398);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};
	
	
	function createStore(reducer, initialState, enhancer) {
	  var _ref2;
	
	  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = initialState;
	    initialState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, initialState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = initialState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  
	  function getState() {
	    return currentState;
	  }
	
	  
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  
	  function dispatch(action) {
	    if (!(0, _isPlainObject2["default"])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }
	
	    return action;
	  }
	
	  
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      
	
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2["default"]] = function () {
	      return this;
	    }, _ref;
	  }
	
	  
	  
	  
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2["default"]] = observable, _ref2;
	}

 },

 function(module, exports, __webpack_require__) {

	var getPrototype = __webpack_require__(395),
	    isHostObject = __webpack_require__(396),
	    isObjectLike = __webpack_require__(397);
	
	
	var objectTag = '[object Object]';
	
	
	var objectProto = Object.prototype;
	
	
	var funcToString = Function.prototype.toString;
	
	
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	
	var objectCtorString = funcToString.call(Object);
	
	
	var objectToString = objectProto.toString;
	
	
	function isPlainObject(value) {
	  if (!isObjectLike(value) ||
	      objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}
	
	module.exports = isPlainObject;


 },

 function(module, exports) {

	
	var nativeGetPrototype = Object.getPrototypeOf;
	
	
	function getPrototype(value) {
	  return nativeGetPrototype(Object(value));
	}
	
	module.exports = getPrototype;


 },

 function(module, exports) {

	
	function isHostObject(value) {
	  
	  
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	module.exports = isHostObject;


 },

 function(module, exports) {

	
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


 },

 function(module, exports, __webpack_require__) {

	(function(global) {
	'use strict';
	
	module.exports = __webpack_require__(399)(global || window || this);
	
	}.call(exports, (function() { return this; }())))

 },

 function(module, exports) {

	'use strict';
	
	module.exports = function symbolObservablePonyfill(root) {
		var result;
		var Symbol = root.Symbol;
	
		if (typeof Symbol === 'function') {
			if (Symbol.observable) {
				result = Symbol.observable;
			} else {
				result = Symbol('observable');
				Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};


 },

 function(module, exports, __webpack_require__) {

	(function(process) {'use strict';
	
	exports.__esModule = true;
	exports["default"] = combineReducers;
	
	var _createStore = __webpack_require__(393);
	
	var _isPlainObject = __webpack_require__(394);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(401);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';
	
	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!(0, _isPlainObject2["default"])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key);
	  });
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}
	
	
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];
	
	    if (sanityError) {
	      throw sanityError;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);
	      if (warningMessage) {
	        (0, _warning2["default"])(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}
	}.call(exports, __webpack_require__(4)))

 },

 function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = warning;
	
	function warning(message) {
	  
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  
	  try {
	    
	    
	    
	    throw new Error(message);
	    
	  } catch (e) {}
	  
	}

 },

 function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}
	
	
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports["default"] = applyMiddleware;
	
	var _compose = __webpack_require__(404);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function (reducer, initialState, enhancer) {
	      var store = createStore(reducer, initialState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2["default"].apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

 },

 function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = compose;
	
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  } else {
	    var _ret = function () {
	      var last = funcs[funcs.length - 1];
	      var rest = funcs.slice(0, -1);
	      return {
	        v: function v() {
	          return rest.reduceRight(function (composed, f) {
	            return f(composed);
	          }, last.apply(undefined, arguments));
	        }
	      };
	    }();
	
	    if (typeof _ret === "object") return _ret.v;
	  }
	}

 },

 function(module, exports, __webpack_require__) {

	 if (false) { (function () { var ReactHotAPI = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _assign = __webpack_require__(406);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var monocleApp = function () {
	  function monocleApp() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];
	
	    switch (action.type) {
	      case 'UPDATE_STATE':
	        var updatedState = (0, _assign2['default'])({}, state);
	        if (state[action.name]) {
	          updatedState[action.name] = (0, _assign2['default'])({}, action.state);
	        } else {
	          var currentComponentState = (0, _assign2['default'])({}, updatedState[action.name]);
	          updatedState[action.name] = (0, _assign2['default'])(currentComponentState, action.state);
	        }
	        return updatedState;
	      default:
	        return state;
	    }
	  }
	
	  return monocleApp;
	}();
	
	exports['default'] = monocleApp;
	
	 }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/michaelchoa/Development/codesmith/react-monocle/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "monocleApp.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

 },

 function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(407), __esModule: true };

 },

 function(module, exports, __webpack_require__) {

	__webpack_require__(408);
	module.exports = __webpack_require__(185).Object.assign;

 },

 function(module, exports, __webpack_require__) {

	
	var $export = __webpack_require__(184);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(409)});

 },

 function(module, exports, __webpack_require__) {

	'use strict';
	
	var getKeys  = __webpack_require__(217)
	  , gOPS     = __webpack_require__(241)
	  , pIE      = __webpack_require__(242)
	  , toObject = __webpack_require__(175)
	  , IObject  = __webpack_require__(220)
	  , $assign  = Object.assign;
	
	
	module.exports = !$assign || __webpack_require__(194)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ 
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

 }
 ]);